declare const GetLolChampions: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly armor: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmor";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly armorperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmorPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackdamage: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamage";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackdamageperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamagePerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackrange: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackRange";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackspeedoffset: {
                            readonly items: {
                                readonly title: "LoLAttackSpeedOffset";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackspeedperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackSpeedPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly crit: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCrit";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly critperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCritPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHP";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegen";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLChampionID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly movespeed: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMoveSpeed";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMP";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegen";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly spellblock: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResist";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly spellblockperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResistPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly armor: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmor";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly armorperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmorPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackdamage: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamage";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackdamageperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamagePerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackrange: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackRange";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackspeedoffset: {
                            readonly items: {
                                readonly title: "LoLAttackSpeedOffset";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackspeedperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackSpeedPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly crit: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCrit";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly critperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCritPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHP";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegen";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLChampionID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly movespeed: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMoveSpeed";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMP";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegen";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly spellblock: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResist";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly spellblockperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResistPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["armor", "-armor", "armorperlevel", "-armorperlevel", "attackdamage", "-attackdamage", "attackdamageperlevel", "-attackdamageperlevel", "attackrange", "-attackrange", "attackspeedoffset", "-attackspeedoffset", "attackspeedperlevel", "-attackspeedperlevel", "crit", "-crit", "critperlevel", "-critperlevel", "hp", "-hp", "hpperlevel", "-hpperlevel", "hpregen", "-hpregen", "hpregenperlevel", "-hpregenperlevel", "id", "-id", "movespeed", "-movespeed", "mp", "-mp", "mpperlevel", "-mpperlevel", "mpregen", "-mpregen", "mpregenperlevel", "-mpregenperlevel", "name", "-name", "spellblock", "-spellblock", "spellblockperlevel", "-spellblockperlevel"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLChampionName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly armor: {
                        readonly minimum: 0;
                        readonly title: "LoLArmor";
                        readonly type: "number";
                    };
                    readonly armorperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLArmorPerLevel";
                        readonly type: "number";
                    };
                    readonly attackdamage: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackDamage";
                        readonly type: "number";
                    };
                    readonly attackdamageperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackDamagePerLevel";
                        readonly type: "number";
                    };
                    readonly attackrange: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackRange";
                        readonly type: "number";
                    };
                    readonly attackspeedoffset: {
                        readonly deprecated: false;
                        readonly title: "LoLAttackSpeedOffset";
                        readonly type: readonly ["number", "null"];
                    };
                    readonly attackspeedperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackSpeedPerLevel";
                        readonly type: "number";
                    };
                    readonly big_image_url: {
                        readonly format: "uri";
                        readonly title: "LoLChampionBigImageURL";
                        readonly type: "string";
                    };
                    readonly crit: {
                        readonly minimum: 0;
                        readonly title: "LoLCrit";
                        readonly type: "number";
                    };
                    readonly critperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLCritPerLevel";
                        readonly type: "number";
                    };
                    readonly hp: {
                        readonly minimum: 0;
                        readonly title: "LoLHP";
                        readonly type: "number";
                    };
                    readonly hpperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLHPPerLevel";
                        readonly type: "number";
                    };
                    readonly hpregen: {
                        readonly minimum: 0;
                        readonly title: "LoLHPRegen";
                        readonly type: "number";
                    };
                    readonly hpregenperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLHPRegenPerLevel";
                        readonly type: "number";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLChampionID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly format: "uri";
                        readonly title: "LoLChampionImageURL";
                        readonly type: "string";
                    };
                    readonly movespeed: {
                        readonly minimum: 0;
                        readonly title: "LoLMoveSpeed";
                        readonly type: "number";
                    };
                    readonly mp: {
                        readonly minimum: 0;
                        readonly title: "LoLMP";
                        readonly type: "number";
                    };
                    readonly mpperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMPPerLevel";
                        readonly type: "number";
                    };
                    readonly mpregen: {
                        readonly minimum: 0;
                        readonly title: "LoLMPRegen";
                        readonly type: "number";
                    };
                    readonly mpregenperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMPRegenPerLevel";
                        readonly type: "number";
                    };
                    readonly name: {
                        readonly title: "LoLChampionName";
                        readonly type: "string";
                    };
                    readonly spellblock: {
                        readonly minimum: 0;
                        readonly title: "LoLMagicResist";
                        readonly type: "number";
                    };
                    readonly spellblockperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMagicResistPerLevel";
                        readonly type: "number";
                    };
                    readonly videogame_versions: {
                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                        readonly items: {
                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                            readonly title: "VideogameVersion";
                            readonly type: "string";
                        };
                        readonly title: "VideogameVersions";
                        readonly type: "array";
                    };
                };
                readonly required: readonly ["armor", "armorperlevel", "attackdamage", "attackdamageperlevel", "attackrange", "attackspeedoffset", "attackspeedperlevel", "big_image_url", "crit", "critperlevel", "hp", "hpperlevel", "hpregen", "hpregenperlevel", "id", "image_url", "movespeed", "mp", "mpperlevel", "mpregen", "mpregenperlevel", "name", "spellblock", "spellblockperlevel", "videogame_versions"];
                readonly title: "LoLChampion";
                readonly type: "object";
            };
            readonly title: "LoLChampions";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolChampionsLolChampionId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_champion_id: {
                    readonly minimum: 1;
                    readonly title: "LoLChampionID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A champion ID";
                };
            };
            readonly required: readonly ["lol_champion_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly armor: {
                    readonly minimum: 0;
                    readonly title: "LoLArmor";
                    readonly type: "number";
                };
                readonly armorperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLArmorPerLevel";
                    readonly type: "number";
                };
                readonly attackdamage: {
                    readonly minimum: 0;
                    readonly title: "LoLAttackDamage";
                    readonly type: "number";
                };
                readonly attackdamageperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLAttackDamagePerLevel";
                    readonly type: "number";
                };
                readonly attackrange: {
                    readonly minimum: 0;
                    readonly title: "LoLAttackRange";
                    readonly type: "number";
                };
                readonly attackspeedoffset: {
                    readonly deprecated: false;
                    readonly title: "LoLAttackSpeedOffset";
                    readonly type: readonly ["number", "null"];
                };
                readonly attackspeedperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLAttackSpeedPerLevel";
                    readonly type: "number";
                };
                readonly big_image_url: {
                    readonly format: "uri";
                    readonly title: "LoLChampionBigImageURL";
                    readonly type: "string";
                };
                readonly crit: {
                    readonly minimum: 0;
                    readonly title: "LoLCrit";
                    readonly type: "number";
                };
                readonly critperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLCritPerLevel";
                    readonly type: "number";
                };
                readonly hp: {
                    readonly minimum: 0;
                    readonly title: "LoLHP";
                    readonly type: "number";
                };
                readonly hpperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLHPPerLevel";
                    readonly type: "number";
                };
                readonly hpregen: {
                    readonly minimum: 0;
                    readonly title: "LoLHPRegen";
                    readonly type: "number";
                };
                readonly hpregenperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLHPRegenPerLevel";
                    readonly type: "number";
                };
                readonly id: {
                    readonly minimum: 1;
                    readonly title: "LoLChampionID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly format: "uri";
                    readonly title: "LoLChampionImageURL";
                    readonly type: "string";
                };
                readonly movespeed: {
                    readonly minimum: 0;
                    readonly title: "LoLMoveSpeed";
                    readonly type: "number";
                };
                readonly mp: {
                    readonly minimum: 0;
                    readonly title: "LoLMP";
                    readonly type: "number";
                };
                readonly mpperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLMPPerLevel";
                    readonly type: "number";
                };
                readonly mpregen: {
                    readonly minimum: 0;
                    readonly title: "LoLMPRegen";
                    readonly type: "number";
                };
                readonly mpregenperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLMPRegenPerLevel";
                    readonly type: "number";
                };
                readonly name: {
                    readonly title: "LoLChampionName";
                    readonly type: "string";
                };
                readonly spellblock: {
                    readonly minimum: 0;
                    readonly title: "LoLMagicResist";
                    readonly type: "number";
                };
                readonly spellblockperlevel: {
                    readonly minimum: 0;
                    readonly title: "LoLMagicResistPerLevel";
                    readonly type: "number";
                };
                readonly videogame_versions: {
                    readonly description: "Array of of video game versions (ie. patches) for this resource";
                    readonly items: {
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    };
                    readonly title: "VideogameVersions";
                    readonly type: "array";
                };
            };
            readonly required: readonly ["armor", "armorperlevel", "attackdamage", "attackdamageperlevel", "attackrange", "attackspeedoffset", "attackspeedperlevel", "big_image_url", "crit", "critperlevel", "hp", "hpperlevel", "hpregen", "hpregenperlevel", "id", "image_url", "movespeed", "mp", "mpperlevel", "mpregen", "mpregenperlevel", "name", "spellblock", "spellblockperlevel", "videogame_versions"];
            readonly title: "LoLChampion";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolGamesLolGameId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_game_id: {
                    readonly description: "A LoL game ID";
                    readonly minimum: 1;
                    readonly title: "LoLGameID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["lol_game_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly begin_at: {
                    readonly deprecated: false;
                    readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "GameBeginAt";
                    readonly type: readonly ["string", "null"];
                };
                readonly complete: {
                    readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                    readonly title: "GameComplete";
                    readonly type: "boolean";
                };
                readonly detailed_stats: {
                    readonly description: "Whether historical data is available for the game";
                    readonly title: "GameDetailedStats";
                    readonly type: "boolean";
                };
                readonly end_at: {
                    readonly deprecated: false;
                    readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "GameEndAt";
                    readonly type: readonly ["string", "null"];
                };
                readonly finished: {
                    readonly description: "Whether the game is finished";
                    readonly title: "GameIsFinished";
                    readonly type: "boolean";
                };
                readonly forfeit: {
                    readonly description: "Whether the game has been forfeited";
                    readonly title: "GameIsForfeit";
                    readonly type: "boolean";
                };
                readonly id: {
                    readonly description: "LoL game ID";
                    readonly minimum: 1;
                    readonly title: "LoLGameID";
                    readonly type: "integer";
                };
                readonly length: {
                    readonly deprecated: false;
                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                    readonly minimum: 0;
                    readonly title: "GameLength";
                    readonly type: readonly ["integer", "null"];
                };
                readonly match: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly description: "A match";
                    readonly properties: {
                        readonly begin_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "MatchBeginAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the match offers full stats";
                            readonly title: "MatchDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly draw: {
                            readonly description: "Whether result of the match is a draw";
                            readonly title: "MatchIsDraw";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "MatchEndAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly forfeit: {
                            readonly description: "Whether match was forfeited";
                            readonly title: "MatchIsForfeit";
                            readonly type: "boolean";
                        };
                        readonly game_advantage: {
                            readonly deprecated: false;
                            readonly description: "ID of the opponent with a game advantage";
                            readonly minimum: 1;
                            readonly title: "GameAdvantageOpponent";
                            readonly type: readonly ["integer", "null"];
                        };
                        readonly games: {
                            readonly items: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly begin_at: {
                                        readonly deprecated: false;
                                        readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "GameBeginAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly complete: {
                                        readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                        readonly title: "GameComplete";
                                        readonly type: "boolean";
                                    };
                                    readonly detailed_stats: {
                                        readonly description: "Whether historical data is available for the game";
                                        readonly title: "GameDetailedStats";
                                        readonly type: "boolean";
                                    };
                                    readonly end_at: {
                                        readonly deprecated: false;
                                        readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "GameEndAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly finished: {
                                        readonly description: "Whether the game is finished";
                                        readonly title: "GameIsFinished";
                                        readonly type: "boolean";
                                    };
                                    readonly forfeit: {
                                        readonly description: "Whether the game has been forfeited";
                                        readonly title: "GameIsForfeit";
                                        readonly type: "boolean";
                                    };
                                    readonly id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "LoL game ID";
                                            readonly minimum: 1;
                                            readonly title: "LoLGameID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "Counter-Strike game ID";
                                            readonly minimum: 1;
                                            readonly title: "CSGOGameID";
                                            readonly type: "integer";
                                        }, {
                                            readonly minimum: 1;
                                            readonly title: "OwGameID";
                                            readonly type: "integer";
                                        }, {
                                            readonly minimum: 1;
                                            readonly title: "Dota2GameID";
                                            readonly type: "integer";
                                        }, {
                                            readonly minimum: 1;
                                            readonly title: "PUBGGameID";
                                            readonly type: "integer";
                                        }, {
                                            readonly minimum: 1;
                                            readonly title: "ValorantGameID";
                                            readonly type: "integer";
                                        }];
                                        readonly description: "ID of the game.\nIDs are video game-specific, ie. a Valorant game and an Overwatch game can have the same game ID.";
                                        readonly title: "GameID";
                                    };
                                    readonly length: {
                                        readonly deprecated: false;
                                        readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                        readonly minimum: 0;
                                        readonly title: "GameLength";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly match_id: {
                                        readonly minimum: 1;
                                        readonly title: "MatchID";
                                        readonly type: "integer";
                                    };
                                    readonly position: {
                                        readonly description: "Game position in the match. Starts at 1";
                                        readonly minimum: 1;
                                        readonly title: "GamePosition";
                                        readonly type: "integer";
                                    };
                                    readonly status: {
                                        readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                        readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                        readonly title: "GameStatus";
                                        readonly type: "string";
                                    };
                                    readonly winner: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly anyOf: readonly [{
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                }, {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                }];
                                                readonly deprecated: false;
                                                readonly nullable: true;
                                                readonly title: "OpponentID";
                                            };
                                            readonly type: {
                                                readonly deprecated: false;
                                                readonly enum: readonly ["Player", "Team"];
                                                readonly title: "OpponentType";
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`Player` `Team`";
                                            };
                                        };
                                        readonly required: readonly ["id", "type"];
                                        readonly title: "GameWinner";
                                        readonly type: "object";
                                    };
                                    readonly winner_type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                };
                                readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "winner", "winner_type"];
                                readonly title: "Game";
                                readonly type: "object";
                            };
                            readonly title: "Games";
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly minimum: 1;
                            readonly title: "MatchID";
                            readonly type: "integer";
                        };
                        readonly league: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly format: "uri";
                                    readonly title: "LeagueImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "LeagueModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "LeagueName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9:_-]+$";
                                    readonly title: "LeagueSlug";
                                    readonly type: "string";
                                };
                                readonly url: {
                                    readonly deprecated: false;
                                    readonly format: "uri";
                                    readonly title: "LeagueURL";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                            readonly title: "BaseLeague";
                            readonly type: "object";
                        };
                        readonly league_id: {
                            readonly minimum: 1;
                            readonly title: "LeagueID";
                            readonly type: "integer";
                        };
                        readonly live: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly opens_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchLiveOpensAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly supported: {
                                    readonly description: "Whether live is supported";
                                    readonly title: "MatchLiveIsSupported";
                                    readonly type: "boolean";
                                };
                                readonly url: {
                                    readonly deprecated: false;
                                    readonly format: "uri";
                                    readonly title: "MatchLiveURL";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["opens_at", "supported", "url"];
                            readonly title: "MatchLive";
                            readonly type: "object";
                        };
                        readonly map_picks: {
                            readonly deprecated: false;
                            readonly description: "**Only applies to Valorant matches. The field will not be present on other video games matches.**\nMap picks, `null` when map picks data is unavailable.\n**Important:** `map_picks` field is only present in the response for subscribers of Valorant Historical plan.";
                            readonly items: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly description: "ID of the map";
                                        readonly minimum: 1;
                                        readonly title: "ValorantMapID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly description: "URL to an image of the map";
                                        readonly format: "uri";
                                        readonly title: "ValorantMapImageURL";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "Name of the map";
                                        readonly title: "ValorantMapName";
                                        readonly type: "string";
                                    };
                                    readonly picking_team_id: {
                                        readonly deprecated: false;
                                        readonly description: "ID of the team that picked the map";
                                        readonly minimum: 1;
                                        readonly title: "ValorantPickingTeamID";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly slug: {
                                        readonly description: "Human-readable identifier of the map";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "ValorantMapSlug";
                                        readonly type: "string";
                                    };
                                    readonly videogame_versions: {
                                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                                        readonly items: {
                                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                            readonly title: "VideogameVersion";
                                            readonly type: "string";
                                        };
                                        readonly title: "VideogameVersions";
                                        readonly type: "array";
                                    };
                                };
                                readonly required: readonly ["id", "image_url", "name", "picking_team_id", "slug", "videogame_versions"];
                                readonly title: "ValorantMapPick";
                                readonly type: "object";
                            };
                            readonly title: "ValorantMapPicks";
                            readonly type: readonly ["array", "null"];
                        };
                        readonly match_type: {
                            readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                            readonly title: "MatchType";
                            readonly type: "string";
                            readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                        };
                        readonly modified_at: {
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "MatchModifiedAt";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly title: "MatchName";
                            readonly type: "string";
                        };
                        readonly number_of_games: {
                            readonly description: "Number of games";
                            readonly minimum: 0;
                            readonly title: "GameCount";
                            readonly type: "integer";
                        };
                        readonly opponents: {
                            readonly items: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly opponent: {
                                        readonly oneOf: readonly [{
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly active: {
                                                    readonly description: "Whether player is active";
                                                    readonly title: "PlayerIsActive";
                                                    readonly type: "boolean";
                                                };
                                                readonly age: {
                                                    readonly deprecated: false;
                                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                    readonly minimum: 0;
                                                    readonly title: "PlayerAge";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly birthday: {
                                                    readonly deprecated: false;
                                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                    readonly title: "PlayerBirthday";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly first_name: {
                                                    readonly deprecated: false;
                                                    readonly description: "First name of the player. `null` if unknown";
                                                    readonly title: "PlayerFirstName";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                                    readonly format: "uri";
                                                    readonly title: "PlayerImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly last_name: {
                                                    readonly deprecated: false;
                                                    readonly description: "Last name of the player. `null` if unknown";
                                                    readonly title: "PlayerLastName";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "PlayerModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "Professional name of the player";
                                                    readonly title: "PlayerName";
                                                    readonly type: "string";
                                                };
                                                readonly nationality: {
                                                    readonly deprecated: false;
                                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                    readonly title: "PlayerNationality";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly role: {
                                                    readonly deprecated: false;
                                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                    readonly title: "PlayerRoleSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "PlayerSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                            readonly title: "BasePlayer";
                                            readonly type: "object";
                                        }, {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly acronym: {
                                                    readonly deprecated: false;
                                                    readonly title: "TeamAcronym";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL of the team logo";
                                                    readonly format: "uri";
                                                    readonly title: "TeamImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly location: {
                                                    readonly deprecated: false;
                                                    readonly description: "The team's organization location";
                                                    readonly title: "TeamLocation";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TeamModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "The name of the team.";
                                                    readonly title: "TeamName";
                                                    readonly type: "string";
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TeamSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                            readonly title: "BaseTeam";
                                            readonly type: "object";
                                        }];
                                        readonly title: "BaseOpponent";
                                    };
                                    readonly type: {
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: "string";
                                        readonly description: "`Player` `Team`";
                                    };
                                };
                                readonly required: readonly ["opponent", "type"];
                                readonly title: "Opponent";
                                readonly type: "object";
                            };
                            readonly title: "Opponents";
                            readonly type: "array";
                        };
                        readonly original_scheduled_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "MatchOriginalScheduledAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly rescheduled: {
                            readonly deprecated: false;
                            readonly description: "Whether match has been rescheduled";
                            readonly title: "MatchIsRescheduled";
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly results: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly score: {
                                            readonly minimum: 0;
                                            readonly title: "MatchScore";
                                            readonly type: "integer";
                                        };
                                        readonly team_id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["score", "team_id"];
                                    readonly title: "MatchTeamResult";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly player_id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly score: {
                                            readonly minimum: 0;
                                            readonly title: "MatchScore";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["player_id", "score"];
                                    readonly title: "MatchPlayerResult";
                                    readonly type: "object";
                                }];
                                readonly title: "MatchResult";
                            };
                            readonly title: "MatchResults";
                            readonly type: "array";
                        };
                        readonly scheduled_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "MatchScheduledAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly serie: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly full_name: {
                                    readonly title: "SerieFullName";
                                    readonly type: "string";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly deprecated: false;
                                    readonly title: "SerieName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly season: {
                                    readonly deprecated: false;
                                    readonly title: "SerieSeason";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "SerieSlug";
                                    readonly type: "string";
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                                readonly year: {
                                    readonly deprecated: false;
                                    readonly minimum: 2012;
                                    readonly title: "SerieYear";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                            readonly title: "BaseSerie";
                            readonly type: "object";
                        };
                        readonly serie_id: {
                            readonly minimum: 1;
                            readonly title: "SerieID";
                            readonly type: "integer";
                        };
                        readonly slug: {
                            readonly deprecated: false;
                            readonly minLength: 1;
                            readonly pattern: "^[ a-zA-Z0-9_-]+$";
                            readonly title: "MatchSlug";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly status: {
                            readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                            readonly title: "MatchStatus";
                            readonly type: "string";
                            readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                        };
                        readonly streams_list: {
                            readonly items: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly embed_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL to embed in an iframe.";
                                        readonly format: "uri";
                                        readonly title: "StreamEmbedURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly language: {
                                        readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                        readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                        readonly title: "StreamLanguage";
                                        readonly type: "string";
                                    };
                                    readonly main: {
                                        readonly description: "Whether it is the main stream. Main stream is always official.";
                                        readonly title: "StreamIsMain";
                                        readonly type: "boolean";
                                    };
                                    readonly official: {
                                        readonly description: "Whether it is an official broadcast.";
                                        readonly title: "StreamIsOfficial";
                                        readonly type: "boolean";
                                    };
                                    readonly raw_url: {
                                        readonly description: "URL to the stream on host website.";
                                        readonly format: "uri";
                                        readonly title: "StreamURL";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                                readonly title: "Stream";
                                readonly type: "object";
                            };
                            readonly title: "StreamsList";
                            readonly type: "array";
                        };
                        readonly tournament: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                    readonly title: "TournamentDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly has_bracket: {
                                    readonly description: "Whether the tournament has a bracket";
                                    readonly title: "TournamentHasBracket";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly live_supported: {
                                    readonly description: "Whether live is supported";
                                    readonly title: "TournamentLiveSupported";
                                    readonly type: "boolean";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "TournamentName";
                                    readonly type: "string";
                                };
                                readonly prizepool: {
                                    readonly deprecated: false;
                                    readonly title: "TournamentPrizepool";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly serie_id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TournamentSlug";
                                    readonly type: "string";
                                };
                                readonly tier: {
                                    readonly deprecated: false;
                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                    readonly title: "TournamentTier";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                            readonly title: "BaseTournament";
                            readonly type: "object";
                        };
                        readonly tournament_id: {
                            readonly minimum: 1;
                            readonly title: "TournamentID";
                            readonly type: "integer";
                        };
                        readonly videogame: {
                            readonly enum: readonly [{
                                readonly id: 1;
                                readonly name: "LoL";
                                readonly slug: "league-of-legends";
                            }, {
                                readonly id: 3;
                                readonly name: "Counter-Strike";
                                readonly slug: "cs-go";
                            }, {
                                readonly id: 4;
                                readonly name: "Dota 2";
                                readonly slug: "dota-2";
                            }, {
                                readonly id: 14;
                                readonly name: "Overwatch";
                                readonly slug: "ow";
                            }, {
                                readonly id: 20;
                                readonly name: "PUBG";
                                readonly slug: "pubg";
                            }, {
                                readonly id: 22;
                                readonly name: "Rocket League";
                                readonly slug: "rl";
                            }, {
                                readonly id: 23;
                                readonly name: "Call of Duty";
                                readonly slug: "cod-mw";
                            }, {
                                readonly id: 24;
                                readonly name: "Rainbow 6 Siege";
                                readonly slug: "r6-siege";
                            }, {
                                readonly id: 25;
                                readonly name: "EA Sports FC";
                                readonly slug: "fifa";
                            }, {
                                readonly id: 26;
                                readonly name: "Valorant";
                                readonly slug: "valorant";
                            }, {
                                readonly id: 27;
                                readonly name: "King of Glory";
                                readonly slug: "kog";
                            }, {
                                readonly id: 28;
                                readonly name: "LoL Wild Rift";
                                readonly slug: "lol-wild-rift";
                            }, {
                                readonly id: 29;
                                readonly name: "StarCraft 2";
                                readonly slug: "starcraft-2";
                            }, {
                                readonly id: 30;
                                readonly name: "StarCraft Brood War";
                                readonly slug: "starcraft-brood-war";
                            }, {
                                readonly id: 31;
                                readonly name: "eSoccer";
                                readonly slug: "e-soccer";
                            }, {
                                readonly id: 32;
                                readonly name: "eBasketball";
                                readonly slug: "e-basketball";
                            }, {
                                readonly id: 33;
                                readonly name: "eCricket";
                                readonly slug: "e-cricket";
                            }, {
                                readonly id: 34;
                                readonly name: "Mobile Legends: Bang Bang";
                                readonly slug: "mlbb";
                            }];
                            readonly title: "CurrentVideogame";
                            readonly type: "object";
                            readonly additionalProperties: true;
                            readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                        };
                        readonly videogame_version: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current: {
                                    readonly description: "Whether this videogame version is current";
                                    readonly title: "VideogameVersionIsCurrent";
                                    readonly type: "boolean";
                                };
                                readonly name: {
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["current", "name"];
                            readonly title: "ShortVideogameVersion";
                            readonly type: readonly ["object", "null"];
                        };
                        readonly winner: {
                            readonly deprecated: false;
                            readonly nullable: true;
                            readonly oneOf: readonly [{
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly active: {
                                        readonly description: "Whether player is active";
                                        readonly title: "PlayerIsActive";
                                        readonly type: "boolean";
                                    };
                                    readonly age: {
                                        readonly deprecated: false;
                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly minimum: 0;
                                        readonly title: "PlayerAge";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly birthday: {
                                        readonly deprecated: false;
                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly title: "PlayerBirthday";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly first_name: {
                                        readonly deprecated: false;
                                        readonly description: "First name of the player. `null` if unknown";
                                        readonly title: "PlayerFirstName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                        readonly format: "uri";
                                        readonly title: "PlayerImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly last_name: {
                                        readonly deprecated: false;
                                        readonly description: "Last name of the player. `null` if unknown";
                                        readonly title: "PlayerLastName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "PlayerModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "Professional name of the player";
                                        readonly title: "PlayerName";
                                        readonly type: "string";
                                    };
                                    readonly nationality: {
                                        readonly deprecated: false;
                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                        readonly title: "PlayerNationality";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly role: {
                                        readonly deprecated: false;
                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                        readonly title: "PlayerRoleSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                readonly title: "BasePlayer";
                                readonly type: "object";
                            }, {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly acronym: {
                                        readonly deprecated: false;
                                        readonly title: "TeamAcronym";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL of the team logo";
                                        readonly format: "uri";
                                        readonly title: "TeamImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly location: {
                                        readonly deprecated: false;
                                        readonly description: "The team's organization location";
                                        readonly title: "TeamLocation";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TeamModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "The name of the team.";
                                        readonly title: "TeamName";
                                        readonly type: "string";
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                readonly title: "BaseTeam";
                                readonly type: "object";
                            }];
                            readonly title: "BaseOpponent";
                        };
                        readonly winner_id: {
                            readonly anyOf: readonly [{
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            }, {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            }];
                            readonly deprecated: false;
                            readonly nullable: true;
                            readonly title: "OpponentID";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "MatchWinnerType";
                            readonly type: "string";
                            readonly description: "`Player` `Team`";
                        };
                    };
                    readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "match_type", "modified_at", "name", "number_of_games", "opponents", "original_scheduled_at", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams_list", "tournament", "tournament_id", "videogame", "videogame_version", "winner", "winner_id", "winner_type"];
                    readonly title: "FullGameMatch";
                    readonly type: "object";
                };
                readonly match_id: {
                    readonly minimum: 1;
                    readonly title: "MatchID";
                    readonly type: "integer";
                };
                readonly players: {
                    readonly deprecated: false;
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Player's data for a Game";
                        readonly properties: {
                            readonly assists: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLAssistCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly champion: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionImageURL";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly title: "LoLChampionName";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["id", "image_url", "name"];
                                readonly title: "BaseLoLChampion";
                                readonly type: readonly ["object", "null"];
                            };
                            readonly creep_score: {
                                readonly deprecated: false;
                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                readonly minimum: 0;
                                readonly title: "LoLCreepScore";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly cs_at_14: {
                                readonly deprecated: false;
                                readonly description: "The player's Creep Score (CS.) at 14minutes";
                                readonly minimum: 0;
                                readonly title: "LolCreepScoreAt14";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly cs_diff_at_14: {
                                readonly deprecated: false;
                                readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                readonly title: "LolCreepScoreDifferenceAt14";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly deaths: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLDeathCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly flags: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly first_blood_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first blood assist";
                                        readonly title: "LoLGotFirstBloodAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_blood_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first blood kill";
                                        readonly title: "LoLGotFirstBloodKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_inhibitor_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first inhibitor assist";
                                        readonly title: "LoLGotFirstInhibitorAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_inhibitor_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first inhibitor kill";
                                        readonly title: "LoLGotFirstInhibitorKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_tower_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first tower assist";
                                        readonly title: "LoLGotGirstTowerAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_tower_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first tower kill";
                                        readonly title: "LoLGotFirstTowerKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                };
                                readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                readonly title: "LoLFlags";
                                readonly type: "object";
                            };
                            readonly game_id: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly gold_earned: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly gold_percentage: {
                                readonly deprecated: false;
                                readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                readonly maximum: 100;
                                readonly minimum: 0;
                                readonly title: "LoLPlayerGoldErnedPercentage";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly gold_spent: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly items: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLItemID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LoLItemImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly is_trinket: {
                                            readonly deprecated: false;
                                            readonly description: "Whether item is a trinket";
                                            readonly title: "LoLItemIsTrinket";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly name: {
                                            readonly title: "LoLItemName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                    readonly title: "BaseLoLItem";
                                    readonly type: "object";
                                };
                                readonly title: "BaseLoLItems";
                                readonly type: "array";
                            };
                            readonly kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLKillCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly kills_counters: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly inhibitors: {
                                        readonly deprecated: false;
                                        readonly description: "Number of inhibitors killed by the player";
                                        readonly minimum: 0;
                                        readonly title: "LoLInhibitorCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions_enemy_jungle: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions_team_jungle: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionsTeamJungleCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly players: {
                                        readonly deprecated: false;
                                        readonly description: "Number of players killed";
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly turrets: {
                                        readonly deprecated: false;
                                        readonly description: "Number of turrets killed";
                                        readonly minimum: 0;
                                        readonly title: "LoLTurretCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly wards: {
                                        readonly deprecated: false;
                                        readonly description: "Number of wards killed by the player";
                                        readonly minimum: 0;
                                        readonly title: "LoLWardCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                readonly title: "LoLKillCounters";
                                readonly type: "object";
                            };
                            readonly kills_series: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly double_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieDouble";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly penta_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSeriePenta";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly quadra_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieQuadra";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly triple_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieTriple";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                readonly title: "LoLKillsSeries";
                                readonly type: "object";
                            };
                            readonly largest_critical_strike: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestCriticalStrike";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly largest_killing_spree: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestKillingSpree";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly largest_multi_kill: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestMultiKill";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly level: {
                                readonly deprecated: false;
                                readonly minimum: 1;
                                readonly title: "LoLChampionLevel";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly magic_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerDamageDealtPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                readonly title: "LoLMagicDamage";
                                readonly type: "object";
                            };
                            readonly masteries: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLMasteryID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLMasteryName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly title: "LoLMastery";
                                    readonly type: "object";
                                };
                                readonly title: "LoLMasteries";
                                readonly type: "array";
                            };
                            readonly minions_killed: {
                                readonly deprecated: true;
                                readonly description: "The player's Creep Score (CS.)";
                                readonly minimum: 0;
                                readonly title: "LoLMinionsKilled";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly opponent: {
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly oneOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly active: {
                                            readonly description: "Whether player is active";
                                            readonly title: "PlayerIsActive";
                                            readonly type: "boolean";
                                        };
                                        readonly age: {
                                            readonly deprecated: false;
                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly minimum: 0;
                                            readonly title: "PlayerAge";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly birthday: {
                                            readonly deprecated: false;
                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly title: "PlayerBirthday";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                            readonly format: "uri";
                                            readonly title: "PlayerImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "PlayerModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly nationality: {
                                            readonly deprecated: false;
                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                            readonly title: "PlayerNationality";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                            readonly title: "PlayerRoleSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "PlayerSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                    readonly title: "BasePlayer";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                }];
                                readonly title: "BaseOpponent";
                            };
                            readonly physical_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerDamageDealtPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                readonly title: "LoLPhysicalDamage";
                                readonly type: "object";
                            };
                            readonly player: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly active: {
                                        readonly description: "Whether player is active";
                                        readonly title: "PlayerIsActive";
                                        readonly type: "boolean";
                                    };
                                    readonly age: {
                                        readonly deprecated: false;
                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly minimum: 0;
                                        readonly title: "PlayerAge";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly birthday: {
                                        readonly deprecated: false;
                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly title: "PlayerBirthday";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly first_name: {
                                        readonly deprecated: false;
                                        readonly description: "First name of the player. `null` if unknown";
                                        readonly title: "PlayerFirstName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                        readonly format: "uri";
                                        readonly title: "PlayerImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly last_name: {
                                        readonly deprecated: false;
                                        readonly description: "Last name of the player. `null` if unknown";
                                        readonly title: "PlayerLastName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "PlayerModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "Professional name of the player";
                                        readonly title: "PlayerName";
                                        readonly type: "string";
                                    };
                                    readonly nationality: {
                                        readonly deprecated: false;
                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                        readonly title: "PlayerNationality";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly role: {
                                        readonly deprecated: false;
                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                        readonly title: "PlayerRoleSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                readonly title: "BasePlayer";
                                readonly type: "object";
                            };
                            readonly player_id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                readonly title: "LoLPlayerRole";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`adc` `jun` `mid` `sup` `top`";
                            };
                            readonly runes: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLRuneID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLRuneName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly title: "LoLRune";
                                    readonly type: "object";
                                };
                                readonly title: "LoLRunes";
                                readonly type: "array";
                            };
                            readonly runes_reforged: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly primary_path: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly description: "ID of the rune";
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneReforgedID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly description: "URL to an image of the rune";
                                                readonly format: "uri";
                                                readonly title: "LoLRuneReforgedImageURL";
                                                readonly type: "string";
                                            };
                                            readonly keystone: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: "object";
                                            };
                                            readonly lesser_runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunesReforged";
                                                readonly type: "array";
                                            };
                                            readonly name: {
                                                readonly description: "Name of the rune path";
                                                readonly title: "LoLRuneReforgedName";
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                readonly title: "LoLRuneReforgedType";
                                                readonly type: "string";
                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                        readonly title: "LoLPlayerPrimaryRunePath";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly secondary_path: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly description: "ID of the rune";
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneReforgedID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly description: "URL to an image of the rune";
                                                readonly format: "uri";
                                                readonly title: "LoLRuneReforgedImageURL";
                                                readonly type: "string";
                                            };
                                            readonly lesser_runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunesReforged";
                                                readonly type: "array";
                                            };
                                            readonly name: {
                                                readonly description: "Name of the rune path";
                                                readonly title: "LoLRuneReforgedName";
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                readonly title: "LoLRuneReforgedType";
                                                readonly type: "string";
                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                        readonly title: "LoLPlayerSecondaryRunePath";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly shards: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly defense: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly flex: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly offense: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                        };
                                        readonly required: readonly ["defense", "flex", "offense"];
                                        readonly title: "LoLPlayerRuneShards";
                                        readonly type: "object";
                                    };
                                };
                                readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                readonly title: "LoLPlayerRunesReforged";
                                readonly type: "object";
                            };
                            readonly spells: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLSpellID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly format: "uri";
                                            readonly title: "LoLSpellImageURL";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LoLSpellName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "name"];
                                    readonly title: "LoLSpell";
                                    readonly type: "object";
                                };
                                readonly title: "LoLSpells";
                                readonly type: "array";
                            };
                            readonly team: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly acronym: {
                                        readonly deprecated: false;
                                        readonly title: "TeamAcronym";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL of the team logo";
                                        readonly format: "uri";
                                        readonly title: "TeamImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly location: {
                                        readonly deprecated: false;
                                        readonly description: "The team's organization location";
                                        readonly title: "TeamLocation";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TeamModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "The name of the team.";
                                        readonly title: "TeamName";
                                        readonly type: "string";
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                readonly title: "BaseTeam";
                                readonly type: "object";
                            };
                            readonly total_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerDamageDealtPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                readonly title: "LoLTotalDamage";
                                readonly type: "object";
                            };
                            readonly total_heal: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalHeal";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly total_time_crowd_control_dealt: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalTimeCrowdControlDealt";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly total_units_healed: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalUnitsHealed";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly true_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerDamageDealtPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                readonly title: "LoLTrueDamage";
                                readonly type: "object";
                            };
                            readonly wards: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLWardsPlaced";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly sight_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLSightWards";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly vision_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLVisionWards";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                readonly title: "LoLWards";
                                readonly type: "object";
                            };
                            readonly wards_placed: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLWardsPlaced";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "cs_diff_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_percentage", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                        readonly title: "LoLGamePlayer";
                        readonly type: "object";
                    };
                    readonly title: "LoLGamePlayers";
                    readonly type: readonly ["array", "null"];
                };
                readonly position: {
                    readonly description: "Game position in the match. Starts at 1";
                    readonly minimum: 1;
                    readonly title: "GamePosition";
                    readonly type: "integer";
                };
                readonly status: {
                    readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                    readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                    readonly title: "GameStatus";
                    readonly type: "string";
                };
                readonly teams: {
                    readonly deprecated: false;
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Team's data for a Game";
                        readonly properties: {
                            readonly bans: {
                                readonly items: {
                                    readonly minimum: 1;
                                    readonly title: "LoLChampionID";
                                    readonly type: "integer";
                                };
                                readonly title: "LoLChampionIDs";
                                readonly type: "array";
                            };
                            readonly baron_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLBaronKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly chemtech_drake_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLChemtechDrakeKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly cloud_drake_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLCloudDrakeKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly color: {
                                readonly enum: readonly ["blue", "red"];
                                readonly title: "LoLTeamColor";
                                readonly type: "string";
                                readonly description: "`blue` `red`";
                            };
                            readonly dragon_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLDragonKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly elder_drake_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLElderDrakeKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly first_baron: {
                                readonly deprecated: false;
                                readonly description: "Whether team got first baron Nashor";
                                readonly title: "LoLTeamGotFirstBaron";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly first_blood: {
                                readonly deprecated: false;
                                readonly description: "Whether team got first blood";
                                readonly title: "LoLTeamGotFirstBlood";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly first_dragon: {
                                readonly deprecated: false;
                                readonly description: "Whether team got first dragon";
                                readonly title: "LoLTeamGotFirstDragon";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly first_herald: {
                                readonly deprecated: false;
                                readonly description: "Whether team got first herald";
                                readonly title: "LoLTeamGotFirstHerald";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly first_inhibitor: {
                                readonly deprecated: false;
                                readonly description: "Whether team got first inhibitor";
                                readonly title: "LoLTeamGotFirstInhibitor";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly first_tower: {
                                readonly deprecated: false;
                                readonly description: "Whether team got first tower";
                                readonly title: "LoLTeamGotFirstTower";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly first_voidgrub: {
                                readonly deprecated: false;
                                readonly description: "Whether team killed the first voidgrub";
                                readonly title: "LoLTeamGotFirstVoidgrub";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly gold_earned: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly herald_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLHeraldKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly hextech_drake_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLHextechDrakeKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly infernal_drake_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLInfernalDrakeKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly inhibitor_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLInhibitorKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLKillCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly mountain_drake_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLMountainDrakeKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly ocean_drake_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLOceanDrakeKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly player_ids: {
                                readonly items: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly title: "PlayerIDs";
                                readonly type: "array";
                            };
                            readonly team: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly acronym: {
                                        readonly deprecated: false;
                                        readonly title: "TeamAcronym";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL of the team logo";
                                        readonly format: "uri";
                                        readonly title: "TeamImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly location: {
                                        readonly deprecated: false;
                                        readonly description: "The team's organization location";
                                        readonly title: "TeamLocation";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TeamModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "The name of the team.";
                                        readonly title: "TeamName";
                                        readonly type: "string";
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                readonly title: "BaseTeam";
                                readonly type: "object";
                            };
                            readonly tower_kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTowerKills";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly voidgrub_kills: {
                                readonly deprecated: false;
                                readonly description: "The number of voidgrubs killed by a team.";
                                readonly maximum: 6;
                                readonly minimum: 0;
                                readonly title: "LoLVoidgrubKills";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["bans", "baron_kills", "chemtech_drake_kills", "cloud_drake_kills", "color", "dragon_kills", "elder_drake_kills", "first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "gold_earned", "herald_kills", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "mountain_drake_kills", "ocean_drake_kills", "player_ids", "team", "tower_kills", "voidgrub_kills"];
                        readonly title: "LoLGameTeam";
                        readonly type: "object";
                    };
                    readonly title: "LoLGameTeams";
                    readonly type: readonly ["array", "null"];
                };
                readonly winner: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly id: {
                            readonly anyOf: readonly [{
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            }, {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            }];
                            readonly deprecated: false;
                            readonly nullable: true;
                            readonly title: "OpponentID";
                        };
                        readonly type: {
                            readonly deprecated: false;
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: readonly ["string", "null"];
                            readonly description: "`Player` `Team`";
                        };
                    };
                    readonly required: readonly ["id", "type"];
                    readonly title: "GameWinner";
                    readonly type: "object";
                };
                readonly winner_type: {
                    readonly deprecated: false;
                    readonly enum: readonly ["Player", "Team"];
                    readonly title: "OpponentType";
                    readonly type: readonly ["string", "null"];
                    readonly description: "`Player` `Team`";
                };
            };
            readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match", "match_id", "players", "position", "status", "teams", "winner", "winner_type"];
            readonly title: "LoLGame";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolGamesLolGameIdEvents: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_game_id: {
                    readonly description: "A LoL game ID";
                    readonly minimum: 1;
                    readonly title: "LoLGameID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["lol_game_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly game_id: {
                        readonly description: "LoL game ID";
                        readonly minimum: 1;
                        readonly title: "LoLGameID";
                        readonly type: "integer";
                    };
                    readonly ingame_timestamp: {
                        readonly minimum: 0;
                        readonly title: "InGameTimestamp";
                        readonly type: "integer";
                    };
                    readonly is_first: {
                        readonly description: "Whether event is first of its kind to happen";
                        readonly title: "LoLIsFirstEvent";
                        readonly type: "boolean";
                    };
                    readonly match_id: {
                        readonly minimum: 1;
                        readonly title: "LoLMatchID";
                        readonly type: "integer";
                    };
                    readonly payload: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly assists: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly champion: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLChampionID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLChampionName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "LoLEventChampion";
                                                    readonly type: "object";
                                                };
                                                readonly player_id: {
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                };
                                                readonly player_name: {
                                                    readonly description: "Professional name of the player";
                                                    readonly title: "PlayerName";
                                                    readonly type: "string";
                                                };
                                                readonly side: {
                                                    readonly enum: readonly ["blue", "red"];
                                                    readonly title: "LoLTeamColor";
                                                    readonly type: "string";
                                                    readonly description: "`blue` `red`";
                                                };
                                            };
                                            readonly required: readonly ["champion", "player_id", "player_name", "side"];
                                            readonly title: "LoLEventPlayerObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["player"];
                                            readonly type: "string";
                                            readonly description: "`player`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventPlayer";
                                    readonly type: "object";
                                };
                                readonly title: "LoLEventAssists";
                                readonly type: "array";
                            };
                            readonly killer: {
                                readonly oneOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Chemtech Drake", "Cloud Drake", "Elder Drake", "Hextech Drake", "Infernal Drake", "Mountain Drake", "Ocean Drake"];
                                                    readonly title: "LoLDrakeName";
                                                    readonly type: "string";
                                                    readonly description: "`Chemtech Drake` `Cloud Drake` `Elder Drake` `Hextech Drake` `Infernal Drake` `Mountain Drake` `Ocean Drake`";
                                                };
                                                readonly type: {
                                                    readonly enum: readonly ["chemtech", "cloud", "elder", "hextech", "infernal", "mountain", "ocean"];
                                                    readonly title: "LoLDrakeType";
                                                    readonly type: "string";
                                                    readonly description: "`chemtech` `cloud` `elder` `hextech` `infernal` `mountain` `ocean`";
                                                };
                                            };
                                            readonly required: readonly ["name", "type"];
                                            readonly title: "LoLEventDrakeObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["drake"];
                                            readonly type: "string";
                                            readonly description: "`drake`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventDrake";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Rift Herald", "riftherald"];
                                                    readonly title: "LoLEventHeraldValue";
                                                    readonly type: "string";
                                                    readonly description: "`Rift Herald` `riftherald`";
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly title: "LoLEventHeraldObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["herald", "rift_herald"];
                                            readonly type: "string";
                                            readonly description: "`herald` `rift_herald`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventHerald";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Minion"];
                                                    readonly title: "LoLEventMinionValue";
                                                    readonly type: "string";
                                                    readonly description: "`Minion`";
                                                };
                                                readonly side: {
                                                    readonly enum: readonly ["blue", "red"];
                                                    readonly title: "LoLTeamColor";
                                                    readonly type: "string";
                                                    readonly description: "`blue` `red`";
                                                };
                                            };
                                            readonly required: readonly ["name", "side"];
                                            readonly title: "LoLEventMinionObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["minion"];
                                            readonly type: "string";
                                            readonly description: "`minion`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventMinion";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Baron Nashor"];
                                                    readonly title: "LoLEventNashorValue";
                                                    readonly type: "string";
                                                    readonly description: "`Baron Nashor`";
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly title: "LoLEventNashorObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["baron_nashor"];
                                            readonly type: "string";
                                            readonly description: "`baron_nashor`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventNashor";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly champion: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLChampionID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLChampionName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "LoLEventChampion";
                                                    readonly type: "object";
                                                };
                                                readonly player_id: {
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                };
                                                readonly player_name: {
                                                    readonly description: "Professional name of the player";
                                                    readonly title: "PlayerName";
                                                    readonly type: "string";
                                                };
                                                readonly side: {
                                                    readonly enum: readonly ["blue", "red"];
                                                    readonly title: "LoLTeamColor";
                                                    readonly type: "string";
                                                    readonly description: "`blue` `red`";
                                                };
                                            };
                                            readonly required: readonly ["champion", "player_id", "player_name", "side"];
                                            readonly title: "LoLEventPlayerObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["player"];
                                            readonly type: "string";
                                            readonly description: "`player`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventPlayer";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Tower"];
                                                    readonly title: "LoLEventTowerValue";
                                                    readonly type: "string";
                                                    readonly description: "`Tower`";
                                                };
                                                readonly side: {
                                                    readonly enum: readonly ["blue", "red"];
                                                    readonly title: "LoLTeamColor";
                                                    readonly type: "string";
                                                    readonly description: "`blue` `red`";
                                                };
                                            };
                                            readonly required: readonly ["name", "side"];
                                            readonly title: "LoLEventTowerObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["tower"];
                                            readonly type: "string";
                                            readonly description: "`tower`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventTower";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Big Corbin", "Big Golem", "Big Wolf", "Blue Buff", "Gromp", "Red Buff", "Small Corbin", "Small Golem", "Small Wolf"];
                                                    readonly title: "LoLEventNeutralMinionValue";
                                                    readonly type: "string";
                                                    readonly description: "`Big Corbin` `Big Golem` `Big Wolf` `Blue Buff` `Gromp` `Red Buff` `Small Corbin` `Small Golem` `Small Wolf`";
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly title: "LoLEventNeutralMinionObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["neutral_minion"];
                                            readonly type: "string";
                                            readonly description: "`neutral_minion`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventNeutralMinion";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Voidgrub"];
                                                    readonly title: "LoLEventVoidgrubValue";
                                                    readonly type: "string";
                                                    readonly description: "`Voidgrub`";
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly title: "LoLEventVoidgrubObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["voidgrub"];
                                            readonly type: "string";
                                            readonly description: "`voidgrub`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventVoidgrub";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly enum: readonly [any];
                                            readonly nullable: true;
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["unknown"];
                                            readonly type: "string";
                                            readonly description: "`unknown`";
                                        };
                                    };
                                    readonly required: readonly ["type"];
                                    readonly title: "LoLEventUnknown";
                                    readonly type: "object";
                                }];
                                readonly title: "LoLEventKiller";
                            };
                            readonly victim: {
                                readonly oneOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Chemtech Drake", "Cloud Drake", "Elder Drake", "Hextech Drake", "Infernal Drake", "Mountain Drake", "Ocean Drake"];
                                                    readonly title: "LoLDrakeName";
                                                    readonly type: "string";
                                                    readonly description: "`Chemtech Drake` `Cloud Drake` `Elder Drake` `Hextech Drake` `Infernal Drake` `Mountain Drake` `Ocean Drake`";
                                                };
                                                readonly type: {
                                                    readonly enum: readonly ["chemtech", "cloud", "elder", "hextech", "infernal", "mountain", "ocean"];
                                                    readonly title: "LoLDrakeType";
                                                    readonly type: "string";
                                                    readonly description: "`chemtech` `cloud` `elder` `hextech` `infernal` `mountain` `ocean`";
                                                };
                                            };
                                            readonly required: readonly ["name", "type"];
                                            readonly title: "LoLEventDrakeObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["drake"];
                                            readonly type: "string";
                                            readonly description: "`drake`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventDrake";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Rift Herald", "riftherald"];
                                                    readonly title: "LoLEventHeraldValue";
                                                    readonly type: "string";
                                                    readonly description: "`Rift Herald` `riftherald`";
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly title: "LoLEventHeraldObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["herald", "rift_herald"];
                                            readonly type: "string";
                                            readonly description: "`herald` `rift_herald`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventHerald";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Baron Nashor"];
                                                    readonly title: "LoLEventNashorValue";
                                                    readonly type: "string";
                                                    readonly description: "`Baron Nashor`";
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly title: "LoLEventNashorObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["baron_nashor"];
                                            readonly type: "string";
                                            readonly description: "`baron_nashor`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventNashor";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly champion: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLChampionID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLChampionName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "LoLEventChampion";
                                                    readonly type: "object";
                                                };
                                                readonly player_id: {
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                };
                                                readonly player_name: {
                                                    readonly description: "Professional name of the player";
                                                    readonly title: "PlayerName";
                                                    readonly type: "string";
                                                };
                                                readonly side: {
                                                    readonly enum: readonly ["blue", "red"];
                                                    readonly title: "LoLTeamColor";
                                                    readonly type: "string";
                                                    readonly description: "`blue` `red`";
                                                };
                                            };
                                            readonly required: readonly ["champion", "player_id", "player_name", "side"];
                                            readonly title: "LoLEventPlayerObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["player"];
                                            readonly type: "string";
                                            readonly description: "`player`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventPlayer";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Tower"];
                                                    readonly title: "LoLEventTowerValue";
                                                    readonly type: "string";
                                                    readonly description: "`Tower`";
                                                };
                                                readonly side: {
                                                    readonly enum: readonly ["blue", "red"];
                                                    readonly title: "LoLTeamColor";
                                                    readonly type: "string";
                                                    readonly description: "`blue` `red`";
                                                };
                                            };
                                            readonly required: readonly ["name", "side"];
                                            readonly title: "LoLEventTowerObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["tower"];
                                            readonly type: "string";
                                            readonly description: "`tower`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventTower";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Inhibitor"];
                                                    readonly title: "LoLEventInhibitorValue";
                                                    readonly type: "string";
                                                    readonly description: "`Inhibitor`";
                                                };
                                                readonly side: {
                                                    readonly enum: readonly ["blue", "red"];
                                                    readonly title: "LoLTeamColor";
                                                    readonly type: "string";
                                                    readonly description: "`blue` `red`";
                                                };
                                            };
                                            readonly required: readonly ["name", "side"];
                                            readonly title: "LoLEventInhibitorObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["inhibitor"];
                                            readonly type: "string";
                                            readonly description: "`inhibitor`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventInhibitor";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly name: {
                                                    readonly enum: readonly ["Voidgrub"];
                                                    readonly title: "LoLEventVoidgrubValue";
                                                    readonly type: "string";
                                                    readonly description: "`Voidgrub`";
                                                };
                                            };
                                            readonly required: readonly ["name"];
                                            readonly title: "LoLEventVoidgrubObject";
                                            readonly type: "object";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["voidgrub"];
                                            readonly type: "string";
                                            readonly description: "`voidgrub`";
                                        };
                                    };
                                    readonly required: readonly ["object", "type"];
                                    readonly title: "LoLEventVoidgrub";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly object: {
                                            readonly enum: readonly [any];
                                            readonly nullable: true;
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["unknown"];
                                            readonly type: "string";
                                            readonly description: "`unknown`";
                                        };
                                    };
                                    readonly required: readonly ["type"];
                                    readonly title: "LoLEventUnknown";
                                    readonly type: "object";
                                }];
                                readonly title: "LoLEventVictim";
                            };
                        };
                        readonly required: readonly ["assists", "killer", "victim"];
                        readonly title: "LoLEventPayload";
                        readonly type: "object";
                    };
                    readonly tournament_id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly type: {
                        readonly enum: readonly ["baron_nashor_kill", "drake_kill", "inhibitor_kill", "other", "player_kill", "rift_herald_kill", "suicide", "tower_kill", "voidgrub_kill"];
                        readonly title: "LoLEventType";
                        readonly type: "string";
                        readonly description: "`baron_nashor_kill` `drake_kill` `inhibitor_kill` `other` `player_kill` `rift_herald_kill` `suicide` `tower_kill` `voidgrub_kill`";
                    };
                };
                readonly required: readonly ["game_id", "ingame_timestamp", "is_first", "match_id", "payload", "tournament_id", "type"];
                readonly title: "LoLGameEvent";
                readonly type: "object";
            };
            readonly title: "LoLGameEvents";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolGamesLolGameIdFrames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_game_id: {
                    readonly description: "A LoL game ID";
                    readonly minimum: 1;
                    readonly title: "LoLGameID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["lol_game_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly blue: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly acronym: {
                                readonly title: "TeamAcronym";
                                readonly type: "string";
                            };
                            readonly drakes: {
                                readonly minimum: 0;
                                readonly title: "LoLDragonKills";
                                readonly type: "integer";
                            };
                            readonly gold: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly id: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly inhibitors: {
                                readonly description: "Number of inhibitors killed by the player";
                                readonly minimum: 0;
                                readonly title: "LoLInhibitorCount";
                                readonly type: "integer";
                            };
                            readonly kills: {
                                readonly minimum: 0;
                                readonly title: "LoLKillCount";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly nashors: {
                                readonly minimum: 0;
                                readonly title: "LoLBaronKills";
                                readonly type: "integer";
                            };
                            readonly players: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly adc: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                    readonly jun: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                    readonly mid: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                    readonly sup: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                    readonly top: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                };
                                readonly required: readonly ["adc", "jun", "mid", "sup", "top"];
                                readonly title: "LoLPlayersRole";
                                readonly type: "object";
                            };
                            readonly score: {
                                readonly minimum: 0;
                                readonly title: "MatchScore";
                                readonly type: "integer";
                            };
                            readonly towers: {
                                readonly minimum: 0;
                                readonly title: "LoLTowerKills";
                                readonly type: "integer";
                            };
                            readonly voidgrubs: {
                                readonly deprecated: false;
                                readonly description: "The number of voidgrubs killed by a team.";
                                readonly maximum: 6;
                                readonly minimum: 0;
                                readonly title: "LoLVoidgrubKills";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["acronym", "drakes", "gold", "id", "inhibitors", "kills", "name", "nashors", "players", "score", "towers", "voidgrubs"];
                        readonly title: "LoLFrameTeam";
                        readonly type: "object";
                    };
                    readonly current_timestamp: {
                        readonly minimum: 0;
                        readonly title: "InGameTimestamp";
                        readonly type: "integer";
                    };
                    readonly game_id: {
                        readonly description: "LoL game ID";
                        readonly minimum: 1;
                        readonly title: "LoLGameID";
                        readonly type: "integer";
                    };
                    readonly match_id: {
                        readonly minimum: 1;
                        readonly title: "LoLMatchID";
                        readonly type: "integer";
                    };
                    readonly red: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly acronym: {
                                readonly title: "TeamAcronym";
                                readonly type: "string";
                            };
                            readonly drakes: {
                                readonly minimum: 0;
                                readonly title: "LoLDragonKills";
                                readonly type: "integer";
                            };
                            readonly gold: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly id: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly inhibitors: {
                                readonly description: "Number of inhibitors killed by the player";
                                readonly minimum: 0;
                                readonly title: "LoLInhibitorCount";
                                readonly type: "integer";
                            };
                            readonly kills: {
                                readonly minimum: 0;
                                readonly title: "LoLKillCount";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly nashors: {
                                readonly minimum: 0;
                                readonly title: "LoLBaronKills";
                                readonly type: "integer";
                            };
                            readonly players: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly adc: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                    readonly jun: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                    readonly mid: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                    readonly sup: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                    readonly top: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly assists: {
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: "integer";
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: "object";
                                            };
                                            readonly cs: {
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: "integer";
                                            };
                                            readonly deaths: {
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: "integer";
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly kills: {
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: "integer";
                                            };
                                            readonly level: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly summoner_spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "BaseLoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLSpells";
                                                readonly type: "array";
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "cs", "deaths", "id", "kills", "level", "name", "summoner_spells"];
                                        readonly title: "LoLPlayersRoleDetail";
                                        readonly type: "object";
                                    };
                                };
                                readonly required: readonly ["adc", "jun", "mid", "sup", "top"];
                                readonly title: "LoLPlayersRole";
                                readonly type: "object";
                            };
                            readonly score: {
                                readonly minimum: 0;
                                readonly title: "MatchScore";
                                readonly type: "integer";
                            };
                            readonly towers: {
                                readonly minimum: 0;
                                readonly title: "LoLTowerKills";
                                readonly type: "integer";
                            };
                            readonly voidgrubs: {
                                readonly deprecated: false;
                                readonly description: "The number of voidgrubs killed by a team.";
                                readonly maximum: 6;
                                readonly minimum: 0;
                                readonly title: "LoLVoidgrubKills";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["acronym", "drakes", "gold", "id", "inhibitors", "kills", "name", "nashors", "players", "score", "towers", "voidgrubs"];
                        readonly title: "LoLFrameTeam";
                        readonly type: "object";
                    };
                    readonly tournament_id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                };
                readonly required: readonly ["blue", "current_timestamp", "game_id", "match_id", "red", "tournament_id"];
                readonly title: "LoLGameFrame";
                readonly type: "object";
            };
            readonly title: "LoLGameFrames";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolItems: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly flat_armor_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatArmorMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_crit_chance_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatCritChanceMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_hp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPPoolMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_hp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPRegenMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_magic_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMagicDamageMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_mp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPPoolMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_mp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPRegenMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_physical_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatPhysicalDamageMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_spell_block_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatSpellBlockMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_base: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_purchasable: {
                            readonly description: "Whether gold can be bought";
                            readonly title: "LoLGoldPurchasable";
                            readonly type: "boolean";
                        };
                        readonly gold_sell: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_total: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLItemID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLItemName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_attack_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentAttackSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_life_steal_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentLifeStealMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly trinket: {
                            readonly description: "Whether item is a trinket";
                            readonly title: "LoLItemIsTrinket";
                            readonly type: "boolean";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly flat_armor_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatArmorMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_crit_chance_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatCritChanceMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_hp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPPoolMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_hp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPRegenMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_magic_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMagicDamageMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_mp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPPoolMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_mp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPRegenMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_physical_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatPhysicalDamageMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_spell_block_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatSpellBlockMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_base: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_purchasable: {
                            readonly items: {
                                readonly description: "Whether gold can be bought";
                                readonly title: "LoLGoldPurchasable";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_sell: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_total: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLItemID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLItemName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_attack_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentAttackSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_life_steal_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentLifeStealMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["flat_armor_mod", "-flat_armor_mod", "flat_crit_chance_mod", "-flat_crit_chance_mod", "flat_hp_pool_mod", "-flat_hp_pool_mod", "flat_hp_regen_mod", "-flat_hp_regen_mod", "flat_magic_damage_mod", "-flat_magic_damage_mod", "flat_movement_speed_mod", "-flat_movement_speed_mod", "flat_mp_pool_mod", "-flat_mp_pool_mod", "flat_mp_regen_mod", "-flat_mp_regen_mod", "flat_physical_damage_mod", "-flat_physical_damage_mod", "flat_spell_block_mod", "-flat_spell_block_mod", "gold_base", "-gold_base", "gold_purchasable", "-gold_purchasable", "gold_sell", "-gold_sell", "gold_total", "-gold_total", "id", "-id", "name", "-name", "percent_attack_speed_mod", "-percent_attack_speed_mod", "percent_life_steal_mod", "-percent_life_steal_mod", "percent_movement_speed_mod", "-percent_movement_speed_mod"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLItemName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly flat_armor_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatArmorMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_crit_chance_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatCritChanceMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_hp_pool_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatHPPoolMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_hp_regen_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatHPRegenMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_magic_damage_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMagicDamageMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_movement_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMovementSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_mp_pool_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMPPoolMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_mp_regen_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMPRegenMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_physical_damage_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatPhysicalDamageMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_spell_block_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatSpellBlockMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_base: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_purchasable: {
                        readonly deprecated: false;
                        readonly description: "Whether gold can be bought";
                        readonly title: "LoLGoldPurchasable";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly gold_sell: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_total: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLItemID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly deprecated: false;
                        readonly format: "uri";
                        readonly title: "LoLItemImageURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly is_trinket: {
                        readonly deprecated: false;
                        readonly description: "Whether item is a trinket";
                        readonly title: "LoLItemIsTrinket";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly name: {
                        readonly title: "LoLItemName";
                        readonly type: "string";
                    };
                    readonly percent_attack_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentAttackSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_life_steal_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentLifeStealMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_movement_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentMovementSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly videogame_versions: {
                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                        readonly items: {
                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                            readonly title: "VideogameVersion";
                            readonly type: "string";
                        };
                        readonly title: "VideogameVersions";
                        readonly type: "array";
                    };
                };
                readonly required: readonly ["flat_armor_mod", "flat_crit_chance_mod", "flat_hp_pool_mod", "flat_hp_regen_mod", "flat_magic_damage_mod", "flat_movement_speed_mod", "flat_mp_pool_mod", "flat_mp_regen_mod", "flat_physical_damage_mod", "flat_spell_block_mod", "gold_base", "gold_purchasable", "gold_sell", "gold_total", "id", "image_url", "is_trinket", "name", "percent_attack_speed_mod", "percent_life_steal_mod", "percent_movement_speed_mod", "videogame_versions"];
                readonly title: "LoLItem";
                readonly type: "object";
            };
            readonly title: "LoLItems";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolItemsLolItemId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_item_id: {
                    readonly minimum: 1;
                    readonly title: "LoLItemID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "An item ID";
                };
            };
            readonly required: readonly ["lol_item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly flat_armor_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatArmorMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_crit_chance_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatCritChanceMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_hp_pool_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatHPPoolMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_hp_regen_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatHPRegenMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_magic_damage_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatMagicDamageMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_movement_speed_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatMovementSpeedMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_mp_pool_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatMPPoolMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_mp_regen_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatMPRegenMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_physical_damage_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatPhysicalDamageMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly flat_spell_block_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLFlatSpellBlockMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly gold_base: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLGold";
                    readonly type: readonly ["integer", "null"];
                };
                readonly gold_purchasable: {
                    readonly deprecated: false;
                    readonly description: "Whether gold can be bought";
                    readonly title: "LoLGoldPurchasable";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly gold_sell: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLGold";
                    readonly type: readonly ["integer", "null"];
                };
                readonly gold_total: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLGold";
                    readonly type: readonly ["integer", "null"];
                };
                readonly id: {
                    readonly minimum: 1;
                    readonly title: "LoLItemID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly deprecated: false;
                    readonly format: "uri";
                    readonly title: "LoLItemImageURL";
                    readonly type: readonly ["string", "null"];
                };
                readonly is_trinket: {
                    readonly deprecated: false;
                    readonly description: "Whether item is a trinket";
                    readonly title: "LoLItemIsTrinket";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly name: {
                    readonly title: "LoLItemName";
                    readonly type: "string";
                };
                readonly percent_attack_speed_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLPercentAttackSpeedMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly percent_life_steal_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLPercentLifeStealMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly percent_movement_speed_mod: {
                    readonly deprecated: false;
                    readonly minimum: 0;
                    readonly title: "LoLPercentMovementSpeedMod";
                    readonly type: readonly ["integer", "null"];
                };
                readonly videogame_versions: {
                    readonly description: "Array of of video game versions (ie. patches) for this resource";
                    readonly items: {
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    };
                    readonly title: "VideogameVersions";
                    readonly type: "array";
                };
            };
            readonly required: readonly ["flat_armor_mod", "flat_crit_chance_mod", "flat_hp_pool_mod", "flat_hp_regen_mod", "flat_magic_damage_mod", "flat_movement_speed_mod", "flat_mp_pool_mod", "flat_mp_regen_mod", "flat_physical_damage_mod", "flat_spell_block_mod", "gold_base", "gold_purchasable", "gold_sell", "gold_total", "id", "image_url", "is_trinket", "name", "percent_attack_speed_mod", "percent_life_steal_mod", "percent_movement_speed_mod", "videogame_versions"];
            readonly title: "LoLItem";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolLeagues: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly url: {
                            readonly items: {
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly url: {
                            readonly items: {
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["id", "-id", "modified_at", "-modified_at", "name", "-name", "slug", "-slug", "url", "-url"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LeagueName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9:_-]+$";
                            readonly title: "LeagueSlug";
                            readonly type: "string";
                        };
                        readonly url: {
                            readonly format: "uri";
                            readonly title: "LeagueURL";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly deprecated: false;
                        readonly format: "uri";
                        readonly title: "LeagueImageURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "LeagueModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "LeagueName";
                        readonly type: "string";
                    };
                    readonly series: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly full_name: {
                                    readonly title: "SerieFullName";
                                    readonly type: "string";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly deprecated: false;
                                    readonly title: "SerieName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly season: {
                                    readonly deprecated: false;
                                    readonly title: "SerieSeason";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "SerieSlug";
                                    readonly type: "string";
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                                readonly year: {
                                    readonly deprecated: false;
                                    readonly minimum: 2012;
                                    readonly title: "SerieYear";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                            readonly title: "BaseSerie";
                            readonly type: "object";
                        };
                        readonly title: "BaseSeries";
                        readonly type: "array";
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9:_-]+$";
                        readonly title: "LeagueSlug";
                        readonly type: "string";
                    };
                    readonly url: {
                        readonly deprecated: false;
                        readonly format: "uri";
                        readonly title: "LeagueURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly videogame: {
                        readonly oneOf: readonly [{
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [1];
                                };
                                readonly name: {
                                    readonly enum: readonly ["LoL"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["league-of-legends"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_LoL";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [3];
                                };
                                readonly name: {
                                    readonly enum: readonly ["Counter-Strike"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["cs-go"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_CSGO";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [4];
                                };
                                readonly name: {
                                    readonly enum: readonly ["Dota 2"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["dota-2"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_Dota2";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [14];
                                };
                                readonly name: {
                                    readonly enum: readonly ["Overwatch"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["ow"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_Overwatch";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [20];
                                };
                                readonly name: {
                                    readonly enum: readonly ["PUBG"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["pubg"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_PUBG";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [22];
                                };
                                readonly name: {
                                    readonly enum: readonly ["Rocket League"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["rl"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_RocketLeague";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [23];
                                };
                                readonly name: {
                                    readonly enum: readonly ["Call of Duty"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["cod-mw"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_Codmw";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [24];
                                };
                                readonly name: {
                                    readonly enum: readonly ["Rainbow 6 Siege"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["r6-siege"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_R6siege";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [25];
                                };
                                readonly name: {
                                    readonly enum: readonly ["EA Sports FC"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["fifa"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_Fifa";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [26];
                                };
                                readonly name: {
                                    readonly enum: readonly ["Valorant"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["valorant"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_Valorant";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [27];
                                };
                                readonly name: {
                                    readonly enum: readonly ["King of Glory"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["kog"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_Kog";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [28];
                                };
                                readonly name: {
                                    readonly enum: readonly ["LoL Wild Rift"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["lol-wild-rift"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_LolWildRift";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [29];
                                };
                                readonly name: {
                                    readonly enum: readonly ["StarCraft 2"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["starcraft-2"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_Starcraft2";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [30];
                                };
                                readonly name: {
                                    readonly enum: readonly ["StarCraft Brood War"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["starcraft-brood-war"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_StarcraftBroodWar";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [34];
                                };
                                readonly name: {
                                    readonly enum: readonly ["Mobile Legends: Bang Bang"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["mlbb"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_MLBB";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [32];
                                };
                                readonly name: {
                                    readonly enum: readonly ["eBasketball"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["e-basketball"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_EBasketball";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [33];
                                };
                                readonly name: {
                                    readonly enum: readonly ["eCricket"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["e-cricket"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_ECricket";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly current_version: {
                                    readonly deprecated: false;
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly enum: readonly [31];
                                };
                                readonly name: {
                                    readonly enum: readonly ["eSoccer"];
                                };
                                readonly slug: {
                                    readonly enum: readonly ["e-soccer"];
                                };
                            };
                            readonly required: readonly ["current_version", "id", "name", "slug"];
                            readonly title: "LeagueVideogame_ESoccer";
                            readonly type: "object";
                        }];
                        readonly title: "LeagueVideogame";
                    };
                };
                readonly required: readonly ["id", "image_url", "modified_at", "name", "series", "slug", "url", "videogame"];
                readonly title: "League";
                readonly type: "object";
            };
            readonly title: "LoLLeagues";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMasteries: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLMasteryID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLMasteryName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLMasteryID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLMasteryName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["id", "-id", "name", "-name"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLMasteryName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLMasteryID";
                        readonly type: "integer";
                    };
                    readonly name: {
                        readonly title: "LoLMasteryName";
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["id", "name"];
                readonly title: "LoLMastery";
                readonly type: "object";
            };
            readonly title: "LoLMasteries";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMasteriesLolMasteryId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_mastery_id: {
                    readonly minimum: 1;
                    readonly title: "LoLMasteryID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A mastery ID";
                };
            };
            readonly required: readonly ["lol_mastery_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly id: {
                    readonly minimum: 1;
                    readonly title: "LoLMasteryID";
                    readonly type: "integer";
                };
                readonly name: {
                    readonly title: "LoLMasteryName";
                    readonly type: "string";
                };
            };
            readonly required: readonly ["id", "name"];
            readonly title: "LoLMastery";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMatches: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the match offers full stats";
                            readonly title: "MatchDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly draw: {
                            readonly description: "Whether result of the match is a draw";
                            readonly title: "MatchIsDraw";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly finished: {
                            readonly type: "boolean";
                        };
                        readonly forfeit: {
                            readonly description: "Whether match was forfeited";
                            readonly title: "MatchIsForfeit";
                            readonly type: "boolean";
                        };
                        readonly future: {
                            readonly description: "`true` for future matches only, `false` for past matches only.\nFiltering is done on the `begin_at` value, so  matches with `running` status will not appear if `true`.";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly match_type: {
                            readonly items: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly not_started: {
                            readonly type: "boolean";
                        };
                        readonly number_of_games: {
                            readonly items: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly opponent_id: {
                            readonly description: "A Team or a Player (id or slug). You can use`filter[winner_type]=Team` or `filter[winner_type]=Player` to focus on teams or players.";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly description: "A team ID or slug";
                                    readonly oneOf: readonly [{
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: "string";
                                    }];
                                    readonly title: "TeamIDOrSlug";
                                }, {
                                    readonly description: "A player ID or slug";
                                    readonly oneOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: "string";
                                    }];
                                    readonly title: "PlayerIDOrSlug";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly opponents_filled: {
                            readonly description: "Whether a match has opponents filled i.e. opponents are not TBD.";
                            readonly type: "boolean";
                        };
                        readonly past: {
                            readonly type: "boolean";
                        };
                        readonly running: {
                            readonly type: "boolean";
                        };
                        readonly scheduled_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly tournament_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly unscheduled: {
                            readonly type: "boolean";
                        };
                        readonly videogame: {
                            readonly items: {
                                readonly description: "A videogame ID or slug";
                                readonly oneOf: readonly [{
                                    readonly description: "A videogame ID";
                                    readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                    readonly title: "VideogameID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "A videogame slug";
                                    readonly enum: readonly ["cod-mw", "cs-go", "dota-2", "e-basketball", "e-cricket", "e-soccer", "fifa", "kog", "league-of-legends", "lol-wild-rift", "mlbb", "ow", "pubg", "r6-siege", "rl", "starcraft-2", "starcraft-brood-war", "valorant"];
                                    readonly title: "VideogameSlug";
                                    readonly type: "string";
                                }];
                                readonly title: "VideogameIDOrSlug";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`\nOnly for `valorant/*` and `/lol/*` endpoints.\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: "string";
                                }, {
                                    readonly enum: readonly ["all"];
                                }, {
                                    readonly enum: readonly ["latest"];
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether the match offers full stats";
                                readonly title: "MatchDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly draw: {
                            readonly items: {
                                readonly description: "Whether result of the match is a draw";
                                readonly title: "MatchIsDraw";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly forfeit: {
                            readonly items: {
                                readonly description: "Whether match was forfeited";
                                readonly title: "MatchIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly match_type: {
                            readonly items: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly number_of_games: {
                            readonly items: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly scheduled_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly tournament_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "draw", "-draw", "end_at", "-end_at", "forfeit", "-forfeit", "id", "-id", "match_type", "-match_type", "modified_at", "-modified_at", "name", "-name", "number_of_games", "-number_of_games", "scheduled_at", "-scheduled_at", "slug", "-slug", "status", "-status", "tournament_id", "-tournament_id", "winner_id", "-winner_id", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly match_type: {
                            readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                            readonly title: "MatchType";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly title: "MatchName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[ a-zA-Z0-9_-]+$";
                            readonly title: "MatchSlug";
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                            readonly title: "MatchStatus";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "MatchWinnerType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether the match offers full stats";
                        readonly title: "MatchDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly draw: {
                        readonly description: "Whether result of the match is a draw";
                        readonly title: "MatchIsDraw";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly forfeit: {
                        readonly description: "Whether match was forfeited";
                        readonly title: "MatchIsForfeit";
                        readonly type: "boolean";
                    };
                    readonly game_advantage: {
                        readonly deprecated: false;
                        readonly description: "ID of the opponent with a game advantage";
                        readonly minimum: 1;
                        readonly title: "GameAdvantageOpponent";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly games: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly complete: {
                                    readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                    readonly title: "GameComplete";
                                    readonly type: "boolean";
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether historical data is available for the game";
                                    readonly title: "GameDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly finished: {
                                    readonly description: "Whether the game is finished";
                                    readonly title: "GameIsFinished";
                                    readonly type: "boolean";
                                };
                                readonly forfeit: {
                                    readonly description: "Whether the game has been forfeited";
                                    readonly title: "GameIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "LoL game ID";
                                        readonly minimum: 1;
                                        readonly title: "LoLGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "Counter-Strike game ID";
                                        readonly minimum: 1;
                                        readonly title: "CSGOGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "OwGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "Dota2GameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "PUBGGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "ValorantGameID";
                                        readonly type: "integer";
                                    }];
                                    readonly description: "ID of the game.\nIDs are video game-specific, ie. a Valorant game and an Overwatch game can have the same game ID.";
                                    readonly title: "GameID";
                                };
                                readonly length: {
                                    readonly deprecated: false;
                                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                    readonly minimum: 0;
                                    readonly title: "GameLength";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly match_id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly position: {
                                    readonly description: "Game position in the match. Starts at 1";
                                    readonly minimum: 1;
                                    readonly title: "GamePosition";
                                    readonly type: "integer";
                                };
                                readonly status: {
                                    readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                    readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                    readonly title: "GameStatus";
                                    readonly type: "string";
                                };
                                readonly winner: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly anyOf: readonly [{
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            }, {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            }];
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly title: "OpponentID";
                                        };
                                        readonly type: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`Player` `Team`";
                                        };
                                    };
                                    readonly required: readonly ["id", "type"];
                                    readonly title: "GameWinner";
                                    readonly type: "object";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "winner", "winner_type"];
                            readonly title: "Game";
                            readonly type: "object";
                        };
                        readonly title: "Games";
                        readonly type: "array";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly live: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly opens_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchLiveOpensAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly supported: {
                                readonly description: "Whether live is supported";
                                readonly title: "MatchLiveIsSupported";
                                readonly type: "boolean";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "MatchLiveURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["opens_at", "supported", "url"];
                        readonly title: "MatchLive";
                        readonly type: "object";
                    };
                    readonly map_picks: {
                        readonly deprecated: false;
                        readonly description: "**Only applies to Valorant matches. The field will not be present on other video games matches.**\nMap picks, `null` when map picks data is unavailable.\n**Important:** `map_picks` field is only present in the response for subscribers of Valorant Historical plan.";
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly id: {
                                    readonly description: "ID of the map";
                                    readonly minimum: 1;
                                    readonly title: "ValorantMapID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly description: "URL to an image of the map";
                                    readonly format: "uri";
                                    readonly title: "ValorantMapImageURL";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Name of the map";
                                    readonly title: "ValorantMapName";
                                    readonly type: "string";
                                };
                                readonly picking_team_id: {
                                    readonly deprecated: false;
                                    readonly description: "ID of the team that picked the map";
                                    readonly minimum: 1;
                                    readonly title: "ValorantPickingTeamID";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly slug: {
                                    readonly description: "Human-readable identifier of the map";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "ValorantMapSlug";
                                    readonly type: "string";
                                };
                                readonly videogame_versions: {
                                    readonly description: "Array of of video game versions (ie. patches) for this resource";
                                    readonly items: {
                                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                        readonly title: "VideogameVersion";
                                        readonly type: "string";
                                    };
                                    readonly title: "VideogameVersions";
                                    readonly type: "array";
                                };
                            };
                            readonly required: readonly ["id", "image_url", "name", "picking_team_id", "slug", "videogame_versions"];
                            readonly title: "ValorantMapPick";
                            readonly type: "object";
                        };
                        readonly title: "ValorantMapPicks";
                        readonly type: readonly ["array", "null"];
                    };
                    readonly match_type: {
                        readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                        readonly title: "MatchType";
                        readonly type: "string";
                        readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "MatchName";
                        readonly type: "string";
                    };
                    readonly number_of_games: {
                        readonly description: "Number of games";
                        readonly minimum: 0;
                        readonly title: "GameCount";
                        readonly type: "integer";
                    };
                    readonly opponents: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly opponent: {
                                    readonly oneOf: readonly [{
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly active: {
                                                readonly description: "Whether player is active";
                                                readonly title: "PlayerIsActive";
                                                readonly type: "boolean";
                                            };
                                            readonly age: {
                                                readonly deprecated: false;
                                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly minimum: 0;
                                                readonly title: "PlayerAge";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly birthday: {
                                                readonly deprecated: false;
                                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly title: "PlayerBirthday";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly first_name: {
                                                readonly deprecated: false;
                                                readonly description: "First name of the player. `null` if unknown";
                                                readonly title: "PlayerFirstName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to the photo of the player. `null` if not available.";
                                                readonly format: "uri";
                                                readonly title: "PlayerImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly last_name: {
                                                readonly deprecated: false;
                                                readonly description: "Last name of the player. `null` if unknown";
                                                readonly title: "PlayerLastName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "PlayerModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly nationality: {
                                                readonly deprecated: false;
                                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                readonly title: "PlayerNationality";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly role: {
                                                readonly deprecated: false;
                                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                readonly title: "PlayerRoleSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "PlayerSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                        readonly title: "BasePlayer";
                                        readonly type: "object";
                                    }, {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly acronym: {
                                                readonly deprecated: false;
                                                readonly title: "TeamAcronym";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL of the team logo";
                                                readonly format: "uri";
                                                readonly title: "TeamImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly location: {
                                                readonly deprecated: false;
                                                readonly description: "The team's organization location";
                                                readonly title: "TeamLocation";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TeamModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "The name of the team.";
                                                readonly title: "TeamName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TeamSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                        readonly title: "BaseTeam";
                                        readonly type: "object";
                                    }];
                                    readonly title: "BaseOpponent";
                                };
                                readonly type: {
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: "string";
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["opponent", "type"];
                            readonly title: "Opponent";
                            readonly type: "object";
                        };
                        readonly title: "Opponents";
                        readonly type: "array";
                    };
                    readonly original_scheduled_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchOriginalScheduledAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly rescheduled: {
                        readonly deprecated: false;
                        readonly description: "Whether match has been rescheduled";
                        readonly title: "MatchIsRescheduled";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly results: {
                        readonly items: {
                            readonly anyOf: readonly [{
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly score: {
                                        readonly minimum: 0;
                                        readonly title: "MatchScore";
                                        readonly type: "integer";
                                    };
                                    readonly team_id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["score", "team_id"];
                                readonly title: "MatchTeamResult";
                                readonly type: "object";
                            }, {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly player_id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly score: {
                                        readonly minimum: 0;
                                        readonly title: "MatchScore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["player_id", "score"];
                                readonly title: "MatchPlayerResult";
                                readonly type: "object";
                            }];
                            readonly title: "MatchResult";
                        };
                        readonly title: "MatchResults";
                        readonly type: "array";
                    };
                    readonly scheduled_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchScheduledAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly serie: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly full_name: {
                                readonly title: "SerieFullName";
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly deprecated: false;
                                readonly title: "SerieName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly season: {
                                readonly deprecated: false;
                                readonly title: "SerieSeason";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                            readonly year: {
                                readonly deprecated: false;
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                        readonly title: "BaseSerie";
                        readonly type: "object";
                    };
                    readonly serie_id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly slug: {
                        readonly deprecated: false;
                        readonly minLength: 1;
                        readonly pattern: "^[ a-zA-Z0-9_-]+$";
                        readonly title: "MatchSlug";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly status: {
                        readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                        readonly title: "MatchStatus";
                        readonly type: "string";
                        readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                    };
                    readonly streams_list: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly embed_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to embed in an iframe.";
                                    readonly format: "uri";
                                    readonly title: "StreamEmbedURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly language: {
                                    readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                    readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                    readonly title: "StreamLanguage";
                                    readonly type: "string";
                                };
                                readonly main: {
                                    readonly description: "Whether it is the main stream. Main stream is always official.";
                                    readonly title: "StreamIsMain";
                                    readonly type: "boolean";
                                };
                                readonly official: {
                                    readonly description: "Whether it is an official broadcast.";
                                    readonly title: "StreamIsOfficial";
                                    readonly type: "boolean";
                                };
                                readonly raw_url: {
                                    readonly description: "URL to the stream on host website.";
                                    readonly format: "uri";
                                    readonly title: "StreamURL";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                            readonly title: "Stream";
                            readonly type: "object";
                        };
                        readonly title: "StreamsList";
                        readonly type: "array";
                    };
                    readonly tournament: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                readonly title: "TournamentDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly has_bracket: {
                                readonly description: "Whether the tournament has a bracket";
                                readonly title: "TournamentHasBracket";
                                readonly type: "boolean";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly live_supported: {
                                readonly description: "Whether live is supported";
                                readonly title: "TournamentLiveSupported";
                                readonly type: "boolean";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly prizepool: {
                                readonly deprecated: false;
                                readonly title: "TournamentPrizepool";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly serie_id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly tier: {
                                readonly deprecated: false;
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                        readonly title: "BaseTournament";
                        readonly type: "object";
                    };
                    readonly tournament_id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly videogame_version: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly current: {
                                readonly description: "Whether this videogame version is current";
                                readonly title: "VideogameVersionIsCurrent";
                                readonly type: "boolean";
                            };
                            readonly name: {
                                readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                readonly title: "VideogameVersion";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["current", "name"];
                        readonly title: "ShortVideogameVersion";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner: {
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly oneOf: readonly [{
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly active: {
                                    readonly description: "Whether player is active";
                                    readonly title: "PlayerIsActive";
                                    readonly type: "boolean";
                                };
                                readonly age: {
                                    readonly deprecated: false;
                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly minimum: 0;
                                    readonly title: "PlayerAge";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly birthday: {
                                    readonly deprecated: false;
                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly title: "PlayerBirthday";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly first_name: {
                                    readonly deprecated: false;
                                    readonly description: "First name of the player. `null` if unknown";
                                    readonly title: "PlayerFirstName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                    readonly format: "uri";
                                    readonly title: "PlayerImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly last_name: {
                                    readonly deprecated: false;
                                    readonly description: "Last name of the player. `null` if unknown";
                                    readonly title: "PlayerLastName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "PlayerModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Professional name of the player";
                                    readonly title: "PlayerName";
                                    readonly type: "string";
                                };
                                readonly nationality: {
                                    readonly deprecated: false;
                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                    readonly title: "PlayerNationality";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                    readonly title: "PlayerRoleSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "PlayerSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                            readonly title: "BasePlayer";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly acronym: {
                                    readonly deprecated: false;
                                    readonly title: "TeamAcronym";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL of the team logo";
                                    readonly format: "uri";
                                    readonly title: "TeamImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly location: {
                                    readonly deprecated: false;
                                    readonly description: "The team's organization location";
                                    readonly title: "TeamLocation";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TeamModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "The name of the team.";
                                    readonly title: "TeamName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TeamSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                            readonly title: "BaseTeam";
                            readonly type: "object";
                        }];
                        readonly title: "BaseOpponent";
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "MatchWinnerType";
                        readonly type: "string";
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "match_type", "modified_at", "name", "number_of_games", "opponents", "original_scheduled_at", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams_list", "tournament", "tournament_id", "videogame", "videogame_title", "videogame_version", "winner", "winner_id", "winner_type"];
                readonly title: "Match";
                readonly type: "object";
            };
            readonly title: "LoLMatches";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMatchesMatchIdOrSlug: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly match_id_or_slug: {
                    readonly description: "A match ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[ a-zA-Z0-9_-]+$";
                        readonly title: "MatchSlug";
                        readonly type: "string";
                    }];
                    readonly title: "MatchIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["match_id_or_slug"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly begin_at: {
                    readonly deprecated: false;
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "MatchBeginAt";
                    readonly type: readonly ["string", "null"];
                };
                readonly detailed_stats: {
                    readonly description: "Whether the match offers full stats";
                    readonly title: "MatchDetailedStats";
                    readonly type: "boolean";
                };
                readonly draw: {
                    readonly description: "Whether result of the match is a draw";
                    readonly title: "MatchIsDraw";
                    readonly type: "boolean";
                };
                readonly end_at: {
                    readonly deprecated: false;
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "MatchEndAt";
                    readonly type: readonly ["string", "null"];
                };
                readonly forfeit: {
                    readonly description: "Whether match was forfeited";
                    readonly title: "MatchIsForfeit";
                    readonly type: "boolean";
                };
                readonly game_advantage: {
                    readonly deprecated: false;
                    readonly description: "ID of the opponent with a game advantage";
                    readonly minimum: 1;
                    readonly title: "GameAdvantageOpponent";
                    readonly type: readonly ["integer", "null"];
                };
                readonly games: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly complete: {
                                readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                readonly title: "GameComplete";
                                readonly type: "boolean";
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether historical data is available for the game";
                                readonly title: "GameDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly finished: {
                                readonly description: "Whether the game is finished";
                                readonly title: "GameIsFinished";
                                readonly type: "boolean";
                            };
                            readonly forfeit: {
                                readonly description: "Whether the game has been forfeited";
                                readonly title: "GameIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly id: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly length: {
                                readonly deprecated: false;
                                readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                readonly minimum: 0;
                                readonly title: "GameLength";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly match_id: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly players: {
                                readonly deprecated: false;
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "Player's data for a Game in a LoL Match";
                                    readonly properties: {
                                        readonly assists: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAssistCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly deaths: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDeathCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly flags: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly first_blood_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first blood assist";
                                                    readonly title: "LoLGotFirstBloodAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_blood_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first blood kill";
                                                    readonly title: "LoLGotFirstBloodKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_inhibitor_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first inhibitor assist";
                                                    readonly title: "LoLGotFirstInhibitorAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_inhibitor_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first inhibitor kill";
                                                    readonly title: "LoLGotFirstInhibitorKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_tower_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first tower assist";
                                                    readonly title: "LoLGotGirstTowerAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_tower_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first tower kill";
                                                    readonly title: "LoLGotFirstTowerKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                            };
                                            readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                            readonly title: "LoLFlags";
                                            readonly type: "object";
                                        };
                                        readonly kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly kills_counters: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly inhibitors: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of inhibitors killed by the player";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLInhibitorCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions_enemy_jungle: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions_team_jungle: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionsTeamJungleCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly players: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of players killed";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly turrets: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of turrets killed";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLTurretCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly wards: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of wards killed by the player";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLWardCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                            readonly title: "LoLKillCounters";
                                            readonly type: "object";
                                        };
                                        readonly kills_series: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly double_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieDouble";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly penta_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSeriePenta";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly quadra_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieQuadra";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly triple_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieTriple";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                            readonly title: "LoLKillsSeries";
                                            readonly type: "object";
                                        };
                                        readonly largest_critical_strike: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestCriticalStrike";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly largest_killing_spree: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestKillingSpree";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly largest_multi_kill: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestMultiKill";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly player_id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                            readonly title: "LoLPlayerRole";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`adc` `jun` `mid` `sup` `top`";
                                        };
                                    };
                                    readonly required: readonly ["assists", "deaths", "flags", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "player_id", "role"];
                                    readonly title: "LoLMatchGamePlayer";
                                    readonly type: "object";
                                };
                                readonly title: "LoLMatchGamePlayers";
                                readonly type: readonly ["array", "null"];
                            };
                            readonly position: {
                                readonly description: "Game position in the match. Starts at 1";
                                readonly minimum: 1;
                                readonly title: "GamePosition";
                                readonly type: "integer";
                            };
                            readonly status: {
                                readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                readonly title: "GameStatus";
                                readonly type: "string";
                            };
                            readonly winner: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                };
                                readonly required: readonly ["id", "type"];
                                readonly title: "GameWinner";
                                readonly type: "object";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "players", "position", "status", "winner", "winner_type"];
                        readonly title: "LoLMatchGame";
                        readonly type: "object";
                    };
                    readonly title: "LoLMatchGames";
                    readonly type: "array";
                };
                readonly id: {
                    readonly minimum: 1;
                    readonly title: "MatchID";
                    readonly type: "integer";
                };
                readonly league: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly id: {
                            readonly minimum: 1;
                            readonly title: "LeagueID";
                            readonly type: "integer";
                        };
                        readonly image_url: {
                            readonly deprecated: false;
                            readonly format: "uri";
                            readonly title: "LeagueImageURL";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly modified_at: {
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "LeagueModifiedAt";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly title: "LeagueName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9:_-]+$";
                            readonly title: "LeagueSlug";
                            readonly type: "string";
                        };
                        readonly url: {
                            readonly deprecated: false;
                            readonly format: "uri";
                            readonly title: "LeagueURL";
                            readonly type: readonly ["string", "null"];
                        };
                    };
                    readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                    readonly title: "BaseLeague";
                    readonly type: "object";
                };
                readonly league_id: {
                    readonly minimum: 1;
                    readonly title: "LeagueID";
                    readonly type: "integer";
                };
                readonly live: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly opens_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "MatchLiveOpensAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly supported: {
                            readonly description: "Whether live is supported";
                            readonly title: "MatchLiveIsSupported";
                            readonly type: "boolean";
                        };
                        readonly url: {
                            readonly deprecated: false;
                            readonly format: "uri";
                            readonly title: "MatchLiveURL";
                            readonly type: readonly ["string", "null"];
                        };
                    };
                    readonly required: readonly ["opens_at", "supported", "url"];
                    readonly title: "MatchLive";
                    readonly type: "object";
                };
                readonly match_type: {
                    readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                    readonly title: "MatchType";
                    readonly type: "string";
                    readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                };
                readonly modified_at: {
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "MatchModifiedAt";
                    readonly type: "string";
                };
                readonly name: {
                    readonly title: "MatchName";
                    readonly type: "string";
                };
                readonly number_of_games: {
                    readonly description: "Number of games";
                    readonly minimum: 0;
                    readonly title: "GameCount";
                    readonly type: "integer";
                };
                readonly opponents: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly opponent: {
                                readonly oneOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly active: {
                                            readonly description: "Whether player is active";
                                            readonly title: "PlayerIsActive";
                                            readonly type: "boolean";
                                        };
                                        readonly age: {
                                            readonly deprecated: false;
                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly minimum: 0;
                                            readonly title: "PlayerAge";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly birthday: {
                                            readonly deprecated: false;
                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly title: "PlayerBirthday";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                            readonly format: "uri";
                                            readonly title: "PlayerImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "PlayerModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly nationality: {
                                            readonly deprecated: false;
                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                            readonly title: "PlayerNationality";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                            readonly title: "PlayerRoleSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "PlayerSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                    readonly title: "BasePlayer";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                }];
                                readonly title: "BaseOpponent";
                            };
                            readonly type: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["opponent", "type"];
                        readonly title: "Opponent";
                        readonly type: "object";
                    };
                    readonly title: "Opponents";
                    readonly type: "array";
                };
                readonly original_scheduled_at: {
                    readonly deprecated: false;
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "MatchOriginalScheduledAt";
                    readonly type: readonly ["string", "null"];
                };
                readonly players: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Player's data for a LoL Match";
                        readonly properties: {
                            readonly assists: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLAssistCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly deaths: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLDeathCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly first_name: {
                                readonly deprecated: false;
                                readonly description: "First name of the player. `null` if unknown";
                                readonly title: "PlayerFirstName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL to the photo of the player. `null` if not available.";
                                readonly format: "uri";
                                readonly title: "PlayerImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLKillCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly last_name: {
                                readonly deprecated: false;
                                readonly description: "Last name of the player. `null` if unknown";
                                readonly title: "PlayerLastName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly name: {
                                readonly description: "Professional name of the player";
                                readonly title: "PlayerName";
                                readonly type: "string";
                            };
                            readonly nationality: {
                                readonly deprecated: false;
                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                readonly title: "PlayerNationality";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly number_of_games: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly player_id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                readonly title: "LoLPlayerRole";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`adc` `jun` `mid` `sup` `top`";
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "PlayerSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["assists", "deaths", "first_name", "image_url", "kills", "last_name", "name", "nationality", "number_of_games", "player_id", "role", "slug"];
                        readonly title: "LoLMatchPlayer";
                        readonly type: "object";
                    };
                    readonly title: "LoLMatchPlayers";
                    readonly type: "array";
                };
                readonly rescheduled: {
                    readonly deprecated: false;
                    readonly description: "Whether match has been rescheduled";
                    readonly title: "MatchIsRescheduled";
                    readonly type: readonly ["boolean", "null"];
                };
                readonly results: {
                    readonly items: {
                        readonly anyOf: readonly [{
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly score: {
                                    readonly minimum: 0;
                                    readonly title: "MatchScore";
                                    readonly type: "integer";
                                };
                                readonly team_id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["score", "team_id"];
                            readonly title: "MatchTeamResult";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly player_id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly score: {
                                    readonly minimum: 0;
                                    readonly title: "MatchScore";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["player_id", "score"];
                            readonly title: "MatchPlayerResult";
                            readonly type: "object";
                        }];
                        readonly title: "MatchResult";
                    };
                    readonly title: "MatchResults";
                    readonly type: "array";
                };
                readonly scheduled_at: {
                    readonly deprecated: false;
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "MatchScheduledAt";
                    readonly type: readonly ["string", "null"];
                };
                readonly serie: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly begin_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "SerieBeginAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly end_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "SerieEndAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly full_name: {
                            readonly title: "SerieFullName";
                            readonly type: "string";
                        };
                        readonly id: {
                            readonly minimum: 1;
                            readonly title: "SerieID";
                            readonly type: "integer";
                        };
                        readonly league_id: {
                            readonly minimum: 1;
                            readonly title: "LeagueID";
                            readonly type: "integer";
                        };
                        readonly modified_at: {
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "SerieModifiedAt";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly deprecated: false;
                            readonly title: "SerieName";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly season: {
                            readonly deprecated: false;
                            readonly title: "SerieSeason";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "SerieSlug";
                            readonly type: "string";
                        };
                        readonly winner_id: {
                            readonly anyOf: readonly [{
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            }, {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            }];
                            readonly deprecated: false;
                            readonly nullable: true;
                            readonly title: "OpponentID";
                        };
                        readonly winner_type: {
                            readonly deprecated: false;
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: readonly ["string", "null"];
                            readonly description: "`Player` `Team`";
                        };
                        readonly year: {
                            readonly deprecated: false;
                            readonly minimum: 2012;
                            readonly title: "SerieYear";
                            readonly type: readonly ["integer", "null"];
                        };
                    };
                    readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                    readonly title: "BaseSerie";
                    readonly type: "object";
                };
                readonly serie_id: {
                    readonly minimum: 1;
                    readonly title: "SerieID";
                    readonly type: "integer";
                };
                readonly slug: {
                    readonly deprecated: false;
                    readonly minLength: 1;
                    readonly pattern: "^[ a-zA-Z0-9_-]+$";
                    readonly title: "MatchSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly status: {
                    readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                    readonly title: "MatchStatus";
                    readonly type: "string";
                    readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                };
                readonly streams_list: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly embed_url: {
                                readonly deprecated: false;
                                readonly description: "URL to embed in an iframe.";
                                readonly format: "uri";
                                readonly title: "StreamEmbedURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly language: {
                                readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                readonly title: "StreamLanguage";
                                readonly type: "string";
                            };
                            readonly main: {
                                readonly description: "Whether it is the main stream. Main stream is always official.";
                                readonly title: "StreamIsMain";
                                readonly type: "boolean";
                            };
                            readonly official: {
                                readonly description: "Whether it is an official broadcast.";
                                readonly title: "StreamIsOfficial";
                                readonly type: "boolean";
                            };
                            readonly raw_url: {
                                readonly description: "URL to the stream on host website.";
                                readonly format: "uri";
                                readonly title: "StreamURL";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                        readonly title: "Stream";
                        readonly type: "object";
                    };
                    readonly title: "StreamsList";
                    readonly type: "array";
                };
                readonly tournament: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly begin_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "TournamentBeginAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the tournament is expected to have detailed statistics available";
                            readonly title: "TournamentDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly deprecated: false;
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "TournamentEndAt";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly has_bracket: {
                            readonly description: "Whether the tournament has a bracket";
                            readonly title: "TournamentHasBracket";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly minimum: 1;
                            readonly title: "TournamentID";
                            readonly type: "integer";
                        };
                        readonly league_id: {
                            readonly minimum: 1;
                            readonly title: "LeagueID";
                            readonly type: "integer";
                        };
                        readonly live_supported: {
                            readonly description: "Whether live is supported";
                            readonly title: "TournamentLiveSupported";
                            readonly type: "boolean";
                        };
                        readonly modified_at: {
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "TournamentModifiedAt";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly title: "TournamentName";
                            readonly type: "string";
                        };
                        readonly prizepool: {
                            readonly deprecated: false;
                            readonly title: "TournamentPrizepool";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly serie_id: {
                            readonly minimum: 1;
                            readonly title: "SerieID";
                            readonly type: "integer";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TournamentSlug";
                            readonly type: "string";
                        };
                        readonly tier: {
                            readonly deprecated: false;
                            readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                            readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                            readonly title: "TournamentTier";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly winner_id: {
                            readonly anyOf: readonly [{
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            }, {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            }];
                            readonly deprecated: false;
                            readonly nullable: true;
                            readonly title: "OpponentID";
                        };
                        readonly winner_type: {
                            readonly deprecated: false;
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: readonly ["string", "null"];
                            readonly description: "`Player` `Team`";
                        };
                    };
                    readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                    readonly title: "BaseTournament";
                    readonly type: "object";
                };
                readonly tournament_id: {
                    readonly minimum: 1;
                    readonly title: "TournamentID";
                    readonly type: "integer";
                };
                readonly videogame_title: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly id: {
                            readonly minimum: 1;
                            readonly title: "VideogameTitleID";
                            readonly type: "integer";
                        };
                        readonly name: {
                            readonly title: "VideogameTitleName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "VideogameTitleSlug";
                            readonly type: "string";
                        };
                        readonly videogame_id: {
                            readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                            readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                            readonly title: "VideogameID";
                            readonly type: "integer";
                        };
                    };
                    readonly required: readonly ["id", "name", "slug", "videogame_id"];
                    readonly title: "VideogameTitle";
                    readonly type: readonly ["object", "null"];
                };
                readonly videogame_version: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly current: {
                            readonly description: "Whether this videogame version is current";
                            readonly title: "VideogameVersionIsCurrent";
                            readonly type: "boolean";
                        };
                        readonly name: {
                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                            readonly title: "VideogameVersion";
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["current", "name"];
                    readonly title: "ShortVideogameVersion";
                    readonly type: readonly ["object", "null"];
                };
                readonly winner: {
                    readonly deprecated: false;
                    readonly nullable: true;
                    readonly oneOf: readonly [{
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly active: {
                                readonly description: "Whether player is active";
                                readonly title: "PlayerIsActive";
                                readonly type: "boolean";
                            };
                            readonly age: {
                                readonly deprecated: false;
                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly minimum: 0;
                                readonly title: "PlayerAge";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly birthday: {
                                readonly deprecated: false;
                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly title: "PlayerBirthday";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly first_name: {
                                readonly deprecated: false;
                                readonly description: "First name of the player. `null` if unknown";
                                readonly title: "PlayerFirstName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL to the photo of the player. `null` if not available.";
                                readonly format: "uri";
                                readonly title: "PlayerImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly last_name: {
                                readonly deprecated: false;
                                readonly description: "Last name of the player. `null` if unknown";
                                readonly title: "PlayerLastName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "PlayerModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "Professional name of the player";
                                readonly title: "PlayerName";
                                readonly type: "string";
                            };
                            readonly nationality: {
                                readonly deprecated: false;
                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                readonly title: "PlayerNationality";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                readonly title: "PlayerRoleSlug";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "PlayerSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                        readonly title: "BasePlayer";
                        readonly type: "object";
                    }, {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly acronym: {
                                readonly deprecated: false;
                                readonly title: "TeamAcronym";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL of the team logo";
                                readonly format: "uri";
                                readonly title: "TeamImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly location: {
                                readonly deprecated: false;
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                        readonly title: "BaseTeam";
                        readonly type: "object";
                    }];
                    readonly title: "BaseOpponent";
                };
                readonly winner_id: {
                    readonly anyOf: readonly [{
                        readonly description: "ID of the player";
                        readonly minimum: 1;
                        readonly title: "PlayerID";
                        readonly type: "integer";
                    }, {
                        readonly description: "The ID of the team.";
                        readonly minimum: 1;
                        readonly title: "TeamID";
                        readonly type: "integer";
                    }];
                    readonly deprecated: false;
                    readonly nullable: true;
                    readonly title: "OpponentID";
                };
                readonly winner_type: {
                    readonly enum: readonly ["Player", "Team"];
                    readonly title: "MatchWinnerType";
                    readonly type: "string";
                    readonly description: "`Player` `Team`";
                };
            };
            readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "match_type", "modified_at", "name", "number_of_games", "opponents", "original_scheduled_at", "players", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams_list", "tournament", "tournament_id", "videogame_title", "videogame_version", "winner", "winner_id", "winner_type"];
            readonly title: "LoLMatch";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMatchesMatchIdOrSlugGames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly match_id_or_slug: {
                    readonly description: "A match ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[ a-zA-Z0-9_-]+$";
                        readonly title: "MatchSlug";
                        readonly type: "string";
                    }];
                    readonly title: "MatchIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["match_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly complete: {
                            readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                            readonly title: "GameComplete";
                            readonly type: "boolean";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether historical data is available for the game";
                            readonly title: "GameDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly finished: {
                            readonly description: "Whether the game is finished";
                            readonly title: "GameIsFinished";
                            readonly type: "boolean";
                        };
                        readonly forfeit: {
                            readonly description: "Whether the game has been forfeited";
                            readonly title: "GameIsForfeit";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly length: {
                            readonly items: {
                                readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                readonly minimum: 0;
                                readonly title: "GameLength";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly match_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly position: {
                            readonly items: {
                                readonly description: "Game position in the match. Starts at 1";
                                readonly minimum: 1;
                                readonly title: "GamePosition";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly description: "The game status";
                                readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                readonly title: "GameStatus";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly complete: {
                            readonly items: {
                                readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                readonly title: "GameComplete";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether historical data is available for the game";
                                readonly title: "GameDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly finished: {
                            readonly items: {
                                readonly description: "Whether the game is finished";
                                readonly title: "GameIsFinished";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly forfeit: {
                            readonly items: {
                                readonly description: "Whether the game has been forfeited";
                                readonly title: "GameIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly length: {
                            readonly items: {
                                readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                readonly minimum: 0;
                                readonly title: "GameLength";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly match_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly position: {
                            readonly items: {
                                readonly description: "Game position in the match. Starts at 1";
                                readonly minimum: 1;
                                readonly title: "GamePosition";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly description: "The game status";
                                readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                readonly title: "GameStatus";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "complete", "-complete", "detailed_stats", "-detailed_stats", "end_at", "-end_at", "finished", "-finished", "forfeit", "-forfeit", "id", "-id", "length", "-length", "match_id", "-match_id", "position", "-position", "status", "-status", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly status: {
                            readonly description: "The game status";
                            readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                            readonly title: "GameStatus";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "GameBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly complete: {
                        readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                        readonly title: "GameComplete";
                        readonly type: "boolean";
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether historical data is available for the game";
                        readonly title: "GameDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "GameEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly finished: {
                        readonly description: "Whether the game is finished";
                        readonly title: "GameIsFinished";
                        readonly type: "boolean";
                    };
                    readonly forfeit: {
                        readonly description: "Whether the game has been forfeited";
                        readonly title: "GameIsForfeit";
                        readonly type: "boolean";
                    };
                    readonly id: {
                        readonly description: "LoL game ID";
                        readonly minimum: 1;
                        readonly title: "LoLGameID";
                        readonly type: "integer";
                    };
                    readonly length: {
                        readonly deprecated: false;
                        readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                        readonly minimum: 0;
                        readonly title: "GameLength";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly match: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A match";
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether the match offers full stats";
                                readonly title: "MatchDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly draw: {
                                readonly description: "Whether result of the match is a draw";
                                readonly title: "MatchIsDraw";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly forfeit: {
                                readonly description: "Whether match was forfeited";
                                readonly title: "MatchIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly game_advantage: {
                                readonly deprecated: false;
                                readonly description: "ID of the opponent with a game advantage";
                                readonly minimum: 1;
                                readonly title: "GameAdvantageOpponent";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly games: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly begin_at: {
                                            readonly deprecated: false;
                                            readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "GameBeginAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly complete: {
                                            readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                            readonly title: "GameComplete";
                                            readonly type: "boolean";
                                        };
                                        readonly detailed_stats: {
                                            readonly description: "Whether historical data is available for the game";
                                            readonly title: "GameDetailedStats";
                                            readonly type: "boolean";
                                        };
                                        readonly end_at: {
                                            readonly deprecated: false;
                                            readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "GameEndAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly finished: {
                                            readonly description: "Whether the game is finished";
                                            readonly title: "GameIsFinished";
                                            readonly type: "boolean";
                                        };
                                        readonly forfeit: {
                                            readonly description: "Whether the game has been forfeited";
                                            readonly title: "GameIsForfeit";
                                            readonly type: "boolean";
                                        };
                                        readonly id: {
                                            readonly anyOf: readonly [{
                                                readonly description: "LoL game ID";
                                                readonly minimum: 1;
                                                readonly title: "LoLGameID";
                                                readonly type: "integer";
                                            }, {
                                                readonly description: "Counter-Strike game ID";
                                                readonly minimum: 1;
                                                readonly title: "CSGOGameID";
                                                readonly type: "integer";
                                            }, {
                                                readonly minimum: 1;
                                                readonly title: "OwGameID";
                                                readonly type: "integer";
                                            }, {
                                                readonly minimum: 1;
                                                readonly title: "Dota2GameID";
                                                readonly type: "integer";
                                            }, {
                                                readonly minimum: 1;
                                                readonly title: "PUBGGameID";
                                                readonly type: "integer";
                                            }, {
                                                readonly minimum: 1;
                                                readonly title: "ValorantGameID";
                                                readonly type: "integer";
                                            }];
                                            readonly description: "ID of the game.\nIDs are video game-specific, ie. a Valorant game and an Overwatch game can have the same game ID.";
                                            readonly title: "GameID";
                                        };
                                        readonly length: {
                                            readonly deprecated: false;
                                            readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                            readonly minimum: 0;
                                            readonly title: "GameLength";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly match_id: {
                                            readonly minimum: 1;
                                            readonly title: "MatchID";
                                            readonly type: "integer";
                                        };
                                        readonly position: {
                                            readonly description: "Game position in the match. Starts at 1";
                                            readonly minimum: 1;
                                            readonly title: "GamePosition";
                                            readonly type: "integer";
                                        };
                                        readonly status: {
                                            readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                            readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                            readonly title: "GameStatus";
                                            readonly type: "string";
                                        };
                                        readonly winner: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly id: {
                                                    readonly anyOf: readonly [{
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    }, {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    }];
                                                    readonly deprecated: false;
                                                    readonly nullable: true;
                                                    readonly title: "OpponentID";
                                                };
                                                readonly type: {
                                                    readonly deprecated: false;
                                                    readonly enum: readonly ["Player", "Team"];
                                                    readonly title: "OpponentType";
                                                    readonly type: readonly ["string", "null"];
                                                    readonly description: "`Player` `Team`";
                                                };
                                            };
                                            readonly required: readonly ["id", "type"];
                                            readonly title: "GameWinner";
                                            readonly type: "object";
                                        };
                                        readonly winner_type: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`Player` `Team`";
                                        };
                                    };
                                    readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "winner", "winner_type"];
                                    readonly title: "Game";
                                    readonly type: "object";
                                };
                                readonly title: "Games";
                                readonly type: "array";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly league: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "LeagueID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly format: "uri";
                                        readonly title: "LeagueImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "LeagueModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly title: "LeagueName";
                                        readonly type: "string";
                                    };
                                    readonly slug: {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9:_-]+$";
                                        readonly title: "LeagueSlug";
                                        readonly type: "string";
                                    };
                                    readonly url: {
                                        readonly deprecated: false;
                                        readonly format: "uri";
                                        readonly title: "LeagueURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                                readonly title: "BaseLeague";
                                readonly type: "object";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly live: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly opens_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "MatchLiveOpensAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly supported: {
                                        readonly description: "Whether live is supported";
                                        readonly title: "MatchLiveIsSupported";
                                        readonly type: "boolean";
                                    };
                                    readonly url: {
                                        readonly deprecated: false;
                                        readonly format: "uri";
                                        readonly title: "MatchLiveURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["opens_at", "supported", "url"];
                                readonly title: "MatchLive";
                                readonly type: "object";
                            };
                            readonly map_picks: {
                                readonly deprecated: false;
                                readonly description: "**Only applies to Valorant matches. The field will not be present on other video games matches.**\nMap picks, `null` when map picks data is unavailable.\n**Important:** `map_picks` field is only present in the response for subscribers of Valorant Historical plan.";
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly description: "ID of the map";
                                            readonly minimum: 1;
                                            readonly title: "ValorantMapID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly description: "URL to an image of the map";
                                            readonly format: "uri";
                                            readonly title: "ValorantMapImageURL";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Name of the map";
                                            readonly title: "ValorantMapName";
                                            readonly type: "string";
                                        };
                                        readonly picking_team_id: {
                                            readonly deprecated: false;
                                            readonly description: "ID of the team that picked the map";
                                            readonly minimum: 1;
                                            readonly title: "ValorantPickingTeamID";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly slug: {
                                            readonly description: "Human-readable identifier of the map";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "ValorantMapSlug";
                                            readonly type: "string";
                                        };
                                        readonly videogame_versions: {
                                            readonly description: "Array of of video game versions (ie. patches) for this resource";
                                            readonly items: {
                                                readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                                readonly title: "VideogameVersion";
                                                readonly type: "string";
                                            };
                                            readonly title: "VideogameVersions";
                                            readonly type: "array";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "name", "picking_team_id", "slug", "videogame_versions"];
                                    readonly title: "ValorantMapPick";
                                    readonly type: "object";
                                };
                                readonly title: "ValorantMapPicks";
                                readonly type: readonly ["array", "null"];
                            };
                            readonly match_type: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                                readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly number_of_games: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly opponents: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly opponent: {
                                            readonly oneOf: readonly [{
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly active: {
                                                        readonly description: "Whether player is active";
                                                        readonly title: "PlayerIsActive";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly age: {
                                                        readonly deprecated: false;
                                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly minimum: 0;
                                                        readonly title: "PlayerAge";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly birthday: {
                                                        readonly deprecated: false;
                                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly title: "PlayerBirthday";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly first_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "First name of the player. `null` if unknown";
                                                        readonly title: "PlayerFirstName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                                        readonly format: "uri";
                                                        readonly title: "PlayerImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly last_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "Last name of the player. `null` if unknown";
                                                        readonly title: "PlayerLastName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "PlayerModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Professional name of the player";
                                                        readonly title: "PlayerName";
                                                        readonly type: "string";
                                                    };
                                                    readonly nationality: {
                                                        readonly deprecated: false;
                                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                        readonly title: "PlayerNationality";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly role: {
                                                        readonly deprecated: false;
                                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                        readonly title: "PlayerRoleSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "PlayerSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                                readonly title: "BasePlayer";
                                                readonly type: "object";
                                            }, {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly acronym: {
                                                        readonly deprecated: false;
                                                        readonly title: "TeamAcronym";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL of the team logo";
                                                        readonly format: "uri";
                                                        readonly title: "TeamImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly location: {
                                                        readonly deprecated: false;
                                                        readonly description: "The team's organization location";
                                                        readonly title: "TeamLocation";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "TeamModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "The name of the team.";
                                                        readonly title: "TeamName";
                                                        readonly type: "string";
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "TeamSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                readonly title: "BaseTeam";
                                                readonly type: "object";
                                            }];
                                            readonly title: "BaseOpponent";
                                        };
                                        readonly type: {
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: "string";
                                            readonly description: "`Player` `Team`";
                                        };
                                    };
                                    readonly required: readonly ["opponent", "type"];
                                    readonly title: "Opponent";
                                    readonly type: "object";
                                };
                                readonly title: "Opponents";
                                readonly type: "array";
                            };
                            readonly original_scheduled_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchOriginalScheduledAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly rescheduled: {
                                readonly deprecated: false;
                                readonly description: "Whether match has been rescheduled";
                                readonly title: "MatchIsRescheduled";
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly results: {
                                readonly items: {
                                    readonly anyOf: readonly [{
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly score: {
                                                readonly minimum: 0;
                                                readonly title: "MatchScore";
                                                readonly type: "integer";
                                            };
                                            readonly team_id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["score", "team_id"];
                                        readonly title: "MatchTeamResult";
                                        readonly type: "object";
                                    }, {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly player_id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly score: {
                                                readonly minimum: 0;
                                                readonly title: "MatchScore";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["player_id", "score"];
                                        readonly title: "MatchPlayerResult";
                                        readonly type: "object";
                                    }];
                                    readonly title: "MatchResult";
                                };
                                readonly title: "MatchResults";
                                readonly type: "array";
                            };
                            readonly scheduled_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly serie: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly begin_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieBeginAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly end_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieEndAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly full_name: {
                                        readonly title: "SerieFullName";
                                        readonly type: "string";
                                    };
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "SerieID";
                                        readonly type: "integer";
                                    };
                                    readonly league_id: {
                                        readonly minimum: 1;
                                        readonly title: "LeagueID";
                                        readonly type: "integer";
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly deprecated: false;
                                        readonly title: "SerieName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly season: {
                                        readonly deprecated: false;
                                        readonly title: "SerieSeason";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "SerieSlug";
                                        readonly type: "string";
                                    };
                                    readonly winner_id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly winner_type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                    readonly year: {
                                        readonly deprecated: false;
                                        readonly minimum: 2012;
                                        readonly title: "SerieYear";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                                readonly title: "BaseSerie";
                                readonly type: "object";
                            };
                            readonly serie_id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly status: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                                readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                            };
                            readonly streams_list: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly embed_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to embed in an iframe.";
                                            readonly format: "uri";
                                            readonly title: "StreamEmbedURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly language: {
                                            readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                            readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                            readonly title: "StreamLanguage";
                                            readonly type: "string";
                                        };
                                        readonly main: {
                                            readonly description: "Whether it is the main stream. Main stream is always official.";
                                            readonly title: "StreamIsMain";
                                            readonly type: "boolean";
                                        };
                                        readonly official: {
                                            readonly description: "Whether it is an official broadcast.";
                                            readonly title: "StreamIsOfficial";
                                            readonly type: "boolean";
                                        };
                                        readonly raw_url: {
                                            readonly description: "URL to the stream on host website.";
                                            readonly format: "uri";
                                            readonly title: "StreamURL";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                                    readonly title: "Stream";
                                    readonly type: "object";
                                };
                                readonly title: "StreamsList";
                                readonly type: "array";
                            };
                            readonly tournament: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly begin_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TournamentBeginAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly detailed_stats: {
                                        readonly description: "Whether the tournament is expected to have detailed statistics available";
                                        readonly title: "TournamentDetailedStats";
                                        readonly type: "boolean";
                                    };
                                    readonly end_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TournamentEndAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly has_bracket: {
                                        readonly description: "Whether the tournament has a bracket";
                                        readonly title: "TournamentHasBracket";
                                        readonly type: "boolean";
                                    };
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "TournamentID";
                                        readonly type: "integer";
                                    };
                                    readonly league_id: {
                                        readonly minimum: 1;
                                        readonly title: "LeagueID";
                                        readonly type: "integer";
                                    };
                                    readonly live_supported: {
                                        readonly description: "Whether live is supported";
                                        readonly title: "TournamentLiveSupported";
                                        readonly type: "boolean";
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TournamentModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly title: "TournamentName";
                                        readonly type: "string";
                                    };
                                    readonly prizepool: {
                                        readonly deprecated: false;
                                        readonly title: "TournamentPrizepool";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly serie_id: {
                                        readonly minimum: 1;
                                        readonly title: "SerieID";
                                        readonly type: "integer";
                                    };
                                    readonly slug: {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TournamentSlug";
                                        readonly type: "string";
                                    };
                                    readonly tier: {
                                        readonly deprecated: false;
                                        readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                        readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                        readonly title: "TournamentTier";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly winner_id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly winner_type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                };
                                readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                                readonly title: "BaseTournament";
                                readonly type: "object";
                            };
                            readonly tournament_id: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly videogame: {
                                readonly enum: readonly [{
                                    readonly id: 1;
                                    readonly name: "LoL";
                                    readonly slug: "league-of-legends";
                                }, {
                                    readonly id: 3;
                                    readonly name: "Counter-Strike";
                                    readonly slug: "cs-go";
                                }, {
                                    readonly id: 4;
                                    readonly name: "Dota 2";
                                    readonly slug: "dota-2";
                                }, {
                                    readonly id: 14;
                                    readonly name: "Overwatch";
                                    readonly slug: "ow";
                                }, {
                                    readonly id: 20;
                                    readonly name: "PUBG";
                                    readonly slug: "pubg";
                                }, {
                                    readonly id: 22;
                                    readonly name: "Rocket League";
                                    readonly slug: "rl";
                                }, {
                                    readonly id: 23;
                                    readonly name: "Call of Duty";
                                    readonly slug: "cod-mw";
                                }, {
                                    readonly id: 24;
                                    readonly name: "Rainbow 6 Siege";
                                    readonly slug: "r6-siege";
                                }, {
                                    readonly id: 25;
                                    readonly name: "EA Sports FC";
                                    readonly slug: "fifa";
                                }, {
                                    readonly id: 26;
                                    readonly name: "Valorant";
                                    readonly slug: "valorant";
                                }, {
                                    readonly id: 27;
                                    readonly name: "King of Glory";
                                    readonly slug: "kog";
                                }, {
                                    readonly id: 28;
                                    readonly name: "LoL Wild Rift";
                                    readonly slug: "lol-wild-rift";
                                }, {
                                    readonly id: 29;
                                    readonly name: "StarCraft 2";
                                    readonly slug: "starcraft-2";
                                }, {
                                    readonly id: 30;
                                    readonly name: "StarCraft Brood War";
                                    readonly slug: "starcraft-brood-war";
                                }, {
                                    readonly id: 31;
                                    readonly name: "eSoccer";
                                    readonly slug: "e-soccer";
                                }, {
                                    readonly id: 32;
                                    readonly name: "eBasketball";
                                    readonly slug: "e-basketball";
                                }, {
                                    readonly id: 33;
                                    readonly name: "eCricket";
                                    readonly slug: "e-cricket";
                                }, {
                                    readonly id: 34;
                                    readonly name: "Mobile Legends: Bang Bang";
                                    readonly slug: "mlbb";
                                }];
                                readonly title: "CurrentVideogame";
                                readonly type: "object";
                                readonly additionalProperties: true;
                                readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                            };
                            readonly videogame_version: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly current: {
                                        readonly description: "Whether this videogame version is current";
                                        readonly title: "VideogameVersionIsCurrent";
                                        readonly type: "boolean";
                                    };
                                    readonly name: {
                                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                        readonly title: "VideogameVersion";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["current", "name"];
                                readonly title: "ShortVideogameVersion";
                                readonly type: readonly ["object", "null"];
                            };
                            readonly winner: {
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly oneOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly active: {
                                            readonly description: "Whether player is active";
                                            readonly title: "PlayerIsActive";
                                            readonly type: "boolean";
                                        };
                                        readonly age: {
                                            readonly deprecated: false;
                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly minimum: 0;
                                            readonly title: "PlayerAge";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly birthday: {
                                            readonly deprecated: false;
                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly title: "PlayerBirthday";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                            readonly format: "uri";
                                            readonly title: "PlayerImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "PlayerModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly nationality: {
                                            readonly deprecated: false;
                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                            readonly title: "PlayerNationality";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                            readonly title: "PlayerRoleSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "PlayerSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                    readonly title: "BasePlayer";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                }];
                                readonly title: "BaseOpponent";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "match_type", "modified_at", "name", "number_of_games", "opponents", "original_scheduled_at", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams_list", "tournament", "tournament_id", "videogame", "videogame_version", "winner", "winner_id", "winner_type"];
                        readonly title: "FullGameMatch";
                        readonly type: "object";
                    };
                    readonly match_id: {
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    };
                    readonly players: {
                        readonly deprecated: false;
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "Player's data for a Game";
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAssistCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly champion: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLChampionID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly format: "uri";
                                            readonly title: "LoLChampionImageURL";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LoLChampionName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "name"];
                                    readonly title: "BaseLoLChampion";
                                    readonly type: readonly ["object", "null"];
                                };
                                readonly creep_score: {
                                    readonly deprecated: false;
                                    readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                    readonly minimum: 0;
                                    readonly title: "LoLCreepScore";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly cs_at_14: {
                                    readonly deprecated: false;
                                    readonly description: "The player's Creep Score (CS.) at 14minutes";
                                    readonly minimum: 0;
                                    readonly title: "LolCreepScoreAt14";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly cs_diff_at_14: {
                                    readonly deprecated: false;
                                    readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                    readonly title: "LolCreepScoreDifferenceAt14";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDeathCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly flags: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly first_blood_assist: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first blood assist";
                                            readonly title: "LoLGotFirstBloodAssist";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_blood_kill: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first blood kill";
                                            readonly title: "LoLGotFirstBloodKill";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_inhibitor_assist: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first inhibitor assist";
                                            readonly title: "LoLGotFirstInhibitorAssist";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_inhibitor_kill: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first inhibitor kill";
                                            readonly title: "LoLGotFirstInhibitorKill";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_tower_assist: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first tower assist";
                                            readonly title: "LoLGotGirstTowerAssist";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_tower_kill: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first tower kill";
                                            readonly title: "LoLGotFirstTowerKill";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                    };
                                    readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                    readonly title: "LoLFlags";
                                    readonly type: "object";
                                };
                                readonly game_id: {
                                    readonly description: "LoL game ID";
                                    readonly minimum: 1;
                                    readonly title: "LoLGameID";
                                    readonly type: "integer";
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLGold";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly gold_percentage: {
                                    readonly deprecated: false;
                                    readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                    readonly maximum: 100;
                                    readonly minimum: 0;
                                    readonly title: "LoLPlayerGoldErnedPercentage";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_spent: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLGold";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly items: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LoLItemID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly format: "uri";
                                                readonly title: "LoLItemImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly is_trinket: {
                                                readonly deprecated: false;
                                                readonly description: "Whether item is a trinket";
                                                readonly title: "LoLItemIsTrinket";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly name: {
                                                readonly title: "LoLItemName";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                        readonly title: "BaseLoLItem";
                                        readonly type: "object";
                                    };
                                    readonly title: "BaseLoLItems";
                                    readonly type: "array";
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills_counters: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly inhibitors: {
                                            readonly deprecated: false;
                                            readonly description: "Number of inhibitors killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLInhibitorCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly neutral_minions: {
                                            readonly deprecated: false;
                                            readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                            readonly minimum: 0;
                                            readonly title: "LoLNeutralMinionCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly neutral_minions_enemy_jungle: {
                                            readonly deprecated: false;
                                            readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                            readonly minimum: 0;
                                            readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly neutral_minions_team_jungle: {
                                            readonly deprecated: false;
                                            readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                            readonly minimum: 0;
                                            readonly title: "LoLNeutralMinionsTeamJungleCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly players: {
                                            readonly deprecated: false;
                                            readonly description: "Number of players killed";
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly turrets: {
                                            readonly deprecated: false;
                                            readonly description: "Number of turrets killed";
                                            readonly minimum: 0;
                                            readonly title: "LoLTurretCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly wards: {
                                            readonly deprecated: false;
                                            readonly description: "Number of wards killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLWardCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                    readonly title: "LoLKillCounters";
                                    readonly type: "object";
                                };
                                readonly kills_series: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly double_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieDouble";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly penta_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSeriePenta";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly quadra_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieQuadra";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly triple_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieTriple";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                    readonly title: "LoLKillsSeries";
                                    readonly type: "object";
                                };
                                readonly largest_critical_strike: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLLargestCriticalStrike";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly largest_killing_spree: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLLargestKillingSpree";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly largest_multi_kill: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLLargestMultiKill";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly level: {
                                    readonly deprecated: false;
                                    readonly minimum: 1;
                                    readonly title: "LoLChampionLevel";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly magic_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLMagicDamage";
                                    readonly type: "object";
                                };
                                readonly masteries: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LoLMasteryID";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "LoLMasteryName";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["id", "name"];
                                        readonly title: "LoLMastery";
                                        readonly type: "object";
                                    };
                                    readonly title: "LoLMasteries";
                                    readonly type: "array";
                                };
                                readonly minions_killed: {
                                    readonly deprecated: true;
                                    readonly description: "The player's Creep Score (CS.)";
                                    readonly minimum: 0;
                                    readonly title: "LoLMinionsKilled";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly opponent: {
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly oneOf: readonly [{
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly active: {
                                                readonly description: "Whether player is active";
                                                readonly title: "PlayerIsActive";
                                                readonly type: "boolean";
                                            };
                                            readonly age: {
                                                readonly deprecated: false;
                                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly minimum: 0;
                                                readonly title: "PlayerAge";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly birthday: {
                                                readonly deprecated: false;
                                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly title: "PlayerBirthday";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly first_name: {
                                                readonly deprecated: false;
                                                readonly description: "First name of the player. `null` if unknown";
                                                readonly title: "PlayerFirstName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to the photo of the player. `null` if not available.";
                                                readonly format: "uri";
                                                readonly title: "PlayerImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly last_name: {
                                                readonly deprecated: false;
                                                readonly description: "Last name of the player. `null` if unknown";
                                                readonly title: "PlayerLastName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "PlayerModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly nationality: {
                                                readonly deprecated: false;
                                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                readonly title: "PlayerNationality";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly role: {
                                                readonly deprecated: false;
                                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                readonly title: "PlayerRoleSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "PlayerSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                        readonly title: "BasePlayer";
                                        readonly type: "object";
                                    }, {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly acronym: {
                                                readonly deprecated: false;
                                                readonly title: "TeamAcronym";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL of the team logo";
                                                readonly format: "uri";
                                                readonly title: "TeamImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly location: {
                                                readonly deprecated: false;
                                                readonly description: "The team's organization location";
                                                readonly title: "TeamLocation";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TeamModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "The name of the team.";
                                                readonly title: "TeamName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TeamSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                        readonly title: "BaseTeam";
                                        readonly type: "object";
                                    }];
                                    readonly title: "BaseOpponent";
                                };
                                readonly physical_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLPhysicalDamage";
                                    readonly type: "object";
                                };
                                readonly player: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly active: {
                                            readonly description: "Whether player is active";
                                            readonly title: "PlayerIsActive";
                                            readonly type: "boolean";
                                        };
                                        readonly age: {
                                            readonly deprecated: false;
                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly minimum: 0;
                                            readonly title: "PlayerAge";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly birthday: {
                                            readonly deprecated: false;
                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly title: "PlayerBirthday";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                            readonly format: "uri";
                                            readonly title: "PlayerImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "PlayerModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly nationality: {
                                            readonly deprecated: false;
                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                            readonly title: "PlayerNationality";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                            readonly title: "PlayerRoleSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "PlayerSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                    readonly title: "BasePlayer";
                                    readonly type: "object";
                                };
                                readonly player_id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                    readonly title: "LoLPlayerRole";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`adc` `jun` `mid` `sup` `top`";
                                };
                                readonly runes: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneID";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "LoLRuneName";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["id", "name"];
                                        readonly title: "LoLRune";
                                        readonly type: "object";
                                    };
                                    readonly title: "LoLRunes";
                                    readonly type: "array";
                                };
                                readonly runes_reforged: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly primary_path: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly id: {
                                                    readonly description: "ID of the rune";
                                                    readonly minimum: 1;
                                                    readonly title: "LoLRuneReforgedID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly description: "URL to an image of the rune";
                                                    readonly format: "uri";
                                                    readonly title: "LoLRuneReforgedImageURL";
                                                    readonly type: "string";
                                                };
                                                readonly keystone: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly lesser_runes: {
                                                    readonly items: {
                                                        readonly additionalProperties: false;
                                                        readonly deprecated: false;
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly description: "ID of the rune";
                                                                readonly minimum: 1;
                                                                readonly title: "LoLRuneReforgedID";
                                                                readonly type: "integer";
                                                            };
                                                            readonly image_url: {
                                                                readonly description: "URL to an image of the rune";
                                                                readonly format: "uri";
                                                                readonly title: "LoLRuneReforgedImageURL";
                                                                readonly type: "string";
                                                            };
                                                            readonly name: {
                                                                readonly description: "Name of the rune path";
                                                                readonly title: "LoLRuneReforgedName";
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                readonly title: "LoLRuneReforgedType";
                                                                readonly type: "string";
                                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "image_url", "name", "type"];
                                                        readonly title: "LoLRuneReforged";
                                                        readonly type: "object";
                                                    };
                                                    readonly title: "LoLRunesReforged";
                                                    readonly type: "array";
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the rune path";
                                                    readonly title: "LoLRuneReforgedName";
                                                    readonly type: "string";
                                                };
                                                readonly type: {
                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                    readonly title: "LoLRuneReforgedType";
                                                    readonly type: "string";
                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                };
                                            };
                                            readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                            readonly title: "LoLPlayerPrimaryRunePath";
                                            readonly type: readonly ["object", "null"];
                                        };
                                        readonly secondary_path: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly id: {
                                                    readonly description: "ID of the rune";
                                                    readonly minimum: 1;
                                                    readonly title: "LoLRuneReforgedID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly description: "URL to an image of the rune";
                                                    readonly format: "uri";
                                                    readonly title: "LoLRuneReforgedImageURL";
                                                    readonly type: "string";
                                                };
                                                readonly lesser_runes: {
                                                    readonly items: {
                                                        readonly additionalProperties: false;
                                                        readonly deprecated: false;
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly description: "ID of the rune";
                                                                readonly minimum: 1;
                                                                readonly title: "LoLRuneReforgedID";
                                                                readonly type: "integer";
                                                            };
                                                            readonly image_url: {
                                                                readonly description: "URL to an image of the rune";
                                                                readonly format: "uri";
                                                                readonly title: "LoLRuneReforgedImageURL";
                                                                readonly type: "string";
                                                            };
                                                            readonly name: {
                                                                readonly description: "Name of the rune path";
                                                                readonly title: "LoLRuneReforgedName";
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                readonly title: "LoLRuneReforgedType";
                                                                readonly type: "string";
                                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "image_url", "name", "type"];
                                                        readonly title: "LoLRuneReforged";
                                                        readonly type: "object";
                                                    };
                                                    readonly title: "LoLRunesReforged";
                                                    readonly type: "array";
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the rune path";
                                                    readonly title: "LoLRuneReforgedName";
                                                    readonly type: "string";
                                                };
                                                readonly type: {
                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                    readonly title: "LoLRuneReforgedType";
                                                    readonly type: "string";
                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                };
                                            };
                                            readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                            readonly title: "LoLPlayerSecondaryRunePath";
                                            readonly type: readonly ["object", "null"];
                                        };
                                        readonly shards: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly defense: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly flex: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly offense: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                            };
                                            readonly required: readonly ["defense", "flex", "offense"];
                                            readonly title: "LoLPlayerRuneShards";
                                            readonly type: "object";
                                        };
                                    };
                                    readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                    readonly title: "LoLPlayerRunesReforged";
                                    readonly type: "object";
                                };
                                readonly spells: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LoLSpellID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly format: "uri";
                                                readonly title: "LoLSpellImageURL";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "LoLSpellName";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "name"];
                                        readonly title: "LoLSpell";
                                        readonly type: "object";
                                    };
                                    readonly title: "LoLSpells";
                                    readonly type: "array";
                                };
                                readonly team: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                };
                                readonly total_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLTotalDamage";
                                    readonly type: "object";
                                };
                                readonly total_heal: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTotalHeal";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly total_time_crowd_control_dealt: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTotalTimeCrowdControlDealt";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly total_units_healed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTotalUnitsHealed";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly true_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLTrueDamage";
                                    readonly type: "object";
                                };
                                readonly wards: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly placed: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLWardsPlaced";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly sight_wards_bought_in_game: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLSightWards";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly vision_wards_bought_in_game: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLVisionWards";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                    readonly title: "LoLWards";
                                    readonly type: "object";
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLWardsPlaced";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "cs_diff_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_percentage", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                            readonly title: "LoLGamePlayer";
                            readonly type: "object";
                        };
                        readonly title: "LoLGamePlayers";
                        readonly type: readonly ["array", "null"];
                    };
                    readonly position: {
                        readonly description: "Game position in the match. Starts at 1";
                        readonly minimum: 1;
                        readonly title: "GamePosition";
                        readonly type: "integer";
                    };
                    readonly status: {
                        readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                        readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                        readonly title: "GameStatus";
                        readonly type: "string";
                    };
                    readonly teams: {
                        readonly deprecated: false;
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "Team's data for a Game";
                            readonly properties: {
                                readonly bans: {
                                    readonly items: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly title: "LoLChampionIDs";
                                    readonly type: "array";
                                };
                                readonly baron_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLBaronKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly chemtech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLChemtechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly cloud_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLCloudDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly color: {
                                    readonly enum: readonly ["blue", "red"];
                                    readonly title: "LoLTeamColor";
                                    readonly type: "string";
                                    readonly description: "`blue` `red`";
                                };
                                readonly dragon_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDragonKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly elder_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLElderDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly first_baron: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first baron Nashor";
                                    readonly title: "LoLTeamGotFirstBaron";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_blood: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first blood";
                                    readonly title: "LoLTeamGotFirstBlood";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_dragon: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first dragon";
                                    readonly title: "LoLTeamGotFirstDragon";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_herald: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first herald";
                                    readonly title: "LoLTeamGotFirstHerald";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_inhibitor: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first inhibitor";
                                    readonly title: "LoLTeamGotFirstInhibitor";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_tower: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first tower";
                                    readonly title: "LoLTeamGotFirstTower";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_voidgrub: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team killed the first voidgrub";
                                    readonly title: "LoLTeamGotFirstVoidgrub";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLGold";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly herald_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHeraldKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly hextech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHextechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly infernal_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInfernalDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly inhibitor_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInhibitorKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly mountain_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLMountainDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly ocean_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLOceanDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly player_ids: {
                                    readonly items: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly title: "PlayerIDs";
                                    readonly type: "array";
                                };
                                readonly team: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                };
                                readonly tower_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTowerKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly voidgrub_kills: {
                                    readonly deprecated: false;
                                    readonly description: "The number of voidgrubs killed by a team.";
                                    readonly maximum: 6;
                                    readonly minimum: 0;
                                    readonly title: "LoLVoidgrubKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["bans", "baron_kills", "chemtech_drake_kills", "cloud_drake_kills", "color", "dragon_kills", "elder_drake_kills", "first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "gold_earned", "herald_kills", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "mountain_drake_kills", "ocean_drake_kills", "player_ids", "team", "tower_kills", "voidgrub_kills"];
                            readonly title: "LoLGameTeam";
                            readonly type: "object";
                        };
                        readonly title: "LoLGameTeams";
                        readonly type: readonly ["array", "null"];
                    };
                    readonly winner: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["id", "type"];
                        readonly title: "GameWinner";
                        readonly type: "object";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match", "match_id", "players", "position", "status", "teams", "winner", "winner_type"];
                readonly title: "LoLGame";
                readonly type: "object";
            };
            readonly title: "LoLGames";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMatchesMatchIdOrSlugPlayersStats: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly match_id_or_slug: {
                    readonly description: "A match ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[ a-zA-Z0-9_-]+$";
                        readonly title: "MatchSlug";
                        readonly type: "string";
                    }];
                    readonly title: "MatchIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["match_id_or_slug"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly teams: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly players: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly stats: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly description: "Statistics for all players for a match";
                                            readonly properties: {
                                                readonly averages: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly assists: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageAssists";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly cs_at_14: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LolAverageCreepScoreAt14";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly cs_diff_at_14: {
                                                            readonly deprecated: false;
                                                            readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                                            readonly title: "LolAverageCreepScoreDifferenceAt14";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly deaths: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageDeaths";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly gold_earned: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageGoldEarned";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly gold_percentage: {
                                                            readonly deprecated: false;
                                                            readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                                            readonly maximum: 100;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLPlayerGoldErnedPercentage";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly gold_spent: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageGoldSpent";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly kill_counters: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly inhibitors: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageInhibitorKills";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly neutral_minions: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageNeutralMinionKills";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly neutral_minions_enemy_jungle: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageMinionsEnemyJungleKills";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly neutral_minions_team_jungle: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageMinionsTeamJungleKills";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly players: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageKills";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly turrets: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageTurretKills";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly wards: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageWardKills";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                            };
                                                            readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                                            readonly title: "LoLAverageKillCounters";
                                                            readonly type: "object";
                                                        };
                                                        readonly kills: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageKills";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly magic_damage: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly dealt: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealt";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_percentage: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                                    readonly maximum: 100;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtPercentage";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_to_champions: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtToChampions";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_to_champions_percentage: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                                    readonly maximum: 100;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly taken: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageTaken";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                            };
                                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                                            readonly title: "LoLAverageMagicDamage";
                                                            readonly type: "object";
                                                        };
                                                        readonly minions_killed: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageMinionsKilled";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly physical_damage: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly dealt: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealt";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_percentage: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                                    readonly maximum: 100;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtPercentage";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_to_champions: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtToChampions";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_to_champions_percentage: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                                    readonly maximum: 100;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly taken: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageTaken";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                            };
                                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                                            readonly title: "LoLAveragePhysicalDamage";
                                                            readonly type: "object";
                                                        };
                                                        readonly total_damage: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly dealt: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealt";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_percentage: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                                    readonly maximum: 100;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtPercentage";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_to_champions: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtToChampions";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_to_champions_percentage: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                                    readonly maximum: 100;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly taken: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageTaken";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                            };
                                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                                            readonly title: "LoLAverageTotalDamage";
                                                            readonly type: "object";
                                                        };
                                                        readonly total_heal: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageTotalHeal";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly total_time_crowd_control_dealt: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageTotalTimeCrowdControlDealt";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly total_units_healed: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageTotalUnitsHealed";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly true_damage: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly dealt: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealt";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_percentage: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                                    readonly maximum: 100;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtPercentage";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_to_champions: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtToChampions";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly dealt_to_champions_percentage: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                                    readonly maximum: 100;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                                readonly taken: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLAverageDamageTaken";
                                                                    readonly type: readonly ["number", "null"];
                                                                };
                                                            };
                                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                                            readonly title: "LoLAverageTrueDamage";
                                                            readonly type: "object";
                                                        };
                                                        readonly vision_wards_bought_in_game: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageVisionWardsBoughtInGame";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly wards_placed: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAverageWardsPlaced";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["assists", "cs_at_14", "cs_diff_at_14", "deaths", "gold_earned", "gold_percentage", "gold_spent", "kill_counters", "kills", "magic_damage", "minions_killed", "physical_damage", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "vision_wards_bought_in_game", "wards_placed"];
                                                    readonly title: "LoLPlayerAverages";
                                                    readonly type: "object";
                                                };
                                                readonly games_count: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of games";
                                                    readonly minimum: 0;
                                                    readonly title: "GameCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly totals: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly assists: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLAssistCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly deaths: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLDeathCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly games_lost: {
                                                            readonly deprecated: false;
                                                            readonly description: "Number of games";
                                                            readonly minimum: 0;
                                                            readonly title: "GameCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly games_played: {
                                                            readonly deprecated: false;
                                                            readonly description: "Number of games";
                                                            readonly minimum: 0;
                                                            readonly title: "GameCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly games_won: {
                                                            readonly deprecated: false;
                                                            readonly description: "Number of games";
                                                            readonly minimum: 0;
                                                            readonly title: "GameCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly kill_counters: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly inhibitors: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Number of inhibitors killed by the player";
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLInhibitorCount";
                                                                    readonly type: readonly ["integer", "null"];
                                                                };
                                                                readonly turrets: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Number of turrets killed";
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLTurretCount";
                                                                    readonly type: readonly ["integer", "null"];
                                                                };
                                                                readonly wards: {
                                                                    readonly deprecated: false;
                                                                    readonly description: "Number of wards killed by the player";
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLWardCount";
                                                                    readonly type: readonly ["integer", "null"];
                                                                };
                                                            };
                                                            readonly required: readonly ["inhibitors", "turrets", "wards"];
                                                            readonly title: "LoLPlayerTotalKillCounters";
                                                            readonly type: "object";
                                                        };
                                                        readonly kills: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLKillCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly kills_series: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly double_kills: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLKillsSerieDouble";
                                                                    readonly type: readonly ["integer", "null"];
                                                                };
                                                                readonly penta_kills: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLKillsSeriePenta";
                                                                    readonly type: readonly ["integer", "null"];
                                                                };
                                                                readonly quadra_kills: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLKillsSerieQuadra";
                                                                    readonly type: readonly ["integer", "null"];
                                                                };
                                                                readonly triple_kills: {
                                                                    readonly deprecated: false;
                                                                    readonly minimum: 0;
                                                                    readonly title: "LoLKillsSerieTriple";
                                                                    readonly type: readonly ["integer", "null"];
                                                                };
                                                            };
                                                            readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                                            readonly title: "LoLKillsSeries";
                                                            readonly type: "object";
                                                        };
                                                        readonly matches_lost: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "MatchCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly matches_played: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "MatchCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly matches_won: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "MatchCount";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                        readonly wards_placed: {
                                                            readonly deprecated: false;
                                                            readonly minimum: 0;
                                                            readonly title: "LoLWardsPlaced";
                                                            readonly type: readonly ["integer", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["assists", "deaths", "games_lost", "games_played", "games_won", "kill_counters", "kills", "kills_series", "matches_lost", "matches_played", "matches_won", "wards_placed"];
                                                    readonly title: "LoLPlayerStatsTotals";
                                                    readonly type: "object";
                                                };
                                            };
                                            readonly required: readonly ["averages", "games_count", "totals"];
                                            readonly title: "LoLPlayerStatsForAllPlayersByMatch";
                                            readonly type: "object";
                                        };
                                    };
                                    readonly required: readonly ["first_name", "id", "last_name", "name", "stats"];
                                    readonly title: "LoLPlayerForAllStatsPlayers";
                                    readonly type: "object";
                                };
                                readonly title: "LoLPlayersForAllStatsPlayers";
                                readonly type: "array";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["id", "name", "players", "slug"];
                        readonly title: "LoLTeamForAllStatsPlayers";
                        readonly type: "object";
                    };
                    readonly title: "LoLTeamsForAllStatsPlayers";
                    readonly type: "array";
                };
            };
            readonly required: readonly ["teams"];
            readonly title: "LoLStatsForAllPlayersByMatch";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMatchesPast: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the match offers full stats";
                            readonly title: "MatchDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly draw: {
                            readonly description: "Whether result of the match is a draw";
                            readonly title: "MatchIsDraw";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly finished: {
                            readonly type: "boolean";
                        };
                        readonly forfeit: {
                            readonly description: "Whether match was forfeited";
                            readonly title: "MatchIsForfeit";
                            readonly type: "boolean";
                        };
                        readonly future: {
                            readonly description: "`true` for future matches only, `false` for past matches only.\nFiltering is done on the `begin_at` value, so  matches with `running` status will not appear if `true`.";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly match_type: {
                            readonly items: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly not_started: {
                            readonly type: "boolean";
                        };
                        readonly number_of_games: {
                            readonly items: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly opponent_id: {
                            readonly description: "A Team or a Player (id or slug). You can use`filter[winner_type]=Team` or `filter[winner_type]=Player` to focus on teams or players.";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly description: "A team ID or slug";
                                    readonly oneOf: readonly [{
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: "string";
                                    }];
                                    readonly title: "TeamIDOrSlug";
                                }, {
                                    readonly description: "A player ID or slug";
                                    readonly oneOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: "string";
                                    }];
                                    readonly title: "PlayerIDOrSlug";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly opponents_filled: {
                            readonly description: "Whether a match has opponents filled i.e. opponents are not TBD.";
                            readonly type: "boolean";
                        };
                        readonly past: {
                            readonly type: "boolean";
                        };
                        readonly running: {
                            readonly type: "boolean";
                        };
                        readonly scheduled_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly tournament_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly unscheduled: {
                            readonly type: "boolean";
                        };
                        readonly videogame: {
                            readonly items: {
                                readonly description: "A videogame ID or slug";
                                readonly oneOf: readonly [{
                                    readonly description: "A videogame ID";
                                    readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                    readonly title: "VideogameID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "A videogame slug";
                                    readonly enum: readonly ["cod-mw", "cs-go", "dota-2", "e-basketball", "e-cricket", "e-soccer", "fifa", "kog", "league-of-legends", "lol-wild-rift", "mlbb", "ow", "pubg", "r6-siege", "rl", "starcraft-2", "starcraft-brood-war", "valorant"];
                                    readonly title: "VideogameSlug";
                                    readonly type: "string";
                                }];
                                readonly title: "VideogameIDOrSlug";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`\nOnly for `valorant/*` and `/lol/*` endpoints.\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: "string";
                                }, {
                                    readonly enum: readonly ["all"];
                                }, {
                                    readonly enum: readonly ["latest"];
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether the match offers full stats";
                                readonly title: "MatchDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly draw: {
                            readonly items: {
                                readonly description: "Whether result of the match is a draw";
                                readonly title: "MatchIsDraw";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly forfeit: {
                            readonly items: {
                                readonly description: "Whether match was forfeited";
                                readonly title: "MatchIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly match_type: {
                            readonly items: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly number_of_games: {
                            readonly items: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly scheduled_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly tournament_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "draw", "-draw", "end_at", "-end_at", "forfeit", "-forfeit", "id", "-id", "match_type", "-match_type", "modified_at", "-modified_at", "name", "-name", "number_of_games", "-number_of_games", "scheduled_at", "-scheduled_at", "slug", "-slug", "status", "-status", "tournament_id", "-tournament_id", "winner_id", "-winner_id", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly match_type: {
                            readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                            readonly title: "MatchType";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly title: "MatchName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[ a-zA-Z0-9_-]+$";
                            readonly title: "MatchSlug";
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                            readonly title: "MatchStatus";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "MatchWinnerType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether the match offers full stats";
                        readonly title: "MatchDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly draw: {
                        readonly description: "Whether result of the match is a draw";
                        readonly title: "MatchIsDraw";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly forfeit: {
                        readonly description: "Whether match was forfeited";
                        readonly title: "MatchIsForfeit";
                        readonly type: "boolean";
                    };
                    readonly game_advantage: {
                        readonly deprecated: false;
                        readonly description: "ID of the opponent with a game advantage";
                        readonly minimum: 1;
                        readonly title: "GameAdvantageOpponent";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly games: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly complete: {
                                    readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                    readonly title: "GameComplete";
                                    readonly type: "boolean";
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether historical data is available for the game";
                                    readonly title: "GameDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly finished: {
                                    readonly description: "Whether the game is finished";
                                    readonly title: "GameIsFinished";
                                    readonly type: "boolean";
                                };
                                readonly forfeit: {
                                    readonly description: "Whether the game has been forfeited";
                                    readonly title: "GameIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "LoL game ID";
                                        readonly minimum: 1;
                                        readonly title: "LoLGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "Counter-Strike game ID";
                                        readonly minimum: 1;
                                        readonly title: "CSGOGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "OwGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "Dota2GameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "PUBGGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "ValorantGameID";
                                        readonly type: "integer";
                                    }];
                                    readonly description: "ID of the game.\nIDs are video game-specific, ie. a Valorant game and an Overwatch game can have the same game ID.";
                                    readonly title: "GameID";
                                };
                                readonly length: {
                                    readonly deprecated: false;
                                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                    readonly minimum: 0;
                                    readonly title: "GameLength";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly match_id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly position: {
                                    readonly description: "Game position in the match. Starts at 1";
                                    readonly minimum: 1;
                                    readonly title: "GamePosition";
                                    readonly type: "integer";
                                };
                                readonly status: {
                                    readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                    readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                    readonly title: "GameStatus";
                                    readonly type: "string";
                                };
                                readonly winner: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly anyOf: readonly [{
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            }, {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            }];
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly title: "OpponentID";
                                        };
                                        readonly type: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`Player` `Team`";
                                        };
                                    };
                                    readonly required: readonly ["id", "type"];
                                    readonly title: "GameWinner";
                                    readonly type: "object";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "winner", "winner_type"];
                            readonly title: "Game";
                            readonly type: "object";
                        };
                        readonly title: "Games";
                        readonly type: "array";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly live: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly opens_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchLiveOpensAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly supported: {
                                readonly description: "Whether live is supported";
                                readonly title: "MatchLiveIsSupported";
                                readonly type: "boolean";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "MatchLiveURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["opens_at", "supported", "url"];
                        readonly title: "MatchLive";
                        readonly type: "object";
                    };
                    readonly map_picks: {
                        readonly deprecated: false;
                        readonly description: "**Only applies to Valorant matches. The field will not be present on other video games matches.**\nMap picks, `null` when map picks data is unavailable.\n**Important:** `map_picks` field is only present in the response for subscribers of Valorant Historical plan.";
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly id: {
                                    readonly description: "ID of the map";
                                    readonly minimum: 1;
                                    readonly title: "ValorantMapID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly description: "URL to an image of the map";
                                    readonly format: "uri";
                                    readonly title: "ValorantMapImageURL";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Name of the map";
                                    readonly title: "ValorantMapName";
                                    readonly type: "string";
                                };
                                readonly picking_team_id: {
                                    readonly deprecated: false;
                                    readonly description: "ID of the team that picked the map";
                                    readonly minimum: 1;
                                    readonly title: "ValorantPickingTeamID";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly slug: {
                                    readonly description: "Human-readable identifier of the map";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "ValorantMapSlug";
                                    readonly type: "string";
                                };
                                readonly videogame_versions: {
                                    readonly description: "Array of of video game versions (ie. patches) for this resource";
                                    readonly items: {
                                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                        readonly title: "VideogameVersion";
                                        readonly type: "string";
                                    };
                                    readonly title: "VideogameVersions";
                                    readonly type: "array";
                                };
                            };
                            readonly required: readonly ["id", "image_url", "name", "picking_team_id", "slug", "videogame_versions"];
                            readonly title: "ValorantMapPick";
                            readonly type: "object";
                        };
                        readonly title: "ValorantMapPicks";
                        readonly type: readonly ["array", "null"];
                    };
                    readonly match_type: {
                        readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                        readonly title: "MatchType";
                        readonly type: "string";
                        readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "MatchName";
                        readonly type: "string";
                    };
                    readonly number_of_games: {
                        readonly description: "Number of games";
                        readonly minimum: 0;
                        readonly title: "GameCount";
                        readonly type: "integer";
                    };
                    readonly opponents: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly opponent: {
                                    readonly oneOf: readonly [{
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly active: {
                                                readonly description: "Whether player is active";
                                                readonly title: "PlayerIsActive";
                                                readonly type: "boolean";
                                            };
                                            readonly age: {
                                                readonly deprecated: false;
                                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly minimum: 0;
                                                readonly title: "PlayerAge";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly birthday: {
                                                readonly deprecated: false;
                                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly title: "PlayerBirthday";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly first_name: {
                                                readonly deprecated: false;
                                                readonly description: "First name of the player. `null` if unknown";
                                                readonly title: "PlayerFirstName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to the photo of the player. `null` if not available.";
                                                readonly format: "uri";
                                                readonly title: "PlayerImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly last_name: {
                                                readonly deprecated: false;
                                                readonly description: "Last name of the player. `null` if unknown";
                                                readonly title: "PlayerLastName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "PlayerModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly nationality: {
                                                readonly deprecated: false;
                                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                readonly title: "PlayerNationality";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly role: {
                                                readonly deprecated: false;
                                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                readonly title: "PlayerRoleSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "PlayerSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                        readonly title: "BasePlayer";
                                        readonly type: "object";
                                    }, {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly acronym: {
                                                readonly deprecated: false;
                                                readonly title: "TeamAcronym";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL of the team logo";
                                                readonly format: "uri";
                                                readonly title: "TeamImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly location: {
                                                readonly deprecated: false;
                                                readonly description: "The team's organization location";
                                                readonly title: "TeamLocation";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TeamModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "The name of the team.";
                                                readonly title: "TeamName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TeamSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                        readonly title: "BaseTeam";
                                        readonly type: "object";
                                    }];
                                    readonly title: "BaseOpponent";
                                };
                                readonly type: {
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: "string";
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["opponent", "type"];
                            readonly title: "Opponent";
                            readonly type: "object";
                        };
                        readonly title: "Opponents";
                        readonly type: "array";
                    };
                    readonly original_scheduled_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchOriginalScheduledAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly rescheduled: {
                        readonly deprecated: false;
                        readonly description: "Whether match has been rescheduled";
                        readonly title: "MatchIsRescheduled";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly results: {
                        readonly items: {
                            readonly anyOf: readonly [{
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly score: {
                                        readonly minimum: 0;
                                        readonly title: "MatchScore";
                                        readonly type: "integer";
                                    };
                                    readonly team_id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["score", "team_id"];
                                readonly title: "MatchTeamResult";
                                readonly type: "object";
                            }, {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly player_id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly score: {
                                        readonly minimum: 0;
                                        readonly title: "MatchScore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["player_id", "score"];
                                readonly title: "MatchPlayerResult";
                                readonly type: "object";
                            }];
                            readonly title: "MatchResult";
                        };
                        readonly title: "MatchResults";
                        readonly type: "array";
                    };
                    readonly scheduled_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchScheduledAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly serie: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly full_name: {
                                readonly title: "SerieFullName";
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly deprecated: false;
                                readonly title: "SerieName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly season: {
                                readonly deprecated: false;
                                readonly title: "SerieSeason";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                            readonly year: {
                                readonly deprecated: false;
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                        readonly title: "BaseSerie";
                        readonly type: "object";
                    };
                    readonly serie_id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly slug: {
                        readonly deprecated: false;
                        readonly minLength: 1;
                        readonly pattern: "^[ a-zA-Z0-9_-]+$";
                        readonly title: "MatchSlug";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly status: {
                        readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                        readonly title: "MatchStatus";
                        readonly type: "string";
                        readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                    };
                    readonly streams_list: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly embed_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to embed in an iframe.";
                                    readonly format: "uri";
                                    readonly title: "StreamEmbedURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly language: {
                                    readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                    readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                    readonly title: "StreamLanguage";
                                    readonly type: "string";
                                };
                                readonly main: {
                                    readonly description: "Whether it is the main stream. Main stream is always official.";
                                    readonly title: "StreamIsMain";
                                    readonly type: "boolean";
                                };
                                readonly official: {
                                    readonly description: "Whether it is an official broadcast.";
                                    readonly title: "StreamIsOfficial";
                                    readonly type: "boolean";
                                };
                                readonly raw_url: {
                                    readonly description: "URL to the stream on host website.";
                                    readonly format: "uri";
                                    readonly title: "StreamURL";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                            readonly title: "Stream";
                            readonly type: "object";
                        };
                        readonly title: "StreamsList";
                        readonly type: "array";
                    };
                    readonly tournament: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                readonly title: "TournamentDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly has_bracket: {
                                readonly description: "Whether the tournament has a bracket";
                                readonly title: "TournamentHasBracket";
                                readonly type: "boolean";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly live_supported: {
                                readonly description: "Whether live is supported";
                                readonly title: "TournamentLiveSupported";
                                readonly type: "boolean";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly prizepool: {
                                readonly deprecated: false;
                                readonly title: "TournamentPrizepool";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly serie_id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly tier: {
                                readonly deprecated: false;
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                        readonly title: "BaseTournament";
                        readonly type: "object";
                    };
                    readonly tournament_id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly videogame_version: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly current: {
                                readonly description: "Whether this videogame version is current";
                                readonly title: "VideogameVersionIsCurrent";
                                readonly type: "boolean";
                            };
                            readonly name: {
                                readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                readonly title: "VideogameVersion";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["current", "name"];
                        readonly title: "ShortVideogameVersion";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner: {
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly oneOf: readonly [{
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly active: {
                                    readonly description: "Whether player is active";
                                    readonly title: "PlayerIsActive";
                                    readonly type: "boolean";
                                };
                                readonly age: {
                                    readonly deprecated: false;
                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly minimum: 0;
                                    readonly title: "PlayerAge";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly birthday: {
                                    readonly deprecated: false;
                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly title: "PlayerBirthday";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly first_name: {
                                    readonly deprecated: false;
                                    readonly description: "First name of the player. `null` if unknown";
                                    readonly title: "PlayerFirstName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                    readonly format: "uri";
                                    readonly title: "PlayerImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly last_name: {
                                    readonly deprecated: false;
                                    readonly description: "Last name of the player. `null` if unknown";
                                    readonly title: "PlayerLastName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "PlayerModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Professional name of the player";
                                    readonly title: "PlayerName";
                                    readonly type: "string";
                                };
                                readonly nationality: {
                                    readonly deprecated: false;
                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                    readonly title: "PlayerNationality";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                    readonly title: "PlayerRoleSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "PlayerSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                            readonly title: "BasePlayer";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly acronym: {
                                    readonly deprecated: false;
                                    readonly title: "TeamAcronym";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL of the team logo";
                                    readonly format: "uri";
                                    readonly title: "TeamImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly location: {
                                    readonly deprecated: false;
                                    readonly description: "The team's organization location";
                                    readonly title: "TeamLocation";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TeamModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "The name of the team.";
                                    readonly title: "TeamName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TeamSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                            readonly title: "BaseTeam";
                            readonly type: "object";
                        }];
                        readonly title: "BaseOpponent";
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "MatchWinnerType";
                        readonly type: "string";
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "match_type", "modified_at", "name", "number_of_games", "opponents", "original_scheduled_at", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams_list", "tournament", "tournament_id", "videogame", "videogame_title", "videogame_version", "winner", "winner_id", "winner_type"];
                readonly title: "Match";
                readonly type: "object";
            };
            readonly title: "LoLMatches";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMatchesRunning: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the match offers full stats";
                            readonly title: "MatchDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly draw: {
                            readonly description: "Whether result of the match is a draw";
                            readonly title: "MatchIsDraw";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly finished: {
                            readonly type: "boolean";
                        };
                        readonly forfeit: {
                            readonly description: "Whether match was forfeited";
                            readonly title: "MatchIsForfeit";
                            readonly type: "boolean";
                        };
                        readonly future: {
                            readonly description: "`true` for future matches only, `false` for past matches only.\nFiltering is done on the `begin_at` value, so  matches with `running` status will not appear if `true`.";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly match_type: {
                            readonly items: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly not_started: {
                            readonly type: "boolean";
                        };
                        readonly number_of_games: {
                            readonly items: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly opponent_id: {
                            readonly description: "A Team or a Player (id or slug). You can use`filter[winner_type]=Team` or `filter[winner_type]=Player` to focus on teams or players.";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly description: "A team ID or slug";
                                    readonly oneOf: readonly [{
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: "string";
                                    }];
                                    readonly title: "TeamIDOrSlug";
                                }, {
                                    readonly description: "A player ID or slug";
                                    readonly oneOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: "string";
                                    }];
                                    readonly title: "PlayerIDOrSlug";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly opponents_filled: {
                            readonly description: "Whether a match has opponents filled i.e. opponents are not TBD.";
                            readonly type: "boolean";
                        };
                        readonly past: {
                            readonly type: "boolean";
                        };
                        readonly running: {
                            readonly type: "boolean";
                        };
                        readonly scheduled_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly tournament_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly unscheduled: {
                            readonly type: "boolean";
                        };
                        readonly videogame: {
                            readonly items: {
                                readonly description: "A videogame ID or slug";
                                readonly oneOf: readonly [{
                                    readonly description: "A videogame ID";
                                    readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                    readonly title: "VideogameID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "A videogame slug";
                                    readonly enum: readonly ["cod-mw", "cs-go", "dota-2", "e-basketball", "e-cricket", "e-soccer", "fifa", "kog", "league-of-legends", "lol-wild-rift", "mlbb", "ow", "pubg", "r6-siege", "rl", "starcraft-2", "starcraft-brood-war", "valorant"];
                                    readonly title: "VideogameSlug";
                                    readonly type: "string";
                                }];
                                readonly title: "VideogameIDOrSlug";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`\nOnly for `valorant/*` and `/lol/*` endpoints.\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: "string";
                                }, {
                                    readonly enum: readonly ["all"];
                                }, {
                                    readonly enum: readonly ["latest"];
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether the match offers full stats";
                                readonly title: "MatchDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly draw: {
                            readonly items: {
                                readonly description: "Whether result of the match is a draw";
                                readonly title: "MatchIsDraw";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly forfeit: {
                            readonly items: {
                                readonly description: "Whether match was forfeited";
                                readonly title: "MatchIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly match_type: {
                            readonly items: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly number_of_games: {
                            readonly items: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly scheduled_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly tournament_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "draw", "-draw", "end_at", "-end_at", "forfeit", "-forfeit", "id", "-id", "match_type", "-match_type", "modified_at", "-modified_at", "name", "-name", "number_of_games", "-number_of_games", "scheduled_at", "-scheduled_at", "slug", "-slug", "status", "-status", "tournament_id", "-tournament_id", "winner_id", "-winner_id", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly match_type: {
                            readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                            readonly title: "MatchType";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly title: "MatchName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[ a-zA-Z0-9_-]+$";
                            readonly title: "MatchSlug";
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                            readonly title: "MatchStatus";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "MatchWinnerType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether the match offers full stats";
                        readonly title: "MatchDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly draw: {
                        readonly description: "Whether result of the match is a draw";
                        readonly title: "MatchIsDraw";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly forfeit: {
                        readonly description: "Whether match was forfeited";
                        readonly title: "MatchIsForfeit";
                        readonly type: "boolean";
                    };
                    readonly game_advantage: {
                        readonly deprecated: false;
                        readonly description: "ID of the opponent with a game advantage";
                        readonly minimum: 1;
                        readonly title: "GameAdvantageOpponent";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly games: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly complete: {
                                    readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                    readonly title: "GameComplete";
                                    readonly type: "boolean";
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether historical data is available for the game";
                                    readonly title: "GameDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly finished: {
                                    readonly description: "Whether the game is finished";
                                    readonly title: "GameIsFinished";
                                    readonly type: "boolean";
                                };
                                readonly forfeit: {
                                    readonly description: "Whether the game has been forfeited";
                                    readonly title: "GameIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "LoL game ID";
                                        readonly minimum: 1;
                                        readonly title: "LoLGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "Counter-Strike game ID";
                                        readonly minimum: 1;
                                        readonly title: "CSGOGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "OwGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "Dota2GameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "PUBGGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "ValorantGameID";
                                        readonly type: "integer";
                                    }];
                                    readonly description: "ID of the game.\nIDs are video game-specific, ie. a Valorant game and an Overwatch game can have the same game ID.";
                                    readonly title: "GameID";
                                };
                                readonly length: {
                                    readonly deprecated: false;
                                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                    readonly minimum: 0;
                                    readonly title: "GameLength";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly match_id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly position: {
                                    readonly description: "Game position in the match. Starts at 1";
                                    readonly minimum: 1;
                                    readonly title: "GamePosition";
                                    readonly type: "integer";
                                };
                                readonly status: {
                                    readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                    readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                    readonly title: "GameStatus";
                                    readonly type: "string";
                                };
                                readonly winner: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly anyOf: readonly [{
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            }, {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            }];
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly title: "OpponentID";
                                        };
                                        readonly type: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`Player` `Team`";
                                        };
                                    };
                                    readonly required: readonly ["id", "type"];
                                    readonly title: "GameWinner";
                                    readonly type: "object";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "winner", "winner_type"];
                            readonly title: "Game";
                            readonly type: "object";
                        };
                        readonly title: "Games";
                        readonly type: "array";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly live: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly opens_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchLiveOpensAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly supported: {
                                readonly description: "Whether live is supported";
                                readonly title: "MatchLiveIsSupported";
                                readonly type: "boolean";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "MatchLiveURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["opens_at", "supported", "url"];
                        readonly title: "MatchLive";
                        readonly type: "object";
                    };
                    readonly map_picks: {
                        readonly deprecated: false;
                        readonly description: "**Only applies to Valorant matches. The field will not be present on other video games matches.**\nMap picks, `null` when map picks data is unavailable.\n**Important:** `map_picks` field is only present in the response for subscribers of Valorant Historical plan.";
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly id: {
                                    readonly description: "ID of the map";
                                    readonly minimum: 1;
                                    readonly title: "ValorantMapID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly description: "URL to an image of the map";
                                    readonly format: "uri";
                                    readonly title: "ValorantMapImageURL";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Name of the map";
                                    readonly title: "ValorantMapName";
                                    readonly type: "string";
                                };
                                readonly picking_team_id: {
                                    readonly deprecated: false;
                                    readonly description: "ID of the team that picked the map";
                                    readonly minimum: 1;
                                    readonly title: "ValorantPickingTeamID";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly slug: {
                                    readonly description: "Human-readable identifier of the map";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "ValorantMapSlug";
                                    readonly type: "string";
                                };
                                readonly videogame_versions: {
                                    readonly description: "Array of of video game versions (ie. patches) for this resource";
                                    readonly items: {
                                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                        readonly title: "VideogameVersion";
                                        readonly type: "string";
                                    };
                                    readonly title: "VideogameVersions";
                                    readonly type: "array";
                                };
                            };
                            readonly required: readonly ["id", "image_url", "name", "picking_team_id", "slug", "videogame_versions"];
                            readonly title: "ValorantMapPick";
                            readonly type: "object";
                        };
                        readonly title: "ValorantMapPicks";
                        readonly type: readonly ["array", "null"];
                    };
                    readonly match_type: {
                        readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                        readonly title: "MatchType";
                        readonly type: "string";
                        readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "MatchName";
                        readonly type: "string";
                    };
                    readonly number_of_games: {
                        readonly description: "Number of games";
                        readonly minimum: 0;
                        readonly title: "GameCount";
                        readonly type: "integer";
                    };
                    readonly opponents: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly opponent: {
                                    readonly oneOf: readonly [{
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly active: {
                                                readonly description: "Whether player is active";
                                                readonly title: "PlayerIsActive";
                                                readonly type: "boolean";
                                            };
                                            readonly age: {
                                                readonly deprecated: false;
                                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly minimum: 0;
                                                readonly title: "PlayerAge";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly birthday: {
                                                readonly deprecated: false;
                                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly title: "PlayerBirthday";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly first_name: {
                                                readonly deprecated: false;
                                                readonly description: "First name of the player. `null` if unknown";
                                                readonly title: "PlayerFirstName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to the photo of the player. `null` if not available.";
                                                readonly format: "uri";
                                                readonly title: "PlayerImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly last_name: {
                                                readonly deprecated: false;
                                                readonly description: "Last name of the player. `null` if unknown";
                                                readonly title: "PlayerLastName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "PlayerModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly nationality: {
                                                readonly deprecated: false;
                                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                readonly title: "PlayerNationality";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly role: {
                                                readonly deprecated: false;
                                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                readonly title: "PlayerRoleSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "PlayerSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                        readonly title: "BasePlayer";
                                        readonly type: "object";
                                    }, {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly acronym: {
                                                readonly deprecated: false;
                                                readonly title: "TeamAcronym";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL of the team logo";
                                                readonly format: "uri";
                                                readonly title: "TeamImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly location: {
                                                readonly deprecated: false;
                                                readonly description: "The team's organization location";
                                                readonly title: "TeamLocation";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TeamModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "The name of the team.";
                                                readonly title: "TeamName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TeamSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                        readonly title: "BaseTeam";
                                        readonly type: "object";
                                    }];
                                    readonly title: "BaseOpponent";
                                };
                                readonly type: {
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: "string";
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["opponent", "type"];
                            readonly title: "Opponent";
                            readonly type: "object";
                        };
                        readonly title: "Opponents";
                        readonly type: "array";
                    };
                    readonly original_scheduled_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchOriginalScheduledAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly rescheduled: {
                        readonly deprecated: false;
                        readonly description: "Whether match has been rescheduled";
                        readonly title: "MatchIsRescheduled";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly results: {
                        readonly items: {
                            readonly anyOf: readonly [{
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly score: {
                                        readonly minimum: 0;
                                        readonly title: "MatchScore";
                                        readonly type: "integer";
                                    };
                                    readonly team_id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["score", "team_id"];
                                readonly title: "MatchTeamResult";
                                readonly type: "object";
                            }, {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly player_id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly score: {
                                        readonly minimum: 0;
                                        readonly title: "MatchScore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["player_id", "score"];
                                readonly title: "MatchPlayerResult";
                                readonly type: "object";
                            }];
                            readonly title: "MatchResult";
                        };
                        readonly title: "MatchResults";
                        readonly type: "array";
                    };
                    readonly scheduled_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchScheduledAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly serie: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly full_name: {
                                readonly title: "SerieFullName";
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly deprecated: false;
                                readonly title: "SerieName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly season: {
                                readonly deprecated: false;
                                readonly title: "SerieSeason";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                            readonly year: {
                                readonly deprecated: false;
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                        readonly title: "BaseSerie";
                        readonly type: "object";
                    };
                    readonly serie_id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly slug: {
                        readonly deprecated: false;
                        readonly minLength: 1;
                        readonly pattern: "^[ a-zA-Z0-9_-]+$";
                        readonly title: "MatchSlug";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly status: {
                        readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                        readonly title: "MatchStatus";
                        readonly type: "string";
                        readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                    };
                    readonly streams_list: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly embed_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to embed in an iframe.";
                                    readonly format: "uri";
                                    readonly title: "StreamEmbedURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly language: {
                                    readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                    readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                    readonly title: "StreamLanguage";
                                    readonly type: "string";
                                };
                                readonly main: {
                                    readonly description: "Whether it is the main stream. Main stream is always official.";
                                    readonly title: "StreamIsMain";
                                    readonly type: "boolean";
                                };
                                readonly official: {
                                    readonly description: "Whether it is an official broadcast.";
                                    readonly title: "StreamIsOfficial";
                                    readonly type: "boolean";
                                };
                                readonly raw_url: {
                                    readonly description: "URL to the stream on host website.";
                                    readonly format: "uri";
                                    readonly title: "StreamURL";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                            readonly title: "Stream";
                            readonly type: "object";
                        };
                        readonly title: "StreamsList";
                        readonly type: "array";
                    };
                    readonly tournament: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                readonly title: "TournamentDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly has_bracket: {
                                readonly description: "Whether the tournament has a bracket";
                                readonly title: "TournamentHasBracket";
                                readonly type: "boolean";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly live_supported: {
                                readonly description: "Whether live is supported";
                                readonly title: "TournamentLiveSupported";
                                readonly type: "boolean";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly prizepool: {
                                readonly deprecated: false;
                                readonly title: "TournamentPrizepool";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly serie_id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly tier: {
                                readonly deprecated: false;
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                        readonly title: "BaseTournament";
                        readonly type: "object";
                    };
                    readonly tournament_id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly videogame_version: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly current: {
                                readonly description: "Whether this videogame version is current";
                                readonly title: "VideogameVersionIsCurrent";
                                readonly type: "boolean";
                            };
                            readonly name: {
                                readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                readonly title: "VideogameVersion";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["current", "name"];
                        readonly title: "ShortVideogameVersion";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner: {
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly oneOf: readonly [{
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly active: {
                                    readonly description: "Whether player is active";
                                    readonly title: "PlayerIsActive";
                                    readonly type: "boolean";
                                };
                                readonly age: {
                                    readonly deprecated: false;
                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly minimum: 0;
                                    readonly title: "PlayerAge";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly birthday: {
                                    readonly deprecated: false;
                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly title: "PlayerBirthday";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly first_name: {
                                    readonly deprecated: false;
                                    readonly description: "First name of the player. `null` if unknown";
                                    readonly title: "PlayerFirstName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                    readonly format: "uri";
                                    readonly title: "PlayerImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly last_name: {
                                    readonly deprecated: false;
                                    readonly description: "Last name of the player. `null` if unknown";
                                    readonly title: "PlayerLastName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "PlayerModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Professional name of the player";
                                    readonly title: "PlayerName";
                                    readonly type: "string";
                                };
                                readonly nationality: {
                                    readonly deprecated: false;
                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                    readonly title: "PlayerNationality";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                    readonly title: "PlayerRoleSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "PlayerSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                            readonly title: "BasePlayer";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly acronym: {
                                    readonly deprecated: false;
                                    readonly title: "TeamAcronym";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL of the team logo";
                                    readonly format: "uri";
                                    readonly title: "TeamImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly location: {
                                    readonly deprecated: false;
                                    readonly description: "The team's organization location";
                                    readonly title: "TeamLocation";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TeamModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "The name of the team.";
                                    readonly title: "TeamName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TeamSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                            readonly title: "BaseTeam";
                            readonly type: "object";
                        }];
                        readonly title: "BaseOpponent";
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "MatchWinnerType";
                        readonly type: "string";
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "match_type", "modified_at", "name", "number_of_games", "opponents", "original_scheduled_at", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams_list", "tournament", "tournament_id", "videogame", "videogame_title", "videogame_version", "winner", "winner_id", "winner_type"];
                readonly title: "Match";
                readonly type: "object";
            };
            readonly title: "LoLMatches";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolMatchesUpcoming: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the match offers full stats";
                            readonly title: "MatchDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly draw: {
                            readonly description: "Whether result of the match is a draw";
                            readonly title: "MatchIsDraw";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly finished: {
                            readonly type: "boolean";
                        };
                        readonly forfeit: {
                            readonly description: "Whether match was forfeited";
                            readonly title: "MatchIsForfeit";
                            readonly type: "boolean";
                        };
                        readonly future: {
                            readonly description: "`true` for future matches only, `false` for past matches only.\nFiltering is done on the `begin_at` value, so  matches with `running` status will not appear if `true`.";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly match_type: {
                            readonly items: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly not_started: {
                            readonly type: "boolean";
                        };
                        readonly number_of_games: {
                            readonly items: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly opponent_id: {
                            readonly description: "A Team or a Player (id or slug). You can use`filter[winner_type]=Team` or `filter[winner_type]=Player` to focus on teams or players.";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly description: "A team ID or slug";
                                    readonly oneOf: readonly [{
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: "string";
                                    }];
                                    readonly title: "TeamIDOrSlug";
                                }, {
                                    readonly description: "A player ID or slug";
                                    readonly oneOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: "string";
                                    }];
                                    readonly title: "PlayerIDOrSlug";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly opponents_filled: {
                            readonly description: "Whether a match has opponents filled i.e. opponents are not TBD.";
                            readonly type: "boolean";
                        };
                        readonly past: {
                            readonly type: "boolean";
                        };
                        readonly running: {
                            readonly type: "boolean";
                        };
                        readonly scheduled_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly tournament_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly unscheduled: {
                            readonly type: "boolean";
                        };
                        readonly videogame: {
                            readonly items: {
                                readonly description: "A videogame ID or slug";
                                readonly oneOf: readonly [{
                                    readonly description: "A videogame ID";
                                    readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                    readonly title: "VideogameID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "A videogame slug";
                                    readonly enum: readonly ["cod-mw", "cs-go", "dota-2", "e-basketball", "e-cricket", "e-soccer", "fifa", "kog", "league-of-legends", "lol-wild-rift", "mlbb", "ow", "pubg", "r6-siege", "rl", "starcraft-2", "starcraft-brood-war", "valorant"];
                                    readonly title: "VideogameSlug";
                                    readonly type: "string";
                                }];
                                readonly title: "VideogameIDOrSlug";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`\nOnly for `valorant/*` and `/lol/*` endpoints.\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                    readonly title: "VideogameVersion";
                                    readonly type: "string";
                                }, {
                                    readonly enum: readonly ["all"];
                                }, {
                                    readonly enum: readonly ["latest"];
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether the match offers full stats";
                                readonly title: "MatchDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly draw: {
                            readonly items: {
                                readonly description: "Whether result of the match is a draw";
                                readonly title: "MatchIsDraw";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly forfeit: {
                            readonly items: {
                                readonly description: "Whether match was forfeited";
                                readonly title: "MatchIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly match_type: {
                            readonly items: {
                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                readonly title: "MatchType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "MatchName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly number_of_games: {
                            readonly items: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly scheduled_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchScheduledAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                readonly title: "MatchSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                readonly title: "MatchStatus";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly tournament_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "MatchWinnerType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "draw", "-draw", "end_at", "-end_at", "forfeit", "-forfeit", "id", "-id", "match_type", "-match_type", "modified_at", "-modified_at", "name", "-name", "number_of_games", "-number_of_games", "scheduled_at", "-scheduled_at", "slug", "-slug", "status", "-status", "tournament_id", "-tournament_id", "winner_id", "-winner_id", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly match_type: {
                            readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                            readonly title: "MatchType";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly title: "MatchName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[ a-zA-Z0-9_-]+$";
                            readonly title: "MatchSlug";
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                            readonly title: "MatchStatus";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "MatchWinnerType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether the match offers full stats";
                        readonly title: "MatchDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly draw: {
                        readonly description: "Whether result of the match is a draw";
                        readonly title: "MatchIsDraw";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly forfeit: {
                        readonly description: "Whether match was forfeited";
                        readonly title: "MatchIsForfeit";
                        readonly type: "boolean";
                    };
                    readonly game_advantage: {
                        readonly deprecated: false;
                        readonly description: "ID of the opponent with a game advantage";
                        readonly minimum: 1;
                        readonly title: "GameAdvantageOpponent";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly games: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly complete: {
                                    readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                    readonly title: "GameComplete";
                                    readonly type: "boolean";
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether historical data is available for the game";
                                    readonly title: "GameDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly finished: {
                                    readonly description: "Whether the game is finished";
                                    readonly title: "GameIsFinished";
                                    readonly type: "boolean";
                                };
                                readonly forfeit: {
                                    readonly description: "Whether the game has been forfeited";
                                    readonly title: "GameIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "LoL game ID";
                                        readonly minimum: 1;
                                        readonly title: "LoLGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "Counter-Strike game ID";
                                        readonly minimum: 1;
                                        readonly title: "CSGOGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "OwGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "Dota2GameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "PUBGGameID";
                                        readonly type: "integer";
                                    }, {
                                        readonly minimum: 1;
                                        readonly title: "ValorantGameID";
                                        readonly type: "integer";
                                    }];
                                    readonly description: "ID of the game.\nIDs are video game-specific, ie. a Valorant game and an Overwatch game can have the same game ID.";
                                    readonly title: "GameID";
                                };
                                readonly length: {
                                    readonly deprecated: false;
                                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                    readonly minimum: 0;
                                    readonly title: "GameLength";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly match_id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly position: {
                                    readonly description: "Game position in the match. Starts at 1";
                                    readonly minimum: 1;
                                    readonly title: "GamePosition";
                                    readonly type: "integer";
                                };
                                readonly status: {
                                    readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                    readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                    readonly title: "GameStatus";
                                    readonly type: "string";
                                };
                                readonly winner: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly anyOf: readonly [{
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            }, {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            }];
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly title: "OpponentID";
                                        };
                                        readonly type: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`Player` `Team`";
                                        };
                                    };
                                    readonly required: readonly ["id", "type"];
                                    readonly title: "GameWinner";
                                    readonly type: "object";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "position", "status", "winner", "winner_type"];
                            readonly title: "Game";
                            readonly type: "object";
                        };
                        readonly title: "Games";
                        readonly type: "array";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly live: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly opens_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "MatchLiveOpensAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly supported: {
                                readonly description: "Whether live is supported";
                                readonly title: "MatchLiveIsSupported";
                                readonly type: "boolean";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "MatchLiveURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["opens_at", "supported", "url"];
                        readonly title: "MatchLive";
                        readonly type: "object";
                    };
                    readonly map_picks: {
                        readonly deprecated: false;
                        readonly description: "**Only applies to Valorant matches. The field will not be present on other video games matches.**\nMap picks, `null` when map picks data is unavailable.\n**Important:** `map_picks` field is only present in the response for subscribers of Valorant Historical plan.";
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly id: {
                                    readonly description: "ID of the map";
                                    readonly minimum: 1;
                                    readonly title: "ValorantMapID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly description: "URL to an image of the map";
                                    readonly format: "uri";
                                    readonly title: "ValorantMapImageURL";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Name of the map";
                                    readonly title: "ValorantMapName";
                                    readonly type: "string";
                                };
                                readonly picking_team_id: {
                                    readonly deprecated: false;
                                    readonly description: "ID of the team that picked the map";
                                    readonly minimum: 1;
                                    readonly title: "ValorantPickingTeamID";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly slug: {
                                    readonly description: "Human-readable identifier of the map";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "ValorantMapSlug";
                                    readonly type: "string";
                                };
                                readonly videogame_versions: {
                                    readonly description: "Array of of video game versions (ie. patches) for this resource";
                                    readonly items: {
                                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                        readonly title: "VideogameVersion";
                                        readonly type: "string";
                                    };
                                    readonly title: "VideogameVersions";
                                    readonly type: "array";
                                };
                            };
                            readonly required: readonly ["id", "image_url", "name", "picking_team_id", "slug", "videogame_versions"];
                            readonly title: "ValorantMapPick";
                            readonly type: "object";
                        };
                        readonly title: "ValorantMapPicks";
                        readonly type: readonly ["array", "null"];
                    };
                    readonly match_type: {
                        readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                        readonly title: "MatchType";
                        readonly type: "string";
                        readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "MatchName";
                        readonly type: "string";
                    };
                    readonly number_of_games: {
                        readonly description: "Number of games";
                        readonly minimum: 0;
                        readonly title: "GameCount";
                        readonly type: "integer";
                    };
                    readonly opponents: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly opponent: {
                                    readonly oneOf: readonly [{
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly active: {
                                                readonly description: "Whether player is active";
                                                readonly title: "PlayerIsActive";
                                                readonly type: "boolean";
                                            };
                                            readonly age: {
                                                readonly deprecated: false;
                                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly minimum: 0;
                                                readonly title: "PlayerAge";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly birthday: {
                                                readonly deprecated: false;
                                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly title: "PlayerBirthday";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly first_name: {
                                                readonly deprecated: false;
                                                readonly description: "First name of the player. `null` if unknown";
                                                readonly title: "PlayerFirstName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to the photo of the player. `null` if not available.";
                                                readonly format: "uri";
                                                readonly title: "PlayerImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly last_name: {
                                                readonly deprecated: false;
                                                readonly description: "Last name of the player. `null` if unknown";
                                                readonly title: "PlayerLastName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "PlayerModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly nationality: {
                                                readonly deprecated: false;
                                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                readonly title: "PlayerNationality";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly role: {
                                                readonly deprecated: false;
                                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                readonly title: "PlayerRoleSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "PlayerSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                        readonly title: "BasePlayer";
                                        readonly type: "object";
                                    }, {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly acronym: {
                                                readonly deprecated: false;
                                                readonly title: "TeamAcronym";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL of the team logo";
                                                readonly format: "uri";
                                                readonly title: "TeamImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly location: {
                                                readonly deprecated: false;
                                                readonly description: "The team's organization location";
                                                readonly title: "TeamLocation";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TeamModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "The name of the team.";
                                                readonly title: "TeamName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TeamSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                        readonly title: "BaseTeam";
                                        readonly type: "object";
                                    }];
                                    readonly title: "BaseOpponent";
                                };
                                readonly type: {
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: "string";
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["opponent", "type"];
                            readonly title: "Opponent";
                            readonly type: "object";
                        };
                        readonly title: "Opponents";
                        readonly type: "array";
                    };
                    readonly original_scheduled_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchOriginalScheduledAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly rescheduled: {
                        readonly deprecated: false;
                        readonly description: "Whether match has been rescheduled";
                        readonly title: "MatchIsRescheduled";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly results: {
                        readonly items: {
                            readonly anyOf: readonly [{
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly score: {
                                        readonly minimum: 0;
                                        readonly title: "MatchScore";
                                        readonly type: "integer";
                                    };
                                    readonly team_id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["score", "team_id"];
                                readonly title: "MatchTeamResult";
                                readonly type: "object";
                            }, {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly player_id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly score: {
                                        readonly minimum: 0;
                                        readonly title: "MatchScore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["player_id", "score"];
                                readonly title: "MatchPlayerResult";
                                readonly type: "object";
                            }];
                            readonly title: "MatchResult";
                        };
                        readonly title: "MatchResults";
                        readonly type: "array";
                    };
                    readonly scheduled_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "MatchScheduledAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly serie: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly full_name: {
                                readonly title: "SerieFullName";
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly deprecated: false;
                                readonly title: "SerieName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly season: {
                                readonly deprecated: false;
                                readonly title: "SerieSeason";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                            readonly year: {
                                readonly deprecated: false;
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                        readonly title: "BaseSerie";
                        readonly type: "object";
                    };
                    readonly serie_id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly slug: {
                        readonly deprecated: false;
                        readonly minLength: 1;
                        readonly pattern: "^[ a-zA-Z0-9_-]+$";
                        readonly title: "MatchSlug";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly status: {
                        readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                        readonly title: "MatchStatus";
                        readonly type: "string";
                        readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                    };
                    readonly streams_list: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly embed_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to embed in an iframe.";
                                    readonly format: "uri";
                                    readonly title: "StreamEmbedURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly language: {
                                    readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                    readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                    readonly title: "StreamLanguage";
                                    readonly type: "string";
                                };
                                readonly main: {
                                    readonly description: "Whether it is the main stream. Main stream is always official.";
                                    readonly title: "StreamIsMain";
                                    readonly type: "boolean";
                                };
                                readonly official: {
                                    readonly description: "Whether it is an official broadcast.";
                                    readonly title: "StreamIsOfficial";
                                    readonly type: "boolean";
                                };
                                readonly raw_url: {
                                    readonly description: "URL to the stream on host website.";
                                    readonly format: "uri";
                                    readonly title: "StreamURL";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                            readonly title: "Stream";
                            readonly type: "object";
                        };
                        readonly title: "StreamsList";
                        readonly type: "array";
                    };
                    readonly tournament: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                readonly title: "TournamentDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly has_bracket: {
                                readonly description: "Whether the tournament has a bracket";
                                readonly title: "TournamentHasBracket";
                                readonly type: "boolean";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly live_supported: {
                                readonly description: "Whether live is supported";
                                readonly title: "TournamentLiveSupported";
                                readonly type: "boolean";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly prizepool: {
                                readonly deprecated: false;
                                readonly title: "TournamentPrizepool";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly serie_id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly tier: {
                                readonly deprecated: false;
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                        readonly title: "BaseTournament";
                        readonly type: "object";
                    };
                    readonly tournament_id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly videogame_version: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly current: {
                                readonly description: "Whether this videogame version is current";
                                readonly title: "VideogameVersionIsCurrent";
                                readonly type: "boolean";
                            };
                            readonly name: {
                                readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                readonly title: "VideogameVersion";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["current", "name"];
                        readonly title: "ShortVideogameVersion";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner: {
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly oneOf: readonly [{
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly active: {
                                    readonly description: "Whether player is active";
                                    readonly title: "PlayerIsActive";
                                    readonly type: "boolean";
                                };
                                readonly age: {
                                    readonly deprecated: false;
                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly minimum: 0;
                                    readonly title: "PlayerAge";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly birthday: {
                                    readonly deprecated: false;
                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly title: "PlayerBirthday";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly first_name: {
                                    readonly deprecated: false;
                                    readonly description: "First name of the player. `null` if unknown";
                                    readonly title: "PlayerFirstName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                    readonly format: "uri";
                                    readonly title: "PlayerImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly last_name: {
                                    readonly deprecated: false;
                                    readonly description: "Last name of the player. `null` if unknown";
                                    readonly title: "PlayerLastName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "PlayerModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Professional name of the player";
                                    readonly title: "PlayerName";
                                    readonly type: "string";
                                };
                                readonly nationality: {
                                    readonly deprecated: false;
                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                    readonly title: "PlayerNationality";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                    readonly title: "PlayerRoleSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "PlayerSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                            readonly title: "BasePlayer";
                            readonly type: "object";
                        }, {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly acronym: {
                                    readonly deprecated: false;
                                    readonly title: "TeamAcronym";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL of the team logo";
                                    readonly format: "uri";
                                    readonly title: "TeamImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly location: {
                                    readonly deprecated: false;
                                    readonly description: "The team's organization location";
                                    readonly title: "TeamLocation";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TeamModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "The name of the team.";
                                    readonly title: "TeamName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TeamSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                            readonly title: "BaseTeam";
                            readonly type: "object";
                        }];
                        readonly title: "BaseOpponent";
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "MatchWinnerType";
                        readonly type: "string";
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "games", "id", "league", "league_id", "live", "match_type", "modified_at", "name", "number_of_games", "opponents", "original_scheduled_at", "rescheduled", "results", "scheduled_at", "serie", "serie_id", "slug", "status", "streams_list", "tournament", "tournament_id", "videogame", "videogame_title", "videogame_version", "winner", "winner_id", "winner_type"];
                readonly title: "Match";
                readonly type: "object";
            };
            readonly title: "LoLMatches";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolPlayers: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly active: {
                            readonly description: "Whether player is active";
                            readonly title: "PlayerIsActive";
                            readonly type: "boolean";
                        };
                        readonly birthday: {
                            readonly items: {
                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly title: "PlayerBirthday";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly first_name: {
                            readonly items: {
                                readonly description: "First name of the player. `null` if unknown";
                                readonly title: "PlayerFirstName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly last_name: {
                            readonly items: {
                                readonly description: "Last name of the player. `null` if unknown";
                                readonly title: "PlayerLastName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "PlayerModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "Professional name of the player";
                                readonly title: "PlayerName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly nationality: {
                            readonly items: {
                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                readonly title: "PlayerNationality";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly role: {
                            readonly items: {
                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                readonly title: "PlayerRoleSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "PlayerSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly team_id: {
                            readonly items: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_id: {
                            readonly items: {
                                readonly description: "A videogame ID";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly birthday: {
                            readonly items: {
                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly title: "PlayerBirthday";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly first_name: {
                            readonly items: {
                                readonly description: "First name of the player. `null` if unknown";
                                readonly title: "PlayerFirstName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly last_name: {
                            readonly items: {
                                readonly description: "Last name of the player. `null` if unknown";
                                readonly title: "PlayerLastName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "PlayerModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "Professional name of the player";
                                readonly title: "PlayerName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly nationality: {
                            readonly items: {
                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                readonly title: "PlayerNationality";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly role: {
                            readonly items: {
                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                readonly title: "PlayerRoleSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "PlayerSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["birthday", "-birthday", "first_name", "-first_name", "id", "-id", "last_name", "-last_name", "modified_at", "-modified_at", "name", "-name", "nationality", "-nationality", "role", "-role", "slug", "-slug", "videogame_id", "-videogame_id", "team_id", "-team_id"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly birthday: {
                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                            readonly title: "PlayerBirthday";
                            readonly type: "string";
                        };
                        readonly first_name: {
                            readonly description: "First name of the player. `null` if unknown";
                            readonly title: "PlayerFirstName";
                            readonly type: "string";
                        };
                        readonly last_name: {
                            readonly description: "Last name of the player. `null` if unknown";
                            readonly title: "PlayerLastName";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly description: "Professional name of the player";
                            readonly title: "PlayerName";
                            readonly type: "string";
                        };
                        readonly nationality: {
                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                            readonly title: "PlayerNationality";
                            readonly type: "string";
                        };
                        readonly role: {
                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                            readonly title: "PlayerRoleSlug";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "PlayerSlug";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly active: {
                        readonly description: "Whether player is active";
                        readonly title: "PlayerIsActive";
                        readonly type: "boolean";
                    };
                    readonly age: {
                        readonly deprecated: false;
                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                        readonly minimum: 0;
                        readonly title: "PlayerAge";
                        readonly type: readonly ["number", "null"];
                    };
                    readonly birthday: {
                        readonly deprecated: false;
                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                        readonly title: "PlayerBirthday";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly current_team: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly acronym: {
                                readonly deprecated: false;
                                readonly title: "TeamAcronym";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL of the team logo";
                                readonly format: "uri";
                                readonly title: "TeamImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly location: {
                                readonly deprecated: false;
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                        readonly title: "BaseTeam";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly current_videogame: {
                        readonly deprecated: false;
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: readonly ["object", "null"];
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly first_name: {
                        readonly deprecated: false;
                        readonly description: "First name of the player. `null` if unknown";
                        readonly title: "PlayerFirstName";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly id: {
                        readonly description: "ID of the player";
                        readonly minimum: 1;
                        readonly title: "PlayerID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly deprecated: false;
                        readonly description: "URL to the photo of the player. `null` if not available.";
                        readonly format: "uri";
                        readonly title: "PlayerImageURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly last_name: {
                        readonly deprecated: false;
                        readonly description: "Last name of the player. `null` if unknown";
                        readonly title: "PlayerLastName";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "PlayerModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly description: "Professional name of the player";
                        readonly title: "PlayerName";
                        readonly type: "string";
                    };
                    readonly nationality: {
                        readonly deprecated: false;
                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                        readonly title: "PlayerNationality";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly role: {
                        readonly deprecated: false;
                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                        readonly title: "PlayerRoleSlug";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly slug: {
                        readonly deprecated: false;
                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "PlayerSlug";
                        readonly type: readonly ["string", "null"];
                    };
                };
                readonly required: readonly ["active", "current_team", "current_videogame", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                readonly title: "Player";
                readonly type: "object";
            };
            readonly title: "LoLPlayers";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolPlayersPlayerIdOrSlugStats: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly player_id_or_slug: {
                    readonly description: "A player ID or slug";
                    readonly oneOf: readonly [{
                        readonly description: "ID of the player";
                        readonly minimum: 1;
                        readonly title: "PlayerID";
                        readonly type: "integer";
                    }, {
                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "PlayerSlug";
                        readonly type: "string";
                    }];
                    readonly title: "PlayerIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["player_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly games_count: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The amount of games used for the statistics.\n\nFor example if `?games_count=5`, it would show the statistics for the most recent 5 games played\n";
                };
                readonly side: {
                    readonly enum: readonly ["blue", "red"];
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly videogame_version: {
                    readonly description: "Possible values are `latest`, `all` or a specific version number.";
                    readonly oneOf: readonly [{
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    }, {
                        readonly enum: readonly ["all"];
                    }, {
                        readonly enum: readonly ["latest"];
                    }];
                    readonly title: "VideogameVersionOrAll";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly from: {
                    readonly format: "date";
                    readonly type: "string";
                    readonly examples: readonly ["2017-07-21"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter out 'from' date";
                };
                readonly to: {
                    readonly format: "date";
                    readonly type: "string";
                    readonly examples: readonly ["2017-07-21"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter out 'to' date";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly description: "Aggregated statistics for a player grouped by serie";
            readonly properties: {
                readonly active: {
                    readonly description: "Whether player is active";
                    readonly title: "PlayerIsActive";
                    readonly type: "boolean";
                };
                readonly age: {
                    readonly deprecated: false;
                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                    readonly minimum: 0;
                    readonly title: "PlayerAge";
                    readonly type: readonly ["number", "null"];
                };
                readonly birthday: {
                    readonly deprecated: false;
                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                    readonly title: "PlayerBirthday";
                    readonly type: readonly ["string", "null"];
                };
                readonly current_team: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly acronym: {
                            readonly deprecated: false;
                            readonly title: "TeamAcronym";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly id: {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        };
                        readonly image_url: {
                            readonly deprecated: false;
                            readonly description: "URL of the team logo";
                            readonly format: "uri";
                            readonly title: "TeamImageURL";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly location: {
                            readonly deprecated: false;
                            readonly description: "The team's organization location";
                            readonly title: "TeamLocation";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly modified_at: {
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "TeamModifiedAt";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly description: "The name of the team.";
                            readonly title: "TeamName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly deprecated: false;
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TeamSlug";
                            readonly type: readonly ["string", "null"];
                        };
                    };
                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                    readonly title: "BaseTeam";
                    readonly type: readonly ["object", "null"];
                };
                readonly current_videogame: {
                    readonly deprecated: false;
                    readonly enum: readonly [{
                        readonly id: 1;
                        readonly name: "LoL";
                        readonly slug: "league-of-legends";
                    }, {
                        readonly id: 3;
                        readonly name: "Counter-Strike";
                        readonly slug: "cs-go";
                    }, {
                        readonly id: 4;
                        readonly name: "Dota 2";
                        readonly slug: "dota-2";
                    }, {
                        readonly id: 14;
                        readonly name: "Overwatch";
                        readonly slug: "ow";
                    }, {
                        readonly id: 20;
                        readonly name: "PUBG";
                        readonly slug: "pubg";
                    }, {
                        readonly id: 22;
                        readonly name: "Rocket League";
                        readonly slug: "rl";
                    }, {
                        readonly id: 23;
                        readonly name: "Call of Duty";
                        readonly slug: "cod-mw";
                    }, {
                        readonly id: 24;
                        readonly name: "Rainbow 6 Siege";
                        readonly slug: "r6-siege";
                    }, {
                        readonly id: 25;
                        readonly name: "EA Sports FC";
                        readonly slug: "fifa";
                    }, {
                        readonly id: 26;
                        readonly name: "Valorant";
                        readonly slug: "valorant";
                    }, {
                        readonly id: 27;
                        readonly name: "King of Glory";
                        readonly slug: "kog";
                    }, {
                        readonly id: 28;
                        readonly name: "LoL Wild Rift";
                        readonly slug: "lol-wild-rift";
                    }, {
                        readonly id: 29;
                        readonly name: "StarCraft 2";
                        readonly slug: "starcraft-2";
                    }, {
                        readonly id: 30;
                        readonly name: "StarCraft Brood War";
                        readonly slug: "starcraft-brood-war";
                    }, {
                        readonly id: 31;
                        readonly name: "eSoccer";
                        readonly slug: "e-soccer";
                    }, {
                        readonly id: 32;
                        readonly name: "eBasketball";
                        readonly slug: "e-basketball";
                    }, {
                        readonly id: 33;
                        readonly name: "eCricket";
                        readonly slug: "e-cricket";
                    }, {
                        readonly id: 34;
                        readonly name: "Mobile Legends: Bang Bang";
                        readonly slug: "mlbb";
                    }];
                    readonly title: "CurrentVideogame";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                    readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                };
                readonly favorite_champions: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A player's most used champion";
                        readonly properties: {
                            readonly champion: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly armor: {
                                        readonly minimum: 0;
                                        readonly title: "LoLArmor";
                                        readonly type: "number";
                                    };
                                    readonly armorperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLArmorPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly attackdamage: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackDamage";
                                        readonly type: "number";
                                    };
                                    readonly attackdamageperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackDamagePerLevel";
                                        readonly type: "number";
                                    };
                                    readonly attackrange: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackRange";
                                        readonly type: "number";
                                    };
                                    readonly attackspeedoffset: {
                                        readonly deprecated: false;
                                        readonly title: "LoLAttackSpeedOffset";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly attackspeedperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackSpeedPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly big_image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionBigImageURL";
                                        readonly type: "string";
                                    };
                                    readonly crit: {
                                        readonly minimum: 0;
                                        readonly title: "LoLCrit";
                                        readonly type: "number";
                                    };
                                    readonly critperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLCritPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly hp: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHP";
                                        readonly type: "number";
                                    };
                                    readonly hpperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly hpregen: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPRegen";
                                        readonly type: "number";
                                    };
                                    readonly hpregenperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPRegenPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionImageURL";
                                        readonly type: "string";
                                    };
                                    readonly movespeed: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMoveSpeed";
                                        readonly type: "number";
                                    };
                                    readonly mp: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMP";
                                        readonly type: "number";
                                    };
                                    readonly mpperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly mpregen: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPRegen";
                                        readonly type: "number";
                                    };
                                    readonly mpregenperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPRegenPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly name: {
                                        readonly title: "LoLChampionName";
                                        readonly type: "string";
                                    };
                                    readonly spellblock: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMagicResist";
                                        readonly type: "number";
                                    };
                                    readonly spellblockperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMagicResistPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly videogame_versions: {
                                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                                        readonly items: {
                                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                            readonly title: "VideogameVersion";
                                            readonly type: "string";
                                        };
                                        readonly title: "VideogameVersions";
                                        readonly type: "array";
                                    };
                                };
                                readonly required: readonly ["armor", "armorperlevel", "attackdamage", "attackdamageperlevel", "attackrange", "attackspeedoffset", "attackspeedperlevel", "big_image_url", "crit", "critperlevel", "hp", "hpperlevel", "hpregen", "hpregenperlevel", "id", "image_url", "movespeed", "mp", "mpperlevel", "mpregen", "mpregenperlevel", "name", "spellblock", "spellblockperlevel", "videogame_versions"];
                                readonly title: "LoLChampion";
                                readonly type: "object";
                            };
                            readonly games_count: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly games_lost: {
                                readonly description: "Number of games lost by the player on the given champion";
                                readonly type: "integer";
                            };
                            readonly games_won: {
                                readonly description: "Number of games won by the player on the given champion";
                                readonly type: "integer";
                            };
                            readonly most_used_items: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "An item used by a champion";
                                    readonly properties: {
                                        readonly count: {
                                            readonly minimum: 0;
                                            readonly title: "LoLUsedItemCount";
                                            readonly type: "integer";
                                        };
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLItemID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLItemName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["count", "id", "name"];
                                    readonly title: "LoLUsedItem";
                                    readonly type: "object";
                                };
                                readonly title: "LoLUsedItems";
                                readonly type: "array";
                            };
                        };
                        readonly required: readonly ["champion", "games_count", "games_lost", "games_won", "most_used_items"];
                        readonly title: "LoLFavoriteChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLFavoriteChampions";
                    readonly type: "array";
                };
                readonly first_name: {
                    readonly deprecated: false;
                    readonly description: "First name of the player. `null` if unknown";
                    readonly title: "PlayerFirstName";
                    readonly type: readonly ["string", "null"];
                };
                readonly id: {
                    readonly description: "ID of the player";
                    readonly minimum: 1;
                    readonly title: "PlayerID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly deprecated: false;
                    readonly description: "URL to the photo of the player. `null` if not available.";
                    readonly format: "uri";
                    readonly title: "PlayerImageURL";
                    readonly type: readonly ["string", "null"];
                };
                readonly last_games: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Player's data for a Game";
                        readonly properties: {
                            readonly assists: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLAssistCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly champion: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionImageURL";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly title: "LoLChampionName";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["id", "image_url", "name"];
                                readonly title: "BaseLoLChampion";
                                readonly type: readonly ["object", "null"];
                            };
                            readonly creep_score: {
                                readonly deprecated: false;
                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                readonly minimum: 0;
                                readonly title: "LoLCreepScore";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly cs_at_14: {
                                readonly deprecated: false;
                                readonly description: "The player's Creep Score (CS.) at 14minutes";
                                readonly minimum: 0;
                                readonly title: "LolCreepScoreAt14";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly deaths: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLDeathCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly flags: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly first_blood_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first blood assist";
                                        readonly title: "LoLGotFirstBloodAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_blood_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first blood kill";
                                        readonly title: "LoLGotFirstBloodKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_inhibitor_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first inhibitor assist";
                                        readonly title: "LoLGotFirstInhibitorAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_inhibitor_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first inhibitor kill";
                                        readonly title: "LoLGotFirstInhibitorKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_tower_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first tower assist";
                                        readonly title: "LoLGotGirstTowerAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_tower_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first tower kill";
                                        readonly title: "LoLGotFirstTowerKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                };
                                readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                readonly title: "LoLFlags";
                                readonly type: "object";
                            };
                            readonly game_id: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly gold_earned: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly gold_spent: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly items: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLItemID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LoLItemImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly is_trinket: {
                                            readonly deprecated: false;
                                            readonly description: "Whether item is a trinket";
                                            readonly title: "LoLItemIsTrinket";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly name: {
                                            readonly title: "LoLItemName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                    readonly title: "BaseLoLItem";
                                    readonly type: "object";
                                };
                                readonly title: "BaseLoLItems";
                                readonly type: "array";
                            };
                            readonly kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLKillCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly kills_counters: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly inhibitors: {
                                        readonly deprecated: false;
                                        readonly description: "Number of inhibitors killed by the player";
                                        readonly minimum: 0;
                                        readonly title: "LoLInhibitorCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions_enemy_jungle: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions_team_jungle: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionsTeamJungleCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly players: {
                                        readonly deprecated: false;
                                        readonly description: "Number of players killed";
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly turrets: {
                                        readonly deprecated: false;
                                        readonly description: "Number of turrets killed";
                                        readonly minimum: 0;
                                        readonly title: "LoLTurretCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly wards: {
                                        readonly deprecated: false;
                                        readonly description: "Number of wards killed by the player";
                                        readonly minimum: 0;
                                        readonly title: "LoLWardCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                readonly title: "LoLKillCounters";
                                readonly type: "object";
                            };
                            readonly kills_series: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly double_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieDouble";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly penta_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSeriePenta";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly quadra_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieQuadra";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly triple_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieTriple";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                readonly title: "LoLKillsSeries";
                                readonly type: "object";
                            };
                            readonly largest_critical_strike: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestCriticalStrike";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly largest_killing_spree: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestKillingSpree";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly largest_multi_kill: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestMultiKill";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly level: {
                                readonly deprecated: false;
                                readonly minimum: 1;
                                readonly title: "LoLChampionLevel";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly magic_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly masteries: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLMasteryID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLMasteryName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly title: "LoLMastery";
                                    readonly type: "object";
                                };
                                readonly title: "LoLMasteries";
                                readonly type: "array";
                            };
                            readonly minions_killed: {
                                readonly deprecated: true;
                                readonly description: "The player's Creep Score (CS.)";
                                readonly minimum: 0;
                                readonly title: "LoLMinionsKilled";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly opponent: {
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly oneOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly active: {
                                            readonly description: "Whether player is active";
                                            readonly title: "PlayerIsActive";
                                            readonly type: "boolean";
                                        };
                                        readonly age: {
                                            readonly deprecated: false;
                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly minimum: 0;
                                            readonly title: "PlayerAge";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly birthday: {
                                            readonly deprecated: false;
                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly title: "PlayerBirthday";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                            readonly format: "uri";
                                            readonly title: "PlayerImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "PlayerModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly nationality: {
                                            readonly deprecated: false;
                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                            readonly title: "PlayerNationality";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                            readonly title: "PlayerRoleSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "PlayerSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                    readonly title: "BasePlayer";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                }];
                                readonly title: "BaseOpponent";
                            };
                            readonly physical_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly player: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly active: {
                                        readonly description: "Whether player is active";
                                        readonly title: "PlayerIsActive";
                                        readonly type: "boolean";
                                    };
                                    readonly age: {
                                        readonly deprecated: false;
                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly minimum: 0;
                                        readonly title: "PlayerAge";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly birthday: {
                                        readonly deprecated: false;
                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly title: "PlayerBirthday";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly first_name: {
                                        readonly deprecated: false;
                                        readonly description: "First name of the player. `null` if unknown";
                                        readonly title: "PlayerFirstName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                        readonly format: "uri";
                                        readonly title: "PlayerImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly last_name: {
                                        readonly deprecated: false;
                                        readonly description: "Last name of the player. `null` if unknown";
                                        readonly title: "PlayerLastName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "PlayerModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "Professional name of the player";
                                        readonly title: "PlayerName";
                                        readonly type: "string";
                                    };
                                    readonly nationality: {
                                        readonly deprecated: false;
                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                        readonly title: "PlayerNationality";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly role: {
                                        readonly deprecated: false;
                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                        readonly title: "PlayerRoleSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                readonly title: "BasePlayer";
                                readonly type: "object";
                            };
                            readonly player_id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                readonly title: "LoLPlayerRole";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`adc` `jun` `mid` `sup` `top`";
                            };
                            readonly runes: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLRuneID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLRuneName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly title: "LoLRune";
                                    readonly type: "object";
                                };
                                readonly title: "LoLRunes";
                                readonly type: "array";
                            };
                            readonly runes_reforged: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly primary_path: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly description: "ID of the rune";
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneReforgedID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly description: "URL to an image of the rune";
                                                readonly format: "uri";
                                                readonly title: "LoLRuneReforgedImageURL";
                                                readonly type: "string";
                                            };
                                            readonly keystone: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: "object";
                                            };
                                            readonly lesser_runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunesReforged";
                                                readonly type: "array";
                                            };
                                            readonly name: {
                                                readonly description: "Name of the rune path";
                                                readonly title: "LoLRuneReforgedName";
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                readonly title: "LoLRuneReforgedType";
                                                readonly type: "string";
                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                        readonly title: "LoLPlayerPrimaryRunePath";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly secondary_path: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly description: "ID of the rune";
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneReforgedID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly description: "URL to an image of the rune";
                                                readonly format: "uri";
                                                readonly title: "LoLRuneReforgedImageURL";
                                                readonly type: "string";
                                            };
                                            readonly lesser_runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunesReforged";
                                                readonly type: "array";
                                            };
                                            readonly name: {
                                                readonly description: "Name of the rune path";
                                                readonly title: "LoLRuneReforgedName";
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                readonly title: "LoLRuneReforgedType";
                                                readonly type: "string";
                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                        readonly title: "LoLPlayerSecondaryRunePath";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly shards: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly defense: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly flex: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly offense: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                        };
                                        readonly required: readonly ["defense", "flex", "offense"];
                                        readonly title: "LoLPlayerRuneShards";
                                        readonly type: "object";
                                    };
                                };
                                readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                readonly title: "LoLPlayerRunesReforged";
                                readonly type: "object";
                            };
                            readonly spells: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLSpellID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly format: "uri";
                                            readonly title: "LoLSpellImageURL";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LoLSpellName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "name"];
                                    readonly title: "LoLSpell";
                                    readonly type: "object";
                                };
                                readonly title: "LoLSpells";
                                readonly type: "array";
                            };
                            readonly team: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly acronym: {
                                        readonly deprecated: false;
                                        readonly title: "TeamAcronym";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL of the team logo";
                                        readonly format: "uri";
                                        readonly title: "TeamImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly location: {
                                        readonly deprecated: false;
                                        readonly description: "The team's organization location";
                                        readonly title: "TeamLocation";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TeamModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "The name of the team.";
                                        readonly title: "TeamName";
                                        readonly type: "string";
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                readonly title: "BaseTeam";
                                readonly type: "object";
                            };
                            readonly total_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly total_heal: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalHeal";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly total_time_crowd_control_dealt: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalTimeCrowdControlDealt";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly total_units_healed: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalUnitsHealed";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly true_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly wards: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLWardsPlaced";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly sight_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLSightWards";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly vision_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLVisionWards";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                readonly title: "LoLWards";
                                readonly type: "object";
                            };
                            readonly wards_placed: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLWardsPlaced";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                        readonly title: "LoLGamePlayerForStats";
                        readonly type: "object";
                    };
                    readonly title: "LoLGamePlayersForStats";
                    readonly type: "array";
                };
                readonly last_name: {
                    readonly deprecated: false;
                    readonly description: "Last name of the player. `null` if unknown";
                    readonly title: "PlayerLastName";
                    readonly type: readonly ["string", "null"];
                };
                readonly modified_at: {
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "PlayerModifiedAt";
                    readonly type: "string";
                };
                readonly name: {
                    readonly description: "Professional name of the player";
                    readonly title: "PlayerName";
                    readonly type: "string";
                };
                readonly nationality: {
                    readonly deprecated: false;
                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                    readonly title: "PlayerNationality";
                    readonly type: readonly ["string", "null"];
                };
                readonly role: {
                    readonly deprecated: false;
                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                    readonly title: "PlayerRoleSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly slug: {
                    readonly deprecated: false;
                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                    readonly minLength: 1;
                    readonly pattern: "^[a-z0-9_-]+$";
                    readonly title: "PlayerSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly stats: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Player's statistics for a serie";
                        readonly properties: {
                            readonly averages: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly assists: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageAssists";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly cs_at_14: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LolAverageCreepScoreAt14";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly cs_diff_at_14: {
                                        readonly deprecated: false;
                                        readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                        readonly title: "LolAverageCreepScoreDifferenceAt14";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly deaths: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDeaths";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly gold_earned: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageGoldEarned";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly gold_percentage: {
                                        readonly deprecated: false;
                                        readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                        readonly maximum: 100;
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerGoldErnedPercentage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly gold_spent: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageGoldSpent";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly kill_counters: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly inhibitors: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageInhibitorKills";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly neutral_minions: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageNeutralMinionKills";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly neutral_minions_enemy_jungle: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageMinionsEnemyJungleKills";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly neutral_minions_team_jungle: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageMinionsTeamJungleKills";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly players: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageKills";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly turrets: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageTurretKills";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly wards: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageWardKills";
                                                readonly type: readonly ["number", "null"];
                                            };
                                        };
                                        readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                        readonly title: "LoLAverageKillCounters";
                                        readonly type: "object";
                                    };
                                    readonly kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly magic_damage: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly dealt: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealt";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_to_champions: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtToChampions";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_to_champions_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly taken: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageTaken";
                                                readonly type: readonly ["number", "null"];
                                            };
                                        };
                                        readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                        readonly title: "LoLAverageMagicDamage";
                                        readonly type: "object";
                                    };
                                    readonly minions_killed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageMinionsKilled";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly physical_damage: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly dealt: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealt";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_to_champions: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtToChampions";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_to_champions_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly taken: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageTaken";
                                                readonly type: readonly ["number", "null"];
                                            };
                                        };
                                        readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                        readonly title: "LoLAveragePhysicalDamage";
                                        readonly type: "object";
                                    };
                                    readonly total_damage: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly dealt: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealt";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_to_champions: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtToChampions";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_to_champions_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly taken: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageTaken";
                                                readonly type: readonly ["number", "null"];
                                            };
                                        };
                                        readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                        readonly title: "LoLAverageTotalDamage";
                                        readonly type: "object";
                                    };
                                    readonly total_heal: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageTotalHeal";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly total_time_crowd_control_dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageTotalTimeCrowdControlDealt";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly total_units_healed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageTotalUnitsHealed";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly true_damage: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly dealt: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealt";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_to_champions: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtToChampions";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly dealt_to_champions_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly taken: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAverageDamageTaken";
                                                readonly type: readonly ["number", "null"];
                                            };
                                        };
                                        readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                        readonly title: "LoLAverageTrueDamage";
                                        readonly type: "object";
                                    };
                                    readonly vision_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageVisionWardsBoughtInGame";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly wards_placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageWardsPlaced";
                                        readonly type: readonly ["number", "null"];
                                    };
                                };
                                readonly required: readonly ["assists", "cs_at_14", "cs_diff_at_14", "deaths", "gold_earned", "gold_percentage", "gold_spent", "kill_counters", "kills", "magic_damage", "minions_killed", "physical_damage", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "vision_wards_bought_in_game", "wards_placed"];
                                readonly title: "LoLPlayerAverages";
                                readonly type: "object";
                            };
                            readonly games_count: {
                                readonly deprecated: false;
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly serie: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly description: "A serie, an occurrence of a league event";
                                readonly properties: {
                                    readonly begin_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieBeginAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly end_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieEndAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly full_name: {
                                        readonly title: "SerieFullName";
                                        readonly type: "string";
                                    };
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "SerieID";
                                        readonly type: "integer";
                                    };
                                    readonly league: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LeagueID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly format: "uri";
                                                readonly title: "LeagueImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "LeagueModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "LeagueName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9:_-]+$";
                                                readonly title: "LeagueSlug";
                                                readonly type: "string";
                                            };
                                            readonly url: {
                                                readonly deprecated: false;
                                                readonly format: "uri";
                                                readonly title: "LeagueURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                                        readonly title: "BaseLeague";
                                        readonly type: "object";
                                    };
                                    readonly league_id: {
                                        readonly minimum: 1;
                                        readonly title: "LeagueID";
                                        readonly type: "integer";
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly deprecated: false;
                                        readonly title: "SerieName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly season: {
                                        readonly deprecated: false;
                                        readonly title: "SerieSeason";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "SerieSlug";
                                        readonly type: "string";
                                    };
                                    readonly tournaments: {
                                        readonly items: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly begin_at: {
                                                    readonly deprecated: false;
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentBeginAt";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly detailed_stats: {
                                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                                    readonly title: "TournamentDetailedStats";
                                                    readonly type: "boolean";
                                                };
                                                readonly end_at: {
                                                    readonly deprecated: false;
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentEndAt";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly has_bracket: {
                                                    readonly description: "Whether the tournament has a bracket";
                                                    readonly title: "TournamentHasBracket";
                                                    readonly type: "boolean";
                                                };
                                                readonly id: {
                                                    readonly minimum: 1;
                                                    readonly title: "TournamentID";
                                                    readonly type: "integer";
                                                };
                                                readonly league_id: {
                                                    readonly minimum: 1;
                                                    readonly title: "LeagueID";
                                                    readonly type: "integer";
                                                };
                                                readonly live_supported: {
                                                    readonly description: "Whether live is supported";
                                                    readonly title: "TournamentLiveSupported";
                                                    readonly type: "boolean";
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly title: "TournamentName";
                                                    readonly type: "string";
                                                };
                                                readonly prizepool: {
                                                    readonly deprecated: false;
                                                    readonly title: "TournamentPrizepool";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly serie_id: {
                                                    readonly minimum: 1;
                                                    readonly title: "SerieID";
                                                    readonly type: "integer";
                                                };
                                                readonly slug: {
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TournamentSlug";
                                                    readonly type: "string";
                                                };
                                                readonly tier: {
                                                    readonly deprecated: false;
                                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                                    readonly title: "TournamentTier";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly winner_id: {
                                                    readonly anyOf: readonly [{
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    }, {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    }];
                                                    readonly deprecated: false;
                                                    readonly nullable: true;
                                                    readonly title: "OpponentID";
                                                };
                                                readonly winner_type: {
                                                    readonly deprecated: false;
                                                    readonly enum: readonly ["Player", "Team"];
                                                    readonly title: "OpponentType";
                                                    readonly type: readonly ["string", "null"];
                                                    readonly description: "`Player` `Team`";
                                                };
                                            };
                                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                                            readonly title: "BaseTournament";
                                            readonly type: "object";
                                        };
                                        readonly title: "BaseTournaments";
                                        readonly type: "array";
                                    };
                                    readonly videogame: {
                                        readonly enum: readonly [{
                                            readonly id: 1;
                                            readonly name: "LoL";
                                            readonly slug: "league-of-legends";
                                        }, {
                                            readonly id: 3;
                                            readonly name: "Counter-Strike";
                                            readonly slug: "cs-go";
                                        }, {
                                            readonly id: 4;
                                            readonly name: "Dota 2";
                                            readonly slug: "dota-2";
                                        }, {
                                            readonly id: 14;
                                            readonly name: "Overwatch";
                                            readonly slug: "ow";
                                        }, {
                                            readonly id: 20;
                                            readonly name: "PUBG";
                                            readonly slug: "pubg";
                                        }, {
                                            readonly id: 22;
                                            readonly name: "Rocket League";
                                            readonly slug: "rl";
                                        }, {
                                            readonly id: 23;
                                            readonly name: "Call of Duty";
                                            readonly slug: "cod-mw";
                                        }, {
                                            readonly id: 24;
                                            readonly name: "Rainbow 6 Siege";
                                            readonly slug: "r6-siege";
                                        }, {
                                            readonly id: 25;
                                            readonly name: "EA Sports FC";
                                            readonly slug: "fifa";
                                        }, {
                                            readonly id: 26;
                                            readonly name: "Valorant";
                                            readonly slug: "valorant";
                                        }, {
                                            readonly id: 27;
                                            readonly name: "King of Glory";
                                            readonly slug: "kog";
                                        }, {
                                            readonly id: 28;
                                            readonly name: "LoL Wild Rift";
                                            readonly slug: "lol-wild-rift";
                                        }, {
                                            readonly id: 29;
                                            readonly name: "StarCraft 2";
                                            readonly slug: "starcraft-2";
                                        }, {
                                            readonly id: 30;
                                            readonly name: "StarCraft Brood War";
                                            readonly slug: "starcraft-brood-war";
                                        }, {
                                            readonly id: 31;
                                            readonly name: "eSoccer";
                                            readonly slug: "e-soccer";
                                        }, {
                                            readonly id: 32;
                                            readonly name: "eBasketball";
                                            readonly slug: "e-basketball";
                                        }, {
                                            readonly id: 33;
                                            readonly name: "eCricket";
                                            readonly slug: "e-cricket";
                                        }, {
                                            readonly id: 34;
                                            readonly name: "Mobile Legends: Bang Bang";
                                            readonly slug: "mlbb";
                                        }];
                                        readonly title: "CurrentVideogame";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                                    };
                                    readonly videogame_title: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "VideogameTitleID";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "VideogameTitleName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "VideogameTitleSlug";
                                                readonly type: "string";
                                            };
                                            readonly videogame_id: {
                                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                                readonly title: "VideogameID";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                                        readonly title: "VideogameTitle";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly winner_id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly winner_type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                    readonly year: {
                                        readonly deprecated: false;
                                        readonly minimum: 2012;
                                        readonly title: "SerieYear";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                                readonly title: "Serie";
                                readonly type: "object";
                            };
                            readonly totals: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly assists: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAssistCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly deaths: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDeathCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_lost: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_played: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_won: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly kill_counters: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly inhibitors: {
                                                readonly deprecated: false;
                                                readonly description: "Number of inhibitors killed by the player";
                                                readonly minimum: 0;
                                                readonly title: "LoLInhibitorCount";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly turrets: {
                                                readonly deprecated: false;
                                                readonly description: "Number of turrets killed";
                                                readonly minimum: 0;
                                                readonly title: "LoLTurretCount";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly wards: {
                                                readonly deprecated: false;
                                                readonly description: "Number of wards killed by the player";
                                                readonly minimum: 0;
                                                readonly title: "LoLWardCount";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                        };
                                        readonly required: readonly ["inhibitors", "turrets", "wards"];
                                        readonly title: "LoLPlayerTotalKillCounters";
                                        readonly type: "object";
                                    };
                                    readonly kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly kills_series: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly double_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLKillsSerieDouble";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly penta_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLKillsSeriePenta";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly quadra_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLKillsSerieQuadra";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly triple_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLKillsSerieTriple";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                        };
                                        readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                        readonly title: "LoLKillsSeries";
                                        readonly type: "object";
                                    };
                                    readonly matches_lost: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly matches_played: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly matches_won: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly wards_placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLWardsPlaced";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["assists", "deaths", "games_lost", "games_played", "games_won", "kill_counters", "kills", "kills_series", "matches_lost", "matches_played", "matches_won", "wards_placed"];
                                readonly title: "LoLPlayerStatsTotals";
                                readonly type: "object";
                            };
                        };
                        readonly required: readonly ["averages", "games_count", "serie", "totals"];
                        readonly title: "LoLPlayerBySerieStat";
                        readonly type: "object";
                    };
                    readonly title: "LoLPlayerBySerieStats";
                    readonly type: "array";
                };
                readonly teams: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly acronym: {
                                readonly deprecated: false;
                                readonly title: "TeamAcronym";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL of the team logo";
                                readonly format: "uri";
                                readonly title: "TeamImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly location: {
                                readonly deprecated: false;
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                        readonly title: "BaseTeam";
                        readonly type: "object";
                    };
                    readonly title: "BaseTeams";
                    readonly type: "array";
                };
                readonly total_stats: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly description: "Total Player's statistics";
                    readonly properties: {
                        readonly averages: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageAssists";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly cs_at_14: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LolAverageCreepScoreAt14";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly cs_diff_at_14: {
                                    readonly deprecated: false;
                                    readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                    readonly title: "LolAverageCreepScoreDifferenceAt14";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDeaths";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldEarned";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_percentage: {
                                    readonly deprecated: false;
                                    readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                    readonly maximum: 100;
                                    readonly minimum: 0;
                                    readonly title: "LoLPlayerGoldErnedPercentage";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_spent: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldSpent";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly kill_counters: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly inhibitors: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageInhibitorKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageNeutralMinionKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions_enemy_jungle: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageMinionsEnemyJungleKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions_team_jungle: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageMinionsTeamJungleKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly players: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly turrets: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageTurretKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly wards: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageWardKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                    readonly title: "LoLAverageKillCounters";
                                    readonly type: "object";
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly magic_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageMagicDamage";
                                    readonly type: "object";
                                };
                                readonly minions_killed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageMinionsKilled";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly physical_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAveragePhysicalDamage";
                                    readonly type: "object";
                                };
                                readonly total_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageTotalDamage";
                                    readonly type: "object";
                                };
                                readonly total_heal: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalHeal";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly total_time_crowd_control_dealt: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalTimeCrowdControlDealt";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly total_units_healed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalUnitsHealed";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly true_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageTrueDamage";
                                    readonly type: "object";
                                };
                                readonly vision_wards_bought_in_game: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageVisionWardsBoughtInGame";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageWardsPlaced";
                                    readonly type: readonly ["number", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "cs_at_14", "cs_diff_at_14", "deaths", "gold_earned", "gold_percentage", "gold_spent", "kill_counters", "kills", "magic_damage", "minions_killed", "physical_damage", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "vision_wards_bought_in_game", "wards_placed"];
                            readonly title: "LoLPlayerAverages";
                            readonly type: "object";
                        };
                        readonly games_count: {
                            readonly deprecated: false;
                            readonly description: "Number of games";
                            readonly minimum: 0;
                            readonly title: "GameCount";
                            readonly type: readonly ["integer", "null"];
                        };
                        readonly totals: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAssistCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDeathCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_played: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kill_counters: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly inhibitors: {
                                            readonly deprecated: false;
                                            readonly description: "Number of inhibitors killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLInhibitorCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly turrets: {
                                            readonly deprecated: false;
                                            readonly description: "Number of turrets killed";
                                            readonly minimum: 0;
                                            readonly title: "LoLTurretCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly wards: {
                                            readonly deprecated: false;
                                            readonly description: "Number of wards killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLWardCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["inhibitors", "turrets", "wards"];
                                    readonly title: "LoLPlayerTotalKillCounters";
                                    readonly type: "object";
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills_series: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly double_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieDouble";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly penta_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSeriePenta";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly quadra_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieQuadra";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly triple_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieTriple";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                    readonly title: "LoLKillsSeries";
                                    readonly type: "object";
                                };
                                readonly matches_lost: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_played: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_won: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLWardsPlaced";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "deaths", "games_lost", "games_played", "games_won", "kill_counters", "kills", "kills_series", "matches_lost", "matches_played", "matches_won", "wards_placed"];
                            readonly title: "LoLPlayerStatsTotals";
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["averages", "games_count", "totals"];
                    readonly title: "LoLTotalPlayerStat";
                    readonly type: "object";
                };
            };
            readonly required: readonly ["active", "age", "birthday", "current_team", "current_videogame", "favorite_champions", "first_name", "id", "image_url", "last_games", "last_name", "modified_at", "name", "nationality", "role", "slug", "stats", "teams", "total_stats"];
            readonly title: "LoLStatsForPlayer";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolRunes: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLRuneID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLRuneName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLRuneID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLRuneName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["id", "-id", "name", "-name"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLRuneName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLRuneID";
                        readonly type: "integer";
                    };
                    readonly name: {
                        readonly title: "LoLRuneName";
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["id", "name"];
                readonly title: "LoLRune";
                readonly type: "object";
            };
            readonly title: "LoLRunes";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolRunesLolRuneId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_rune_id: {
                    readonly minimum: 1;
                    readonly title: "LoLRuneID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A rune ID";
                };
            };
            readonly required: readonly ["lol_rune_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly id: {
                    readonly minimum: 1;
                    readonly title: "LoLRuneID";
                    readonly type: "integer";
                };
                readonly name: {
                    readonly title: "LoLRuneName";
                    readonly type: "string";
                };
            };
            readonly required: readonly ["id", "name"];
            readonly title: "LoLRune";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolRunesReforged: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly description: "ID of the rune";
                                readonly minimum: 1;
                                readonly title: "LoLRuneReforgedID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "Name of the rune path";
                                readonly title: "LoLRuneReforgedName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly description: "ID of the rune";
                                readonly minimum: 1;
                                readonly title: "LoLRuneReforgedID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "Name of the rune path";
                                readonly title: "LoLRuneReforgedName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["id", "-id", "name", "-name"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly description: "Name of the rune path";
                            readonly title: "LoLRuneReforgedName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly id: {
                        readonly description: "ID of the rune";
                        readonly minimum: 1;
                        readonly title: "LoLRuneReforgedID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly description: "URL to an image of the rune";
                        readonly format: "uri";
                        readonly title: "LoLRuneReforgedImageURL";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly description: "Name of the rune path";
                        readonly title: "LoLRuneReforgedName";
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                        readonly title: "LoLRuneReforgedType";
                        readonly type: "string";
                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                    };
                };
                readonly required: readonly ["id", "image_url", "name", "type"];
                readonly title: "LoLRuneReforged";
                readonly type: "object";
            };
            readonly title: "LoLRunesReforged";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolRunesReforgedLolRuneReforgedId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_rune_reforged_id: {
                    readonly description: "ID of the LoL rune";
                    readonly minimum: 1;
                    readonly title: "LoLRuneReforgedID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["lol_rune_reforged_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly id: {
                    readonly description: "ID of the rune";
                    readonly minimum: 1;
                    readonly title: "LoLRuneReforgedID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly description: "URL to an image of the rune";
                    readonly format: "uri";
                    readonly title: "LoLRuneReforgedImageURL";
                    readonly type: "string";
                };
                readonly name: {
                    readonly description: "Name of the rune path";
                    readonly title: "LoLRuneReforgedName";
                    readonly type: "string";
                };
                readonly type: {
                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                    readonly title: "LoLRuneReforgedType";
                    readonly type: "string";
                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                };
            };
            readonly required: readonly ["id", "image_url", "name", "type"];
            readonly title: "LoLRuneReforged";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolRunesReforgedPaths: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly description: "ID of the rune path";
                                readonly minimum: 1;
                                readonly title: "LoLRunePathID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "Name of the rune";
                                readonly title: "LoLRunePathName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly description: "ID of the rune path";
                                readonly minimum: 1;
                                readonly title: "LoLRunePathID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "Name of the rune";
                                readonly title: "LoLRunePathName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["id", "-id", "name", "-name"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly description: "Name of the rune";
                            readonly title: "LoLRunePathName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly id: {
                        readonly description: "ID of the rune path";
                        readonly minimum: 1;
                        readonly title: "LoLRunePathID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly description: "URL to an image of the rune path";
                        readonly format: "uri";
                        readonly title: "LoLRunePathImageURL";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly description: "Name of the rune";
                        readonly title: "LoLRunePathName";
                        readonly type: "string";
                    };
                    readonly runes: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly keystones: {
                                readonly description: "IDs of the keystone runes available for this path";
                                readonly items: {
                                    readonly description: "ID of the rune";
                                    readonly minimum: 1;
                                    readonly title: "LoLRuneReforgedID";
                                    readonly type: "integer";
                                };
                                readonly title: "LoLKeystoneRunes";
                                readonly type: "array";
                            };
                            readonly slot1: {
                                readonly description: "IDs of the slot 1 runes available for this path";
                                readonly items: {
                                    readonly description: "ID of the rune";
                                    readonly minimum: 1;
                                    readonly title: "LoLRuneReforgedID";
                                    readonly type: "integer";
                                };
                                readonly maxItems: 4;
                                readonly minItems: 3;
                                readonly title: "LoLSlot1Runes";
                                readonly type: "array";
                            };
                            readonly slot2: {
                                readonly description: "IDs of the slot 2 runes available for this path";
                                readonly items: {
                                    readonly description: "ID of the rune";
                                    readonly minimum: 1;
                                    readonly title: "LoLRuneReforgedID";
                                    readonly type: "integer";
                                };
                                readonly maxItems: 5;
                                readonly minItems: 3;
                                readonly title: "LoLSlot2Runes";
                                readonly type: "array";
                            };
                            readonly slot3: {
                                readonly description: "IDs of the slot 3 runes available for this path";
                                readonly items: {
                                    readonly description: "ID of the rune";
                                    readonly minimum: 1;
                                    readonly title: "LoLRuneReforgedID";
                                    readonly type: "integer";
                                };
                                readonly maxItems: 4;
                                readonly minItems: 3;
                                readonly title: "LoLSlot3Runes";
                                readonly type: "array";
                            };
                        };
                        readonly required: readonly ["keystones", "slot1", "slot2", "slot3"];
                        readonly title: "LoLRunePathRunesObject";
                        readonly type: "object";
                    };
                    readonly videogame_versions: {
                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                        readonly items: {
                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                            readonly title: "VideogameVersion";
                            readonly type: "string";
                        };
                        readonly title: "VideogameVersions";
                        readonly type: "array";
                    };
                };
                readonly required: readonly ["id", "image_url", "name", "runes", "videogame_versions"];
                readonly title: "LoLRunePath";
                readonly type: "object";
            };
            readonly title: "LoLRunePaths";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolRunesReforgedPathsLolRunePathId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_rune_path_id: {
                    readonly description: "ID of the LoL rune path";
                    readonly minimum: 1;
                    readonly title: "LoLRunePathID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["lol_rune_path_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly id: {
                    readonly description: "ID of the rune path";
                    readonly minimum: 1;
                    readonly title: "LoLRunePathID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly description: "URL to an image of the rune path";
                    readonly format: "uri";
                    readonly title: "LoLRunePathImageURL";
                    readonly type: "string";
                };
                readonly name: {
                    readonly description: "Name of the rune";
                    readonly title: "LoLRunePathName";
                    readonly type: "string";
                };
                readonly runes: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly keystones: {
                            readonly description: "IDs of the keystone runes available for this path";
                            readonly items: {
                                readonly description: "ID of the rune";
                                readonly minimum: 1;
                                readonly title: "LoLRuneReforgedID";
                                readonly type: "integer";
                            };
                            readonly title: "LoLKeystoneRunes";
                            readonly type: "array";
                        };
                        readonly slot1: {
                            readonly description: "IDs of the slot 1 runes available for this path";
                            readonly items: {
                                readonly description: "ID of the rune";
                                readonly minimum: 1;
                                readonly title: "LoLRuneReforgedID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 4;
                            readonly minItems: 3;
                            readonly title: "LoLSlot1Runes";
                            readonly type: "array";
                        };
                        readonly slot2: {
                            readonly description: "IDs of the slot 2 runes available for this path";
                            readonly items: {
                                readonly description: "ID of the rune";
                                readonly minimum: 1;
                                readonly title: "LoLRuneReforgedID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 5;
                            readonly minItems: 3;
                            readonly title: "LoLSlot2Runes";
                            readonly type: "array";
                        };
                        readonly slot3: {
                            readonly description: "IDs of the slot 3 runes available for this path";
                            readonly items: {
                                readonly description: "ID of the rune";
                                readonly minimum: 1;
                                readonly title: "LoLRuneReforgedID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 4;
                            readonly minItems: 3;
                            readonly title: "LoLSlot3Runes";
                            readonly type: "array";
                        };
                    };
                    readonly required: readonly ["keystones", "slot1", "slot2", "slot3"];
                    readonly title: "LoLRunePathRunesObject";
                    readonly type: "object";
                };
                readonly videogame_versions: {
                    readonly description: "Array of of video game versions (ie. patches) for this resource";
                    readonly items: {
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    };
                    readonly title: "VideogameVersions";
                    readonly type: "array";
                };
            };
            readonly required: readonly ["id", "image_url", "name", "runes", "videogame_versions"];
            readonly title: "LoLRunePath";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSeries: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "SerieName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly season: {
                            readonly items: {
                                readonly title: "SerieSeason";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly year: {
                            readonly items: {
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "SerieName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly season: {
                            readonly items: {
                                readonly title: "SerieSeason";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly year: {
                            readonly items: {
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "end_at", "-end_at", "id", "-id", "league_id", "-league_id", "modified_at", "-modified_at", "name", "-name", "season", "-season", "slug", "-slug", "winner_id", "-winner_id", "winner_type", "-winner_type", "year", "-year"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "SerieName";
                            readonly type: "string";
                        };
                        readonly season: {
                            readonly title: "SerieSeason";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "SerieSlug";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly description: "A serie, an occurrence of a league event";
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly full_name: {
                        readonly title: "SerieFullName";
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly deprecated: false;
                        readonly title: "SerieName";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly season: {
                        readonly deprecated: false;
                        readonly title: "SerieSeason";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "SerieSlug";
                        readonly type: "string";
                    };
                    readonly tournaments: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                    readonly title: "TournamentDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly has_bracket: {
                                    readonly description: "Whether the tournament has a bracket";
                                    readonly title: "TournamentHasBracket";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly live_supported: {
                                    readonly description: "Whether live is supported";
                                    readonly title: "TournamentLiveSupported";
                                    readonly type: "boolean";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "TournamentName";
                                    readonly type: "string";
                                };
                                readonly prizepool: {
                                    readonly deprecated: false;
                                    readonly title: "TournamentPrizepool";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly serie_id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TournamentSlug";
                                    readonly type: "string";
                                };
                                readonly tier: {
                                    readonly deprecated: false;
                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                    readonly title: "TournamentTier";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                            readonly title: "BaseTournament";
                            readonly type: "object";
                        };
                        readonly title: "BaseTournaments";
                        readonly type: "array";
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                    readonly year: {
                        readonly deprecated: false;
                        readonly minimum: 2012;
                        readonly title: "SerieYear";
                        readonly type: readonly ["integer", "null"];
                    };
                };
                readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                readonly title: "Serie";
                readonly type: "object";
            };
            readonly title: "LoLSeries";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSeriesPast: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "SerieName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly season: {
                            readonly items: {
                                readonly title: "SerieSeason";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly year: {
                            readonly items: {
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "SerieName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly season: {
                            readonly items: {
                                readonly title: "SerieSeason";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly year: {
                            readonly items: {
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "end_at", "-end_at", "id", "-id", "league_id", "-league_id", "modified_at", "-modified_at", "name", "-name", "season", "-season", "slug", "-slug", "winner_id", "-winner_id", "winner_type", "-winner_type", "year", "-year"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "SerieName";
                            readonly type: "string";
                        };
                        readonly season: {
                            readonly title: "SerieSeason";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "SerieSlug";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly description: "A serie, an occurrence of a league event";
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly full_name: {
                        readonly title: "SerieFullName";
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly deprecated: false;
                        readonly title: "SerieName";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly season: {
                        readonly deprecated: false;
                        readonly title: "SerieSeason";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "SerieSlug";
                        readonly type: "string";
                    };
                    readonly tournaments: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                    readonly title: "TournamentDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly has_bracket: {
                                    readonly description: "Whether the tournament has a bracket";
                                    readonly title: "TournamentHasBracket";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly live_supported: {
                                    readonly description: "Whether live is supported";
                                    readonly title: "TournamentLiveSupported";
                                    readonly type: "boolean";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "TournamentName";
                                    readonly type: "string";
                                };
                                readonly prizepool: {
                                    readonly deprecated: false;
                                    readonly title: "TournamentPrizepool";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly serie_id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TournamentSlug";
                                    readonly type: "string";
                                };
                                readonly tier: {
                                    readonly deprecated: false;
                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                    readonly title: "TournamentTier";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                            readonly title: "BaseTournament";
                            readonly type: "object";
                        };
                        readonly title: "BaseTournaments";
                        readonly type: "array";
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                    readonly year: {
                        readonly deprecated: false;
                        readonly minimum: 2012;
                        readonly title: "SerieYear";
                        readonly type: readonly ["integer", "null"];
                    };
                };
                readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                readonly title: "Serie";
                readonly type: "object";
            };
            readonly title: "LoLSeries";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSeriesRunning: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "SerieName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly season: {
                            readonly items: {
                                readonly title: "SerieSeason";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly year: {
                            readonly items: {
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "SerieName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly season: {
                            readonly items: {
                                readonly title: "SerieSeason";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly year: {
                            readonly items: {
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "end_at", "-end_at", "id", "-id", "league_id", "-league_id", "modified_at", "-modified_at", "name", "-name", "season", "-season", "slug", "-slug", "winner_id", "-winner_id", "winner_type", "-winner_type", "year", "-year"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "SerieName";
                            readonly type: "string";
                        };
                        readonly season: {
                            readonly title: "SerieSeason";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "SerieSlug";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly description: "A serie, an occurrence of a league event";
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly full_name: {
                        readonly title: "SerieFullName";
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly deprecated: false;
                        readonly title: "SerieName";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly season: {
                        readonly deprecated: false;
                        readonly title: "SerieSeason";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "SerieSlug";
                        readonly type: "string";
                    };
                    readonly tournaments: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                    readonly title: "TournamentDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly has_bracket: {
                                    readonly description: "Whether the tournament has a bracket";
                                    readonly title: "TournamentHasBracket";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly live_supported: {
                                    readonly description: "Whether live is supported";
                                    readonly title: "TournamentLiveSupported";
                                    readonly type: "boolean";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "TournamentName";
                                    readonly type: "string";
                                };
                                readonly prizepool: {
                                    readonly deprecated: false;
                                    readonly title: "TournamentPrizepool";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly serie_id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TournamentSlug";
                                    readonly type: "string";
                                };
                                readonly tier: {
                                    readonly deprecated: false;
                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                    readonly title: "TournamentTier";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                            readonly title: "BaseTournament";
                            readonly type: "object";
                        };
                        readonly title: "BaseTournaments";
                        readonly type: "array";
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                    readonly year: {
                        readonly deprecated: false;
                        readonly minimum: 2012;
                        readonly title: "SerieYear";
                        readonly type: readonly ["integer", "null"];
                    };
                };
                readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                readonly title: "Serie";
                readonly type: "object";
            };
            readonly title: "LoLSeries";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSeriesSerieIdOrSlugPlayersPlayerIdOrSlugStats: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly serie_id_or_slug: {
                    readonly description: "A serie ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "SerieSlug";
                        readonly type: "string";
                    }];
                    readonly title: "SerieIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly player_id_or_slug: {
                    readonly description: "A player ID or slug";
                    readonly oneOf: readonly [{
                        readonly description: "ID of the player";
                        readonly minimum: 1;
                        readonly title: "PlayerID";
                        readonly type: "integer";
                    }, {
                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "PlayerSlug";
                        readonly type: "string";
                    }];
                    readonly title: "PlayerIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["serie_id_or_slug", "player_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly games_count: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The amount of games used for the statistics.\n\nFor example if `?games_count=5`, it would show the statistics for the most recent 5 games played\n";
                };
                readonly side: {
                    readonly enum: readonly ["blue", "red"];
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly videogame_version: {
                    readonly description: "Possible values are `latest`, `all` or a specific version number.";
                    readonly oneOf: readonly [{
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    }, {
                        readonly enum: readonly ["all"];
                    }, {
                        readonly enum: readonly ["latest"];
                    }];
                    readonly title: "VideogameVersionOrAll";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly description: "Player's aggregated statistics for a serie";
            readonly properties: {
                readonly active: {
                    readonly description: "Whether player is active";
                    readonly title: "PlayerIsActive";
                    readonly type: "boolean";
                };
                readonly age: {
                    readonly deprecated: false;
                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                    readonly minimum: 0;
                    readonly title: "PlayerAge";
                    readonly type: readonly ["number", "null"];
                };
                readonly birthday: {
                    readonly deprecated: false;
                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                    readonly title: "PlayerBirthday";
                    readonly type: readonly ["string", "null"];
                };
                readonly current_team: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly acronym: {
                            readonly deprecated: false;
                            readonly title: "TeamAcronym";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly id: {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        };
                        readonly image_url: {
                            readonly deprecated: false;
                            readonly description: "URL of the team logo";
                            readonly format: "uri";
                            readonly title: "TeamImageURL";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly location: {
                            readonly deprecated: false;
                            readonly description: "The team's organization location";
                            readonly title: "TeamLocation";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly modified_at: {
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "TeamModifiedAt";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly description: "The name of the team.";
                            readonly title: "TeamName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly deprecated: false;
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TeamSlug";
                            readonly type: readonly ["string", "null"];
                        };
                    };
                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                    readonly title: "BaseTeam";
                    readonly type: readonly ["object", "null"];
                };
                readonly current_videogame: {
                    readonly deprecated: false;
                    readonly enum: readonly [{
                        readonly id: 1;
                        readonly name: "LoL";
                        readonly slug: "league-of-legends";
                    }, {
                        readonly id: 3;
                        readonly name: "Counter-Strike";
                        readonly slug: "cs-go";
                    }, {
                        readonly id: 4;
                        readonly name: "Dota 2";
                        readonly slug: "dota-2";
                    }, {
                        readonly id: 14;
                        readonly name: "Overwatch";
                        readonly slug: "ow";
                    }, {
                        readonly id: 20;
                        readonly name: "PUBG";
                        readonly slug: "pubg";
                    }, {
                        readonly id: 22;
                        readonly name: "Rocket League";
                        readonly slug: "rl";
                    }, {
                        readonly id: 23;
                        readonly name: "Call of Duty";
                        readonly slug: "cod-mw";
                    }, {
                        readonly id: 24;
                        readonly name: "Rainbow 6 Siege";
                        readonly slug: "r6-siege";
                    }, {
                        readonly id: 25;
                        readonly name: "EA Sports FC";
                        readonly slug: "fifa";
                    }, {
                        readonly id: 26;
                        readonly name: "Valorant";
                        readonly slug: "valorant";
                    }, {
                        readonly id: 27;
                        readonly name: "King of Glory";
                        readonly slug: "kog";
                    }, {
                        readonly id: 28;
                        readonly name: "LoL Wild Rift";
                        readonly slug: "lol-wild-rift";
                    }, {
                        readonly id: 29;
                        readonly name: "StarCraft 2";
                        readonly slug: "starcraft-2";
                    }, {
                        readonly id: 30;
                        readonly name: "StarCraft Brood War";
                        readonly slug: "starcraft-brood-war";
                    }, {
                        readonly id: 31;
                        readonly name: "eSoccer";
                        readonly slug: "e-soccer";
                    }, {
                        readonly id: 32;
                        readonly name: "eBasketball";
                        readonly slug: "e-basketball";
                    }, {
                        readonly id: 33;
                        readonly name: "eCricket";
                        readonly slug: "e-cricket";
                    }, {
                        readonly id: 34;
                        readonly name: "Mobile Legends: Bang Bang";
                        readonly slug: "mlbb";
                    }];
                    readonly title: "CurrentVideogame";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                    readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                };
                readonly favorite_champions: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A player's most used champion";
                        readonly properties: {
                            readonly champion: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly armor: {
                                        readonly minimum: 0;
                                        readonly title: "LoLArmor";
                                        readonly type: "number";
                                    };
                                    readonly armorperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLArmorPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly attackdamage: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackDamage";
                                        readonly type: "number";
                                    };
                                    readonly attackdamageperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackDamagePerLevel";
                                        readonly type: "number";
                                    };
                                    readonly attackrange: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackRange";
                                        readonly type: "number";
                                    };
                                    readonly attackspeedoffset: {
                                        readonly deprecated: false;
                                        readonly title: "LoLAttackSpeedOffset";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly attackspeedperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackSpeedPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly big_image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionBigImageURL";
                                        readonly type: "string";
                                    };
                                    readonly crit: {
                                        readonly minimum: 0;
                                        readonly title: "LoLCrit";
                                        readonly type: "number";
                                    };
                                    readonly critperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLCritPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly hp: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHP";
                                        readonly type: "number";
                                    };
                                    readonly hpperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly hpregen: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPRegen";
                                        readonly type: "number";
                                    };
                                    readonly hpregenperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPRegenPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionImageURL";
                                        readonly type: "string";
                                    };
                                    readonly movespeed: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMoveSpeed";
                                        readonly type: "number";
                                    };
                                    readonly mp: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMP";
                                        readonly type: "number";
                                    };
                                    readonly mpperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly mpregen: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPRegen";
                                        readonly type: "number";
                                    };
                                    readonly mpregenperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPRegenPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly name: {
                                        readonly title: "LoLChampionName";
                                        readonly type: "string";
                                    };
                                    readonly spellblock: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMagicResist";
                                        readonly type: "number";
                                    };
                                    readonly spellblockperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMagicResistPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly videogame_versions: {
                                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                                        readonly items: {
                                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                            readonly title: "VideogameVersion";
                                            readonly type: "string";
                                        };
                                        readonly title: "VideogameVersions";
                                        readonly type: "array";
                                    };
                                };
                                readonly required: readonly ["armor", "armorperlevel", "attackdamage", "attackdamageperlevel", "attackrange", "attackspeedoffset", "attackspeedperlevel", "big_image_url", "crit", "critperlevel", "hp", "hpperlevel", "hpregen", "hpregenperlevel", "id", "image_url", "movespeed", "mp", "mpperlevel", "mpregen", "mpregenperlevel", "name", "spellblock", "spellblockperlevel", "videogame_versions"];
                                readonly title: "LoLChampion";
                                readonly type: "object";
                            };
                            readonly games_count: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly games_lost: {
                                readonly description: "Number of games lost by the player on the given champion";
                                readonly type: "integer";
                            };
                            readonly games_won: {
                                readonly description: "Number of games won by the player on the given champion";
                                readonly type: "integer";
                            };
                            readonly most_used_items: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "An item used by a champion";
                                    readonly properties: {
                                        readonly count: {
                                            readonly minimum: 0;
                                            readonly title: "LoLUsedItemCount";
                                            readonly type: "integer";
                                        };
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLItemID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLItemName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["count", "id", "name"];
                                    readonly title: "LoLUsedItem";
                                    readonly type: "object";
                                };
                                readonly title: "LoLUsedItems";
                                readonly type: "array";
                            };
                        };
                        readonly required: readonly ["champion", "games_count", "games_lost", "games_won", "most_used_items"];
                        readonly title: "LoLFavoriteChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLFavoriteChampions";
                    readonly type: "array";
                };
                readonly first_name: {
                    readonly deprecated: false;
                    readonly description: "First name of the player. `null` if unknown";
                    readonly title: "PlayerFirstName";
                    readonly type: readonly ["string", "null"];
                };
                readonly id: {
                    readonly description: "ID of the player";
                    readonly minimum: 1;
                    readonly title: "PlayerID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly deprecated: false;
                    readonly description: "URL to the photo of the player. `null` if not available.";
                    readonly format: "uri";
                    readonly title: "PlayerImageURL";
                    readonly type: readonly ["string", "null"];
                };
                readonly last_games: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Player's data for a Game";
                        readonly properties: {
                            readonly assists: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLAssistCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly champion: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionImageURL";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly title: "LoLChampionName";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["id", "image_url", "name"];
                                readonly title: "BaseLoLChampion";
                                readonly type: readonly ["object", "null"];
                            };
                            readonly creep_score: {
                                readonly deprecated: false;
                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                readonly minimum: 0;
                                readonly title: "LoLCreepScore";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly cs_at_14: {
                                readonly deprecated: false;
                                readonly description: "The player's Creep Score (CS.) at 14minutes";
                                readonly minimum: 0;
                                readonly title: "LolCreepScoreAt14";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly deaths: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLDeathCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly flags: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly first_blood_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first blood assist";
                                        readonly title: "LoLGotFirstBloodAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_blood_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first blood kill";
                                        readonly title: "LoLGotFirstBloodKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_inhibitor_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first inhibitor assist";
                                        readonly title: "LoLGotFirstInhibitorAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_inhibitor_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first inhibitor kill";
                                        readonly title: "LoLGotFirstInhibitorKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_tower_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first tower assist";
                                        readonly title: "LoLGotGirstTowerAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_tower_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first tower kill";
                                        readonly title: "LoLGotFirstTowerKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                };
                                readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                readonly title: "LoLFlags";
                                readonly type: "object";
                            };
                            readonly game_id: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly gold_earned: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly gold_spent: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly items: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLItemID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LoLItemImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly is_trinket: {
                                            readonly deprecated: false;
                                            readonly description: "Whether item is a trinket";
                                            readonly title: "LoLItemIsTrinket";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly name: {
                                            readonly title: "LoLItemName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                    readonly title: "BaseLoLItem";
                                    readonly type: "object";
                                };
                                readonly title: "BaseLoLItems";
                                readonly type: "array";
                            };
                            readonly kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLKillCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly kills_counters: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly inhibitors: {
                                        readonly deprecated: false;
                                        readonly description: "Number of inhibitors killed by the player";
                                        readonly minimum: 0;
                                        readonly title: "LoLInhibitorCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions_enemy_jungle: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions_team_jungle: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionsTeamJungleCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly players: {
                                        readonly deprecated: false;
                                        readonly description: "Number of players killed";
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly turrets: {
                                        readonly deprecated: false;
                                        readonly description: "Number of turrets killed";
                                        readonly minimum: 0;
                                        readonly title: "LoLTurretCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly wards: {
                                        readonly deprecated: false;
                                        readonly description: "Number of wards killed by the player";
                                        readonly minimum: 0;
                                        readonly title: "LoLWardCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                readonly title: "LoLKillCounters";
                                readonly type: "object";
                            };
                            readonly kills_series: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly double_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieDouble";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly penta_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSeriePenta";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly quadra_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieQuadra";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly triple_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieTriple";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                readonly title: "LoLKillsSeries";
                                readonly type: "object";
                            };
                            readonly largest_critical_strike: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestCriticalStrike";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly largest_killing_spree: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestKillingSpree";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly largest_multi_kill: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestMultiKill";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly level: {
                                readonly deprecated: false;
                                readonly minimum: 1;
                                readonly title: "LoLChampionLevel";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly magic_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly masteries: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLMasteryID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLMasteryName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly title: "LoLMastery";
                                    readonly type: "object";
                                };
                                readonly title: "LoLMasteries";
                                readonly type: "array";
                            };
                            readonly minions_killed: {
                                readonly deprecated: true;
                                readonly description: "The player's Creep Score (CS.)";
                                readonly minimum: 0;
                                readonly title: "LoLMinionsKilled";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly opponent: {
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly oneOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly active: {
                                            readonly description: "Whether player is active";
                                            readonly title: "PlayerIsActive";
                                            readonly type: "boolean";
                                        };
                                        readonly age: {
                                            readonly deprecated: false;
                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly minimum: 0;
                                            readonly title: "PlayerAge";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly birthday: {
                                            readonly deprecated: false;
                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly title: "PlayerBirthday";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                            readonly format: "uri";
                                            readonly title: "PlayerImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "PlayerModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly nationality: {
                                            readonly deprecated: false;
                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                            readonly title: "PlayerNationality";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                            readonly title: "PlayerRoleSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "PlayerSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                    readonly title: "BasePlayer";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                }];
                                readonly title: "BaseOpponent";
                            };
                            readonly physical_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly player: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly active: {
                                        readonly description: "Whether player is active";
                                        readonly title: "PlayerIsActive";
                                        readonly type: "boolean";
                                    };
                                    readonly age: {
                                        readonly deprecated: false;
                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly minimum: 0;
                                        readonly title: "PlayerAge";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly birthday: {
                                        readonly deprecated: false;
                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly title: "PlayerBirthday";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly first_name: {
                                        readonly deprecated: false;
                                        readonly description: "First name of the player. `null` if unknown";
                                        readonly title: "PlayerFirstName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                        readonly format: "uri";
                                        readonly title: "PlayerImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly last_name: {
                                        readonly deprecated: false;
                                        readonly description: "Last name of the player. `null` if unknown";
                                        readonly title: "PlayerLastName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "PlayerModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "Professional name of the player";
                                        readonly title: "PlayerName";
                                        readonly type: "string";
                                    };
                                    readonly nationality: {
                                        readonly deprecated: false;
                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                        readonly title: "PlayerNationality";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly role: {
                                        readonly deprecated: false;
                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                        readonly title: "PlayerRoleSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                readonly title: "BasePlayer";
                                readonly type: "object";
                            };
                            readonly player_id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                readonly title: "LoLPlayerRole";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`adc` `jun` `mid` `sup` `top`";
                            };
                            readonly runes: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLRuneID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLRuneName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly title: "LoLRune";
                                    readonly type: "object";
                                };
                                readonly title: "LoLRunes";
                                readonly type: "array";
                            };
                            readonly runes_reforged: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly primary_path: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly description: "ID of the rune";
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneReforgedID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly description: "URL to an image of the rune";
                                                readonly format: "uri";
                                                readonly title: "LoLRuneReforgedImageURL";
                                                readonly type: "string";
                                            };
                                            readonly keystone: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: "object";
                                            };
                                            readonly lesser_runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunesReforged";
                                                readonly type: "array";
                                            };
                                            readonly name: {
                                                readonly description: "Name of the rune path";
                                                readonly title: "LoLRuneReforgedName";
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                readonly title: "LoLRuneReforgedType";
                                                readonly type: "string";
                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                        readonly title: "LoLPlayerPrimaryRunePath";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly secondary_path: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly description: "ID of the rune";
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneReforgedID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly description: "URL to an image of the rune";
                                                readonly format: "uri";
                                                readonly title: "LoLRuneReforgedImageURL";
                                                readonly type: "string";
                                            };
                                            readonly lesser_runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunesReforged";
                                                readonly type: "array";
                                            };
                                            readonly name: {
                                                readonly description: "Name of the rune path";
                                                readonly title: "LoLRuneReforgedName";
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                readonly title: "LoLRuneReforgedType";
                                                readonly type: "string";
                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                        readonly title: "LoLPlayerSecondaryRunePath";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly shards: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly defense: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly flex: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly offense: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                        };
                                        readonly required: readonly ["defense", "flex", "offense"];
                                        readonly title: "LoLPlayerRuneShards";
                                        readonly type: "object";
                                    };
                                };
                                readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                readonly title: "LoLPlayerRunesReforged";
                                readonly type: "object";
                            };
                            readonly spells: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLSpellID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly format: "uri";
                                            readonly title: "LoLSpellImageURL";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LoLSpellName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "name"];
                                    readonly title: "LoLSpell";
                                    readonly type: "object";
                                };
                                readonly title: "LoLSpells";
                                readonly type: "array";
                            };
                            readonly team: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly acronym: {
                                        readonly deprecated: false;
                                        readonly title: "TeamAcronym";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL of the team logo";
                                        readonly format: "uri";
                                        readonly title: "TeamImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly location: {
                                        readonly deprecated: false;
                                        readonly description: "The team's organization location";
                                        readonly title: "TeamLocation";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TeamModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "The name of the team.";
                                        readonly title: "TeamName";
                                        readonly type: "string";
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                readonly title: "BaseTeam";
                                readonly type: "object";
                            };
                            readonly total_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly total_heal: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalHeal";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly total_time_crowd_control_dealt: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalTimeCrowdControlDealt";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly total_units_healed: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalUnitsHealed";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly true_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly wards: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLWardsPlaced";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly sight_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLSightWards";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly vision_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLVisionWards";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                readonly title: "LoLWards";
                                readonly type: "object";
                            };
                            readonly wards_placed: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLWardsPlaced";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                        readonly title: "LoLGamePlayerForStats";
                        readonly type: "object";
                    };
                    readonly title: "LoLGamePlayersForStats";
                    readonly type: "array";
                };
                readonly last_name: {
                    readonly deprecated: false;
                    readonly description: "Last name of the player. `null` if unknown";
                    readonly title: "PlayerLastName";
                    readonly type: readonly ["string", "null"];
                };
                readonly modified_at: {
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "PlayerModifiedAt";
                    readonly type: "string";
                };
                readonly name: {
                    readonly description: "Professional name of the player";
                    readonly title: "PlayerName";
                    readonly type: "string";
                };
                readonly nationality: {
                    readonly deprecated: false;
                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                    readonly title: "PlayerNationality";
                    readonly type: readonly ["string", "null"];
                };
                readonly role: {
                    readonly deprecated: false;
                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                    readonly title: "PlayerRoleSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly slug: {
                    readonly deprecated: false;
                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                    readonly minLength: 1;
                    readonly pattern: "^[a-z0-9_-]+$";
                    readonly title: "PlayerSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly stats: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly description: "Player's statistics for a serie";
                    readonly properties: {
                        readonly averages: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageAssists";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly cs_at_14: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LolAverageCreepScoreAt14";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly cs_diff_at_14: {
                                    readonly deprecated: false;
                                    readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                    readonly title: "LolAverageCreepScoreDifferenceAt14";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDeaths";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldEarned";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_percentage: {
                                    readonly deprecated: false;
                                    readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                    readonly maximum: 100;
                                    readonly minimum: 0;
                                    readonly title: "LoLPlayerGoldErnedPercentage";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_spent: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldSpent";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly kill_counters: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly inhibitors: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageInhibitorKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageNeutralMinionKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions_enemy_jungle: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageMinionsEnemyJungleKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions_team_jungle: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageMinionsTeamJungleKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly players: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly turrets: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageTurretKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly wards: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageWardKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                    readonly title: "LoLAverageKillCounters";
                                    readonly type: "object";
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly magic_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageMagicDamage";
                                    readonly type: "object";
                                };
                                readonly minions_killed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageMinionsKilled";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly physical_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAveragePhysicalDamage";
                                    readonly type: "object";
                                };
                                readonly total_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageTotalDamage";
                                    readonly type: "object";
                                };
                                readonly total_heal: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalHeal";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly total_time_crowd_control_dealt: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalTimeCrowdControlDealt";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly total_units_healed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalUnitsHealed";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly true_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageTrueDamage";
                                    readonly type: "object";
                                };
                                readonly vision_wards_bought_in_game: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageVisionWardsBoughtInGame";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageWardsPlaced";
                                    readonly type: readonly ["number", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "cs_at_14", "cs_diff_at_14", "deaths", "gold_earned", "gold_percentage", "gold_spent", "kill_counters", "kills", "magic_damage", "minions_killed", "physical_damage", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "vision_wards_bought_in_game", "wards_placed"];
                            readonly title: "LoLPlayerAverages";
                            readonly type: "object";
                        };
                        readonly games_count: {
                            readonly deprecated: false;
                            readonly description: "Number of games";
                            readonly minimum: 0;
                            readonly title: "GameCount";
                            readonly type: readonly ["integer", "null"];
                        };
                        readonly serie: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "A serie, an occurrence of a league event";
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly full_name: {
                                    readonly title: "SerieFullName";
                                    readonly type: "string";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly league: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LeagueID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LeagueImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "LeagueModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LeagueName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9:_-]+$";
                                            readonly title: "LeagueSlug";
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LeagueURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                                    readonly title: "BaseLeague";
                                    readonly type: "object";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly deprecated: false;
                                    readonly title: "SerieName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly season: {
                                    readonly deprecated: false;
                                    readonly title: "SerieSeason";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "SerieSlug";
                                    readonly type: "string";
                                };
                                readonly tournaments: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly begin_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TournamentBeginAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly detailed_stats: {
                                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                                readonly title: "TournamentDetailedStats";
                                                readonly type: "boolean";
                                            };
                                            readonly end_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TournamentEndAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly has_bracket: {
                                                readonly description: "Whether the tournament has a bracket";
                                                readonly title: "TournamentHasBracket";
                                                readonly type: "boolean";
                                            };
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "TournamentID";
                                                readonly type: "integer";
                                            };
                                            readonly league_id: {
                                                readonly minimum: 1;
                                                readonly title: "LeagueID";
                                                readonly type: "integer";
                                            };
                                            readonly live_supported: {
                                                readonly description: "Whether live is supported";
                                                readonly title: "TournamentLiveSupported";
                                                readonly type: "boolean";
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TournamentModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "TournamentName";
                                                readonly type: "string";
                                            };
                                            readonly prizepool: {
                                                readonly deprecated: false;
                                                readonly title: "TournamentPrizepool";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly serie_id: {
                                                readonly minimum: 1;
                                                readonly title: "SerieID";
                                                readonly type: "integer";
                                            };
                                            readonly slug: {
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TournamentSlug";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly deprecated: false;
                                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                                readonly title: "TournamentTier";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly winner_id: {
                                                readonly anyOf: readonly [{
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                }, {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                }];
                                                readonly deprecated: false;
                                                readonly nullable: true;
                                                readonly title: "OpponentID";
                                            };
                                            readonly winner_type: {
                                                readonly deprecated: false;
                                                readonly enum: readonly ["Player", "Team"];
                                                readonly title: "OpponentType";
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`Player` `Team`";
                                            };
                                        };
                                        readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                                        readonly title: "BaseTournament";
                                        readonly type: "object";
                                    };
                                    readonly title: "BaseTournaments";
                                    readonly type: "array";
                                };
                                readonly videogame: {
                                    readonly enum: readonly [{
                                        readonly id: 1;
                                        readonly name: "LoL";
                                        readonly slug: "league-of-legends";
                                    }, {
                                        readonly id: 3;
                                        readonly name: "Counter-Strike";
                                        readonly slug: "cs-go";
                                    }, {
                                        readonly id: 4;
                                        readonly name: "Dota 2";
                                        readonly slug: "dota-2";
                                    }, {
                                        readonly id: 14;
                                        readonly name: "Overwatch";
                                        readonly slug: "ow";
                                    }, {
                                        readonly id: 20;
                                        readonly name: "PUBG";
                                        readonly slug: "pubg";
                                    }, {
                                        readonly id: 22;
                                        readonly name: "Rocket League";
                                        readonly slug: "rl";
                                    }, {
                                        readonly id: 23;
                                        readonly name: "Call of Duty";
                                        readonly slug: "cod-mw";
                                    }, {
                                        readonly id: 24;
                                        readonly name: "Rainbow 6 Siege";
                                        readonly slug: "r6-siege";
                                    }, {
                                        readonly id: 25;
                                        readonly name: "EA Sports FC";
                                        readonly slug: "fifa";
                                    }, {
                                        readonly id: 26;
                                        readonly name: "Valorant";
                                        readonly slug: "valorant";
                                    }, {
                                        readonly id: 27;
                                        readonly name: "King of Glory";
                                        readonly slug: "kog";
                                    }, {
                                        readonly id: 28;
                                        readonly name: "LoL Wild Rift";
                                        readonly slug: "lol-wild-rift";
                                    }, {
                                        readonly id: 29;
                                        readonly name: "StarCraft 2";
                                        readonly slug: "starcraft-2";
                                    }, {
                                        readonly id: 30;
                                        readonly name: "StarCraft Brood War";
                                        readonly slug: "starcraft-brood-war";
                                    }, {
                                        readonly id: 31;
                                        readonly name: "eSoccer";
                                        readonly slug: "e-soccer";
                                    }, {
                                        readonly id: 32;
                                        readonly name: "eBasketball";
                                        readonly slug: "e-basketball";
                                    }, {
                                        readonly id: 33;
                                        readonly name: "eCricket";
                                        readonly slug: "e-cricket";
                                    }, {
                                        readonly id: 34;
                                        readonly name: "Mobile Legends: Bang Bang";
                                        readonly slug: "mlbb";
                                    }];
                                    readonly title: "CurrentVideogame";
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                    readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                                };
                                readonly videogame_title: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "VideogameTitleID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "VideogameTitleName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "VideogameTitleSlug";
                                            readonly type: "string";
                                        };
                                        readonly videogame_id: {
                                            readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                            readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                            readonly title: "VideogameID";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "name", "slug", "videogame_id"];
                                    readonly title: "VideogameTitle";
                                    readonly type: readonly ["object", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                                readonly year: {
                                    readonly deprecated: false;
                                    readonly minimum: 2012;
                                    readonly title: "SerieYear";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                            readonly title: "Serie";
                            readonly type: "object";
                        };
                        readonly totals: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAssistCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDeathCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_played: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kill_counters: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly inhibitors: {
                                            readonly deprecated: false;
                                            readonly description: "Number of inhibitors killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLInhibitorCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly turrets: {
                                            readonly deprecated: false;
                                            readonly description: "Number of turrets killed";
                                            readonly minimum: 0;
                                            readonly title: "LoLTurretCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly wards: {
                                            readonly deprecated: false;
                                            readonly description: "Number of wards killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLWardCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["inhibitors", "turrets", "wards"];
                                    readonly title: "LoLPlayerTotalKillCounters";
                                    readonly type: "object";
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills_series: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly double_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieDouble";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly penta_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSeriePenta";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly quadra_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieQuadra";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly triple_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieTriple";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                    readonly title: "LoLKillsSeries";
                                    readonly type: "object";
                                };
                                readonly matches_lost: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_played: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_won: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLWardsPlaced";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "deaths", "games_lost", "games_played", "games_won", "kill_counters", "kills", "kills_series", "matches_lost", "matches_played", "matches_won", "wards_placed"];
                            readonly title: "LoLPlayerStatsTotals";
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["averages", "games_count", "serie", "totals"];
                    readonly title: "LoLPlayerBySerieStat";
                    readonly type: "object";
                };
                readonly teams: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly acronym: {
                                readonly deprecated: false;
                                readonly title: "TeamAcronym";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL of the team logo";
                                readonly format: "uri";
                                readonly title: "TeamImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly location: {
                                readonly deprecated: false;
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                        readonly title: "BaseTeam";
                        readonly type: "object";
                    };
                    readonly title: "BaseTeams";
                    readonly type: "array";
                };
            };
            readonly required: readonly ["active", "age", "birthday", "current_team", "current_videogame", "favorite_champions", "first_name", "id", "image_url", "last_games", "last_name", "modified_at", "name", "nationality", "role", "slug", "stats", "teams"];
            readonly title: "LoLStatsForPlayerBySerie";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSeriesSerieIdOrSlugTeams: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly serie_id_or_slug: {
                    readonly description: "A serie ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "SerieSlug";
                        readonly type: "string";
                    }];
                    readonly title: "SerieIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["serie_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly acronym: {
                            readonly items: {
                                readonly title: "TeamAcronym";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly location: {
                            readonly items: {
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_id: {
                            readonly items: {
                                readonly description: "A videogame ID";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly acronym: {
                            readonly items: {
                                readonly title: "TeamAcronym";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly location: {
                            readonly items: {
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["acronym", "-acronym", "id", "-id", "location", "-location", "modified_at", "-modified_at", "name", "-name", "slug", "-slug", "videogame_id", "-videogame_id"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly acronym: {
                            readonly title: "TeamAcronym";
                            readonly type: "string";
                        };
                        readonly location: {
                            readonly description: "The team's organization location";
                            readonly title: "TeamLocation";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly description: "The name of the team.";
                            readonly title: "TeamName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TeamSlug";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly acronym: {
                        readonly deprecated: false;
                        readonly title: "TeamAcronym";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly current_videogame: {
                        readonly deprecated: false;
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: readonly ["object", "null"];
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly id: {
                        readonly description: "The ID of the team.";
                        readonly minimum: 1;
                        readonly title: "TeamID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly deprecated: false;
                        readonly description: "URL of the team logo";
                        readonly format: "uri";
                        readonly title: "TeamImageURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly location: {
                        readonly deprecated: false;
                        readonly description: "The team's organization location";
                        readonly title: "TeamLocation";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TeamModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly description: "The name of the team.";
                        readonly title: "TeamName";
                        readonly type: "string";
                    };
                    readonly players: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly active: {
                                    readonly description: "Whether player is active";
                                    readonly title: "PlayerIsActive";
                                    readonly type: "boolean";
                                };
                                readonly age: {
                                    readonly deprecated: false;
                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly minimum: 0;
                                    readonly title: "PlayerAge";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly birthday: {
                                    readonly deprecated: false;
                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly title: "PlayerBirthday";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly first_name: {
                                    readonly deprecated: false;
                                    readonly description: "First name of the player. `null` if unknown";
                                    readonly title: "PlayerFirstName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                    readonly format: "uri";
                                    readonly title: "PlayerImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly last_name: {
                                    readonly deprecated: false;
                                    readonly description: "Last name of the player. `null` if unknown";
                                    readonly title: "PlayerLastName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "PlayerModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Professional name of the player";
                                    readonly title: "PlayerName";
                                    readonly type: "string";
                                };
                                readonly nationality: {
                                    readonly deprecated: false;
                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                    readonly title: "PlayerNationality";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                    readonly title: "PlayerRoleSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "PlayerSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                            readonly title: "BasePlayer";
                            readonly type: "object";
                        };
                        readonly title: "BasePlayers";
                        readonly type: "array";
                    };
                    readonly slug: {
                        readonly deprecated: false;
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TeamSlug";
                        readonly type: readonly ["string", "null"];
                    };
                };
                readonly required: readonly ["acronym", "current_videogame", "id", "image_url", "location", "modified_at", "name", "players", "slug"];
                readonly title: "Team";
                readonly type: "object";
            };
            readonly title: "LoLTeams";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSeriesSerieIdOrSlugTeamsStats: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly serie_id_or_slug: {
                    readonly description: "A serie ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "SerieSlug";
                        readonly type: "string";
                    }];
                    readonly title: "SerieIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["serie_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly games_count: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The amount of games used for the statistics.\n\nFor example if `?games_count=5`, it would show the statistics for the most recent 5 games played\n";
                };
                readonly side: {
                    readonly enum: readonly ["blue", "red"];
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly videogame_version: {
                    readonly description: "Possible values are `latest`, `all` or a specific version number.";
                    readonly oneOf: readonly [{
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    }, {
                        readonly enum: readonly ["all"];
                    }, {
                        readonly enum: readonly ["latest"];
                    }];
                    readonly title: "VideogameVersionOrAll";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly description: "Team's aggregated statistics for a serie";
                readonly properties: {
                    readonly acronym: {
                        readonly deprecated: false;
                        readonly title: "TeamAcronym";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly id: {
                        readonly description: "The ID of the team.";
                        readonly minimum: 1;
                        readonly title: "TeamID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly deprecated: false;
                        readonly description: "URL of the team logo";
                        readonly format: "uri";
                        readonly title: "TeamImageURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly last_games: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "A team's last game";
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly complete: {
                                    readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                    readonly title: "GameComplete";
                                    readonly type: "boolean";
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether historical data is available for the game";
                                    readonly title: "GameDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "GameEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly finished: {
                                    readonly description: "Whether the game is finished";
                                    readonly title: "GameIsFinished";
                                    readonly type: "boolean";
                                };
                                readonly forfeit: {
                                    readonly description: "Whether the game has been forfeited";
                                    readonly title: "GameIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly description: "LoL game ID";
                                    readonly minimum: 1;
                                    readonly title: "LoLGameID";
                                    readonly type: "integer";
                                };
                                readonly length: {
                                    readonly deprecated: false;
                                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                    readonly minimum: 0;
                                    readonly title: "GameLength";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly match_id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly players: {
                                    readonly deprecated: false;
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly description: "Player's data for a Game";
                                        readonly properties: {
                                            readonly assists: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLAssistCount";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly champion: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLChampionID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLChampionImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLChampionName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "BaseLoLChampion";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly creep_score: {
                                                readonly deprecated: false;
                                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                                readonly minimum: 0;
                                                readonly title: "LoLCreepScore";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly cs_at_14: {
                                                readonly deprecated: false;
                                                readonly description: "The player's Creep Score (CS.) at 14minutes";
                                                readonly minimum: 0;
                                                readonly title: "LolCreepScoreAt14";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly cs_diff_at_14: {
                                                readonly deprecated: false;
                                                readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                                readonly title: "LolCreepScoreDifferenceAt14";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly deaths: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLDeathCount";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly flags: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly first_blood_assist: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether player got first blood assist";
                                                        readonly title: "LoLGotFirstBloodAssist";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                    readonly first_blood_kill: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether player got first blood kill";
                                                        readonly title: "LoLGotFirstBloodKill";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                    readonly first_inhibitor_assist: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether player got first inhibitor assist";
                                                        readonly title: "LoLGotFirstInhibitorAssist";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                    readonly first_inhibitor_kill: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether player got first inhibitor kill";
                                                        readonly title: "LoLGotFirstInhibitorKill";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                    readonly first_tower_assist: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether player got first tower assist";
                                                        readonly title: "LoLGotGirstTowerAssist";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                    readonly first_tower_kill: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether player got first tower kill";
                                                        readonly title: "LoLGotFirstTowerKill";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                                readonly title: "LoLFlags";
                                                readonly type: "object";
                                            };
                                            readonly game_id: {
                                                readonly description: "LoL game ID";
                                                readonly minimum: 1;
                                                readonly title: "LoLGameID";
                                                readonly type: "integer";
                                            };
                                            readonly gold_earned: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLGold";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly gold_percentage: {
                                                readonly deprecated: false;
                                                readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                                readonly maximum: 100;
                                                readonly minimum: 0;
                                                readonly title: "LoLPlayerGoldErnedPercentage";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly gold_spent: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLGold";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly items: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLItemID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly deprecated: false;
                                                            readonly format: "uri";
                                                            readonly title: "LoLItemImageURL";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly is_trinket: {
                                                            readonly deprecated: false;
                                                            readonly description: "Whether item is a trinket";
                                                            readonly title: "LoLItemIsTrinket";
                                                            readonly type: readonly ["boolean", "null"];
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLItemName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                                    readonly title: "BaseLoLItem";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BaseLoLItems";
                                                readonly type: "array";
                                            };
                                            readonly kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly kills_counters: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly inhibitors: {
                                                        readonly deprecated: false;
                                                        readonly description: "Number of inhibitors killed by the player";
                                                        readonly minimum: 0;
                                                        readonly title: "LoLInhibitorCount";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly neutral_minions: {
                                                        readonly deprecated: false;
                                                        readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                        readonly minimum: 0;
                                                        readonly title: "LoLNeutralMinionCount";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly neutral_minions_enemy_jungle: {
                                                        readonly deprecated: false;
                                                        readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                        readonly minimum: 0;
                                                        readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly neutral_minions_team_jungle: {
                                                        readonly deprecated: false;
                                                        readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                        readonly minimum: 0;
                                                        readonly title: "LoLNeutralMinionsTeamJungleCount";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly players: {
                                                        readonly deprecated: false;
                                                        readonly description: "Number of players killed";
                                                        readonly minimum: 0;
                                                        readonly title: "LoLPlayerCount";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly turrets: {
                                                        readonly deprecated: false;
                                                        readonly description: "Number of turrets killed";
                                                        readonly minimum: 0;
                                                        readonly title: "LoLTurretCount";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly wards: {
                                                        readonly deprecated: false;
                                                        readonly description: "Number of wards killed by the player";
                                                        readonly minimum: 0;
                                                        readonly title: "LoLWardCount";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                                readonly title: "LoLKillCounters";
                                                readonly type: "object";
                                            };
                                            readonly kills_series: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly double_kills: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLKillsSerieDouble";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly penta_kills: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLKillsSeriePenta";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly quadra_kills: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLKillsSerieQuadra";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly triple_kills: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLKillsSerieTriple";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                                readonly title: "LoLKillsSeries";
                                                readonly type: "object";
                                            };
                                            readonly largest_critical_strike: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLLargestCriticalStrike";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly largest_killing_spree: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLLargestKillingSpree";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly largest_multi_kill: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLLargestMultiKill";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly level: {
                                                readonly deprecated: false;
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionLevel";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly magic_damage: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly dealt: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly dealt_percentage: {
                                                        readonly deprecated: false;
                                                        readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                        readonly maximum: 100;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLPlayerDamageDealtPercentage";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly dealt_to_champions: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly dealt_to_champions_percentage: {
                                                        readonly deprecated: false;
                                                        readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                        readonly maximum: 100;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly taken: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                                readonly title: "LoLMagicDamage";
                                                readonly type: "object";
                                            };
                                            readonly masteries: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLMasteryID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLMasteryName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "LoLMastery";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLMasteries";
                                                readonly type: "array";
                                            };
                                            readonly minions_killed: {
                                                readonly deprecated: true;
                                                readonly description: "The player's Creep Score (CS.)";
                                                readonly minimum: 0;
                                                readonly title: "LoLMinionsKilled";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly opponent: {
                                                readonly deprecated: false;
                                                readonly nullable: true;
                                                readonly oneOf: readonly [{
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly active: {
                                                            readonly description: "Whether player is active";
                                                            readonly title: "PlayerIsActive";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly age: {
                                                            readonly deprecated: false;
                                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                            readonly minimum: 0;
                                                            readonly title: "PlayerAge";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly birthday: {
                                                            readonly deprecated: false;
                                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                            readonly title: "PlayerBirthday";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly first_name: {
                                                            readonly deprecated: false;
                                                            readonly description: "First name of the player. `null` if unknown";
                                                            readonly title: "PlayerFirstName";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly id: {
                                                            readonly description: "ID of the player";
                                                            readonly minimum: 1;
                                                            readonly title: "PlayerID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly deprecated: false;
                                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                                            readonly format: "uri";
                                                            readonly title: "PlayerImageURL";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly last_name: {
                                                            readonly deprecated: false;
                                                            readonly description: "Last name of the player. `null` if unknown";
                                                            readonly title: "PlayerLastName";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly modified_at: {
                                                            readonly format: "date-time";
                                                            readonly minLength: 1;
                                                            readonly title: "PlayerModifiedAt";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Professional name of the player";
                                                            readonly title: "PlayerName";
                                                            readonly type: "string";
                                                        };
                                                        readonly nationality: {
                                                            readonly deprecated: false;
                                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                            readonly title: "PlayerNationality";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly role: {
                                                            readonly deprecated: false;
                                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                            readonly title: "PlayerRoleSlug";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly slug: {
                                                            readonly deprecated: false;
                                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                            readonly minLength: 1;
                                                            readonly pattern: "^[a-z0-9_-]+$";
                                                            readonly title: "PlayerSlug";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                                    readonly title: "BasePlayer";
                                                    readonly type: "object";
                                                }, {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly acronym: {
                                                            readonly deprecated: false;
                                                            readonly title: "TeamAcronym";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly id: {
                                                            readonly description: "The ID of the team.";
                                                            readonly minimum: 1;
                                                            readonly title: "TeamID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly deprecated: false;
                                                            readonly description: "URL of the team logo";
                                                            readonly format: "uri";
                                                            readonly title: "TeamImageURL";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly location: {
                                                            readonly deprecated: false;
                                                            readonly description: "The team's organization location";
                                                            readonly title: "TeamLocation";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly modified_at: {
                                                            readonly format: "date-time";
                                                            readonly minLength: 1;
                                                            readonly title: "TeamModifiedAt";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "The name of the team.";
                                                            readonly title: "TeamName";
                                                            readonly type: "string";
                                                        };
                                                        readonly slug: {
                                                            readonly deprecated: false;
                                                            readonly minLength: 1;
                                                            readonly pattern: "^[a-z0-9_-]+$";
                                                            readonly title: "TeamSlug";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                    readonly title: "BaseTeam";
                                                    readonly type: "object";
                                                }];
                                                readonly title: "BaseOpponent";
                                            };
                                            readonly physical_damage: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly dealt: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly dealt_percentage: {
                                                        readonly deprecated: false;
                                                        readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                        readonly maximum: 100;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLPlayerDamageDealtPercentage";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly dealt_to_champions: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly dealt_to_champions_percentage: {
                                                        readonly deprecated: false;
                                                        readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                        readonly maximum: 100;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly taken: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                                readonly title: "LoLPhysicalDamage";
                                                readonly type: "object";
                                            };
                                            readonly player: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly active: {
                                                        readonly description: "Whether player is active";
                                                        readonly title: "PlayerIsActive";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly age: {
                                                        readonly deprecated: false;
                                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly minimum: 0;
                                                        readonly title: "PlayerAge";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly birthday: {
                                                        readonly deprecated: false;
                                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly title: "PlayerBirthday";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly first_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "First name of the player. `null` if unknown";
                                                        readonly title: "PlayerFirstName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                                        readonly format: "uri";
                                                        readonly title: "PlayerImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly last_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "Last name of the player. `null` if unknown";
                                                        readonly title: "PlayerLastName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "PlayerModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Professional name of the player";
                                                        readonly title: "PlayerName";
                                                        readonly type: "string";
                                                    };
                                                    readonly nationality: {
                                                        readonly deprecated: false;
                                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                        readonly title: "PlayerNationality";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly role: {
                                                        readonly deprecated: false;
                                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                        readonly title: "PlayerRoleSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "PlayerSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                                readonly title: "BasePlayer";
                                                readonly type: "object";
                                            };
                                            readonly player_id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly role: {
                                                readonly deprecated: false;
                                                readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                                readonly title: "LoLPlayerRole";
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`adc` `jun` `mid` `sup` `top`";
                                            };
                                            readonly runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLRuneName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "name"];
                                                    readonly title: "LoLRune";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunes";
                                                readonly type: "array";
                                            };
                                            readonly runes_reforged: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly primary_path: {
                                                        readonly additionalProperties: false;
                                                        readonly deprecated: false;
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly description: "ID of the rune";
                                                                readonly minimum: 1;
                                                                readonly title: "LoLRuneReforgedID";
                                                                readonly type: "integer";
                                                            };
                                                            readonly image_url: {
                                                                readonly description: "URL to an image of the rune";
                                                                readonly format: "uri";
                                                                readonly title: "LoLRuneReforgedImageURL";
                                                                readonly type: "string";
                                                            };
                                                            readonly keystone: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: "object";
                                                            };
                                                            readonly lesser_runes: {
                                                                readonly items: {
                                                                    readonly additionalProperties: false;
                                                                    readonly deprecated: false;
                                                                    readonly properties: {
                                                                        readonly id: {
                                                                            readonly description: "ID of the rune";
                                                                            readonly minimum: 1;
                                                                            readonly title: "LoLRuneReforgedID";
                                                                            readonly type: "integer";
                                                                        };
                                                                        readonly image_url: {
                                                                            readonly description: "URL to an image of the rune";
                                                                            readonly format: "uri";
                                                                            readonly title: "LoLRuneReforgedImageURL";
                                                                            readonly type: "string";
                                                                        };
                                                                        readonly name: {
                                                                            readonly description: "Name of the rune path";
                                                                            readonly title: "LoLRuneReforgedName";
                                                                            readonly type: "string";
                                                                        };
                                                                        readonly type: {
                                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                            readonly title: "LoLRuneReforgedType";
                                                                            readonly type: "string";
                                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                        };
                                                                    };
                                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                                    readonly title: "LoLRuneReforged";
                                                                    readonly type: "object";
                                                                };
                                                                readonly title: "LoLRunesReforged";
                                                                readonly type: "array";
                                                            };
                                                            readonly name: {
                                                                readonly description: "Name of the rune path";
                                                                readonly title: "LoLRuneReforgedName";
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                readonly title: "LoLRuneReforgedType";
                                                                readonly type: "string";
                                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                                        readonly title: "LoLPlayerPrimaryRunePath";
                                                        readonly type: readonly ["object", "null"];
                                                    };
                                                    readonly secondary_path: {
                                                        readonly additionalProperties: false;
                                                        readonly deprecated: false;
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly description: "ID of the rune";
                                                                readonly minimum: 1;
                                                                readonly title: "LoLRuneReforgedID";
                                                                readonly type: "integer";
                                                            };
                                                            readonly image_url: {
                                                                readonly description: "URL to an image of the rune";
                                                                readonly format: "uri";
                                                                readonly title: "LoLRuneReforgedImageURL";
                                                                readonly type: "string";
                                                            };
                                                            readonly lesser_runes: {
                                                                readonly items: {
                                                                    readonly additionalProperties: false;
                                                                    readonly deprecated: false;
                                                                    readonly properties: {
                                                                        readonly id: {
                                                                            readonly description: "ID of the rune";
                                                                            readonly minimum: 1;
                                                                            readonly title: "LoLRuneReforgedID";
                                                                            readonly type: "integer";
                                                                        };
                                                                        readonly image_url: {
                                                                            readonly description: "URL to an image of the rune";
                                                                            readonly format: "uri";
                                                                            readonly title: "LoLRuneReforgedImageURL";
                                                                            readonly type: "string";
                                                                        };
                                                                        readonly name: {
                                                                            readonly description: "Name of the rune path";
                                                                            readonly title: "LoLRuneReforgedName";
                                                                            readonly type: "string";
                                                                        };
                                                                        readonly type: {
                                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                            readonly title: "LoLRuneReforgedType";
                                                                            readonly type: "string";
                                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                        };
                                                                    };
                                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                                    readonly title: "LoLRuneReforged";
                                                                    readonly type: "object";
                                                                };
                                                                readonly title: "LoLRunesReforged";
                                                                readonly type: "array";
                                                            };
                                                            readonly name: {
                                                                readonly description: "Name of the rune path";
                                                                readonly title: "LoLRuneReforgedName";
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                readonly title: "LoLRuneReforgedType";
                                                                readonly type: "string";
                                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                                        readonly title: "LoLPlayerSecondaryRunePath";
                                                        readonly type: readonly ["object", "null"];
                                                    };
                                                    readonly shards: {
                                                        readonly additionalProperties: false;
                                                        readonly deprecated: false;
                                                        readonly properties: {
                                                            readonly defense: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: readonly ["object", "null"];
                                                            };
                                                            readonly flex: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: readonly ["object", "null"];
                                                            };
                                                            readonly offense: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: readonly ["object", "null"];
                                                            };
                                                        };
                                                        readonly required: readonly ["defense", "flex", "offense"];
                                                        readonly title: "LoLPlayerRuneShards";
                                                        readonly type: "object";
                                                    };
                                                };
                                                readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                                readonly title: "LoLPlayerRunesReforged";
                                                readonly type: "object";
                                            };
                                            readonly spells: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly minimum: 1;
                                                            readonly title: "LoLSpellID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly format: "uri";
                                                            readonly title: "LoLSpellImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly title: "LoLSpellName";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name"];
                                                    readonly title: "LoLSpell";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLSpells";
                                                readonly type: "array";
                                            };
                                            readonly team: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly acronym: {
                                                        readonly deprecated: false;
                                                        readonly title: "TeamAcronym";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL of the team logo";
                                                        readonly format: "uri";
                                                        readonly title: "TeamImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly location: {
                                                        readonly deprecated: false;
                                                        readonly description: "The team's organization location";
                                                        readonly title: "TeamLocation";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "TeamModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "The name of the team.";
                                                        readonly title: "TeamName";
                                                        readonly type: "string";
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "TeamSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                readonly title: "BaseTeam";
                                                readonly type: "object";
                                            };
                                            readonly total_damage: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly dealt: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly dealt_percentage: {
                                                        readonly deprecated: false;
                                                        readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                        readonly maximum: 100;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLPlayerDamageDealtPercentage";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly dealt_to_champions: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly dealt_to_champions_percentage: {
                                                        readonly deprecated: false;
                                                        readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                        readonly maximum: 100;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly taken: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                                readonly title: "LoLTotalDamage";
                                                readonly type: "object";
                                            };
                                            readonly total_heal: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLTotalHeal";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly total_time_crowd_control_dealt: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLTotalTimeCrowdControlDealt";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly total_units_healed: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLTotalUnitsHealed";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly true_damage: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly dealt: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly dealt_percentage: {
                                                        readonly deprecated: false;
                                                        readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                        readonly maximum: 100;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLPlayerDamageDealtPercentage";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly dealt_to_champions: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly dealt_to_champions_percentage: {
                                                        readonly deprecated: false;
                                                        readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                        readonly maximum: 100;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly taken: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLDamage";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                                readonly title: "LoLTrueDamage";
                                                readonly type: "object";
                                            };
                                            readonly wards: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly placed: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLWardsPlaced";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly sight_wards_bought_in_game: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLSightWards";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                    readonly vision_wards_bought_in_game: {
                                                        readonly deprecated: false;
                                                        readonly minimum: 0;
                                                        readonly title: "LoLVisionWards";
                                                        readonly type: readonly ["integer", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                                readonly title: "LoLWards";
                                                readonly type: "object";
                                            };
                                            readonly wards_placed: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLWardsPlaced";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                        };
                                        readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "cs_diff_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_percentage", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                                        readonly title: "LoLGamePlayer";
                                        readonly type: "object";
                                    };
                                    readonly title: "LoLGamePlayers";
                                    readonly type: readonly ["array", "null"];
                                };
                                readonly position: {
                                    readonly description: "Game position in the match. Starts at 1";
                                    readonly minimum: 1;
                                    readonly title: "GamePosition";
                                    readonly type: "integer";
                                };
                                readonly status: {
                                    readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                    readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                    readonly title: "GameStatus";
                                    readonly type: "string";
                                };
                                readonly teams: {
                                    readonly deprecated: false;
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly description: "Team's data for a Game";
                                        readonly properties: {
                                            readonly bans: {
                                                readonly items: {
                                                    readonly minimum: 1;
                                                    readonly title: "LoLChampionID";
                                                    readonly type: "integer";
                                                };
                                                readonly title: "LoLChampionIDs";
                                                readonly type: "array";
                                            };
                                            readonly baron_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLBaronKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly chemtech_drake_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLChemtechDrakeKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly cloud_drake_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLCloudDrakeKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly color: {
                                                readonly enum: readonly ["blue", "red"];
                                                readonly title: "LoLTeamColor";
                                                readonly type: "string";
                                                readonly description: "`blue` `red`";
                                            };
                                            readonly dragon_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLDragonKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly elder_drake_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLElderDrakeKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly first_baron: {
                                                readonly deprecated: false;
                                                readonly description: "Whether team got first baron Nashor";
                                                readonly title: "LoLTeamGotFirstBaron";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly first_blood: {
                                                readonly deprecated: false;
                                                readonly description: "Whether team got first blood";
                                                readonly title: "LoLTeamGotFirstBlood";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly first_dragon: {
                                                readonly deprecated: false;
                                                readonly description: "Whether team got first dragon";
                                                readonly title: "LoLTeamGotFirstDragon";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly first_herald: {
                                                readonly deprecated: false;
                                                readonly description: "Whether team got first herald";
                                                readonly title: "LoLTeamGotFirstHerald";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly first_inhibitor: {
                                                readonly deprecated: false;
                                                readonly description: "Whether team got first inhibitor";
                                                readonly title: "LoLTeamGotFirstInhibitor";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly first_tower: {
                                                readonly deprecated: false;
                                                readonly description: "Whether team got first tower";
                                                readonly title: "LoLTeamGotFirstTower";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly first_voidgrub: {
                                                readonly deprecated: false;
                                                readonly description: "Whether team killed the first voidgrub";
                                                readonly title: "LoLTeamGotFirstVoidgrub";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly gold_earned: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLGold";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly herald_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLHeraldKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly hextech_drake_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLHextechDrakeKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly infernal_drake_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLInfernalDrakeKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly inhibitor_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLInhibitorKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLKillCount";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly mountain_drake_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLMountainDrakeKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly ocean_drake_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLOceanDrakeKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly player_ids: {
                                                readonly items: {
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                };
                                                readonly title: "PlayerIDs";
                                                readonly type: "array";
                                            };
                                            readonly team: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly acronym: {
                                                        readonly deprecated: false;
                                                        readonly title: "TeamAcronym";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL of the team logo";
                                                        readonly format: "uri";
                                                        readonly title: "TeamImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly location: {
                                                        readonly deprecated: false;
                                                        readonly description: "The team's organization location";
                                                        readonly title: "TeamLocation";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "TeamModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "The name of the team.";
                                                        readonly title: "TeamName";
                                                        readonly type: "string";
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "TeamSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                readonly title: "BaseTeam";
                                                readonly type: "object";
                                            };
                                            readonly tower_kills: {
                                                readonly deprecated: false;
                                                readonly minimum: 0;
                                                readonly title: "LoLTowerKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly voidgrub_kills: {
                                                readonly deprecated: false;
                                                readonly description: "The number of voidgrubs killed by a team.";
                                                readonly maximum: 6;
                                                readonly minimum: 0;
                                                readonly title: "LoLVoidgrubKills";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                        };
                                        readonly required: readonly ["bans", "baron_kills", "chemtech_drake_kills", "cloud_drake_kills", "color", "dragon_kills", "elder_drake_kills", "first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "gold_earned", "herald_kills", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "mountain_drake_kills", "ocean_drake_kills", "player_ids", "team", "tower_kills", "voidgrub_kills"];
                                        readonly title: "LoLGameTeam";
                                        readonly type: "object";
                                    };
                                    readonly title: "LoLGameTeams";
                                    readonly type: readonly ["array", "null"];
                                };
                                readonly winner: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly anyOf: readonly [{
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            }, {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            }];
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly title: "OpponentID";
                                        };
                                        readonly type: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`Player` `Team`";
                                        };
                                    };
                                    readonly required: readonly ["id", "type"];
                                    readonly title: "GameWinner";
                                    readonly type: "object";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "players", "position", "status", "teams", "winner", "winner_type"];
                            readonly title: "LoLTeamLastGame";
                            readonly type: "object";
                        };
                        readonly title: "LoLTeamLastGames";
                        readonly type: "array";
                    };
                    readonly location: {
                        readonly deprecated: false;
                        readonly description: "The team's organization location";
                        readonly title: "TeamLocation";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TeamModifiedAt";
                        readonly type: "string";
                    };
                    readonly most_banned: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "A team's banned champion";
                            readonly properties: {
                                readonly count: {
                                    readonly minimum: 0;
                                    readonly title: "LoLChampionPickedOrBannedCount";
                                    readonly type: "integer";
                                };
                                readonly name: {
                                    readonly title: "LoLChampionName";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["count", "name"];
                            readonly title: "LoLBannedChampion";
                            readonly type: "object";
                        };
                        readonly title: "LoLBannedChampions";
                        readonly type: "array";
                    };
                    readonly most_banned_against: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "A team's banned champion";
                            readonly properties: {
                                readonly count: {
                                    readonly minimum: 0;
                                    readonly title: "LoLChampionPickedOrBannedCount";
                                    readonly type: "integer";
                                };
                                readonly name: {
                                    readonly title: "LoLChampionName";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["count", "name"];
                            readonly title: "LoLBannedChampion";
                            readonly type: "object";
                        };
                        readonly title: "LoLBannedChampions";
                        readonly type: "array";
                    };
                    readonly most_picked: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "A team's picked champion";
                            readonly properties: {
                                readonly count: {
                                    readonly minimum: 0;
                                    readonly title: "LoLChampionPickedOrBannedCount";
                                    readonly type: "integer";
                                };
                                readonly games_lost: {
                                    readonly description: "Number of games lost by the team on the given champion";
                                    readonly type: "integer";
                                };
                                readonly games_won: {
                                    readonly description: "Number of games won by the team on the given champion";
                                    readonly type: "integer";
                                };
                                readonly name: {
                                    readonly title: "LoLChampionName";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["count", "games_lost", "games_won", "name"];
                            readonly title: "LoLPickedChampion";
                            readonly type: "object";
                        };
                        readonly title: "LoLPickedChampions";
                        readonly type: "array";
                    };
                    readonly name: {
                        readonly description: "The name of the team.";
                        readonly title: "TeamName";
                        readonly type: "string";
                    };
                    readonly players: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly active: {
                                    readonly description: "Whether player is active";
                                    readonly title: "PlayerIsActive";
                                    readonly type: "boolean";
                                };
                                readonly age: {
                                    readonly deprecated: false;
                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly minimum: 0;
                                    readonly title: "PlayerAge";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly birthday: {
                                    readonly deprecated: false;
                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly title: "PlayerBirthday";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly first_name: {
                                    readonly deprecated: false;
                                    readonly description: "First name of the player. `null` if unknown";
                                    readonly title: "PlayerFirstName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                    readonly format: "uri";
                                    readonly title: "PlayerImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly last_name: {
                                    readonly deprecated: false;
                                    readonly description: "Last name of the player. `null` if unknown";
                                    readonly title: "PlayerLastName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "PlayerModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Professional name of the player";
                                    readonly title: "PlayerName";
                                    readonly type: "string";
                                };
                                readonly nationality: {
                                    readonly deprecated: false;
                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                    readonly title: "PlayerNationality";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                    readonly title: "PlayerRoleSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "PlayerSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                            readonly title: "BasePlayer";
                            readonly type: "object";
                        };
                        readonly title: "BasePlayers";
                        readonly type: "array";
                    };
                    readonly slug: {
                        readonly deprecated: false;
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TeamSlug";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly stats: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Team's statistics for a serie";
                        readonly properties: {
                            readonly averages: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly assists: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageAssists";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly baron_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageBaronKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly deaths: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDeaths";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly dragon_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDragonKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly game_length: {
                                        readonly deprecated: false;
                                        readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                        readonly minimum: 0;
                                        readonly title: "GameLength";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly gold_earned: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageGoldEarned";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly herald_kill: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageHeraldKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly inhibitor_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageInhibitorKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly ratios: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly first_baron: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstBaron";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_blood: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstBlood";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_dragon: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstDragon";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_herald: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstHerald";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_inhibitor: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstInhibitor";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_tower: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstTower";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_voidgrub: {
                                                readonly deprecated: false;
                                                readonly description: "Whether the team killed the first voidgrub.";
                                                readonly minimum: 0;
                                                readonly title: "LoLTeamFirstVoidgrubRatio";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly win: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioWin";
                                                readonly type: readonly ["number", "null"];
                                            };
                                        };
                                        readonly required: readonly ["first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "win"];
                                        readonly title: "LoLTeamRatios";
                                        readonly type: "object";
                                    };
                                    readonly total_minions_killed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageMinionsKilled";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly tower_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageTowerKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly voidgrub_kills: {
                                        readonly deprecated: false;
                                        readonly description: "The number of voidgrubs killed by a team.";
                                        readonly maximum: 6;
                                        readonly minimum: 0;
                                        readonly title: "LoLTeamVoidgrubKillsAverage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly wards_placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageWardsPlaced";
                                        readonly type: readonly ["number", "null"];
                                    };
                                };
                                readonly required: readonly ["assists", "baron_kills", "deaths", "dragon_kills", "game_length", "gold_earned", "herald_kill", "inhibitor_kills", "kills", "ratios", "total_minions_killed", "tower_kills", "voidgrub_kills", "wards_placed"];
                                readonly title: "LoLTeamAverages";
                                readonly type: "object";
                            };
                            readonly games_count: {
                                readonly deprecated: false;
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly serie: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly description: "A serie, an occurrence of a league event";
                                readonly properties: {
                                    readonly begin_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieBeginAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly end_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieEndAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly full_name: {
                                        readonly title: "SerieFullName";
                                        readonly type: "string";
                                    };
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "SerieID";
                                        readonly type: "integer";
                                    };
                                    readonly league: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LeagueID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly format: "uri";
                                                readonly title: "LeagueImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "LeagueModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "LeagueName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9:_-]+$";
                                                readonly title: "LeagueSlug";
                                                readonly type: "string";
                                            };
                                            readonly url: {
                                                readonly deprecated: false;
                                                readonly format: "uri";
                                                readonly title: "LeagueURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                                        readonly title: "BaseLeague";
                                        readonly type: "object";
                                    };
                                    readonly league_id: {
                                        readonly minimum: 1;
                                        readonly title: "LeagueID";
                                        readonly type: "integer";
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly deprecated: false;
                                        readonly title: "SerieName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly season: {
                                        readonly deprecated: false;
                                        readonly title: "SerieSeason";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "SerieSlug";
                                        readonly type: "string";
                                    };
                                    readonly tournaments: {
                                        readonly items: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly begin_at: {
                                                    readonly deprecated: false;
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentBeginAt";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly detailed_stats: {
                                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                                    readonly title: "TournamentDetailedStats";
                                                    readonly type: "boolean";
                                                };
                                                readonly end_at: {
                                                    readonly deprecated: false;
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentEndAt";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly has_bracket: {
                                                    readonly description: "Whether the tournament has a bracket";
                                                    readonly title: "TournamentHasBracket";
                                                    readonly type: "boolean";
                                                };
                                                readonly id: {
                                                    readonly minimum: 1;
                                                    readonly title: "TournamentID";
                                                    readonly type: "integer";
                                                };
                                                readonly league_id: {
                                                    readonly minimum: 1;
                                                    readonly title: "LeagueID";
                                                    readonly type: "integer";
                                                };
                                                readonly live_supported: {
                                                    readonly description: "Whether live is supported";
                                                    readonly title: "TournamentLiveSupported";
                                                    readonly type: "boolean";
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly title: "TournamentName";
                                                    readonly type: "string";
                                                };
                                                readonly prizepool: {
                                                    readonly deprecated: false;
                                                    readonly title: "TournamentPrizepool";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly serie_id: {
                                                    readonly minimum: 1;
                                                    readonly title: "SerieID";
                                                    readonly type: "integer";
                                                };
                                                readonly slug: {
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TournamentSlug";
                                                    readonly type: "string";
                                                };
                                                readonly tier: {
                                                    readonly deprecated: false;
                                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                                    readonly title: "TournamentTier";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly winner_id: {
                                                    readonly anyOf: readonly [{
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    }, {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    }];
                                                    readonly deprecated: false;
                                                    readonly nullable: true;
                                                    readonly title: "OpponentID";
                                                };
                                                readonly winner_type: {
                                                    readonly deprecated: false;
                                                    readonly enum: readonly ["Player", "Team"];
                                                    readonly title: "OpponentType";
                                                    readonly type: readonly ["string", "null"];
                                                    readonly description: "`Player` `Team`";
                                                };
                                            };
                                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                                            readonly title: "BaseTournament";
                                            readonly type: "object";
                                        };
                                        readonly title: "BaseTournaments";
                                        readonly type: "array";
                                    };
                                    readonly videogame: {
                                        readonly enum: readonly [{
                                            readonly id: 1;
                                            readonly name: "LoL";
                                            readonly slug: "league-of-legends";
                                        }, {
                                            readonly id: 3;
                                            readonly name: "Counter-Strike";
                                            readonly slug: "cs-go";
                                        }, {
                                            readonly id: 4;
                                            readonly name: "Dota 2";
                                            readonly slug: "dota-2";
                                        }, {
                                            readonly id: 14;
                                            readonly name: "Overwatch";
                                            readonly slug: "ow";
                                        }, {
                                            readonly id: 20;
                                            readonly name: "PUBG";
                                            readonly slug: "pubg";
                                        }, {
                                            readonly id: 22;
                                            readonly name: "Rocket League";
                                            readonly slug: "rl";
                                        }, {
                                            readonly id: 23;
                                            readonly name: "Call of Duty";
                                            readonly slug: "cod-mw";
                                        }, {
                                            readonly id: 24;
                                            readonly name: "Rainbow 6 Siege";
                                            readonly slug: "r6-siege";
                                        }, {
                                            readonly id: 25;
                                            readonly name: "EA Sports FC";
                                            readonly slug: "fifa";
                                        }, {
                                            readonly id: 26;
                                            readonly name: "Valorant";
                                            readonly slug: "valorant";
                                        }, {
                                            readonly id: 27;
                                            readonly name: "King of Glory";
                                            readonly slug: "kog";
                                        }, {
                                            readonly id: 28;
                                            readonly name: "LoL Wild Rift";
                                            readonly slug: "lol-wild-rift";
                                        }, {
                                            readonly id: 29;
                                            readonly name: "StarCraft 2";
                                            readonly slug: "starcraft-2";
                                        }, {
                                            readonly id: 30;
                                            readonly name: "StarCraft Brood War";
                                            readonly slug: "starcraft-brood-war";
                                        }, {
                                            readonly id: 31;
                                            readonly name: "eSoccer";
                                            readonly slug: "e-soccer";
                                        }, {
                                            readonly id: 32;
                                            readonly name: "eBasketball";
                                            readonly slug: "e-basketball";
                                        }, {
                                            readonly id: 33;
                                            readonly name: "eCricket";
                                            readonly slug: "e-cricket";
                                        }, {
                                            readonly id: 34;
                                            readonly name: "Mobile Legends: Bang Bang";
                                            readonly slug: "mlbb";
                                        }];
                                        readonly title: "CurrentVideogame";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                                    };
                                    readonly videogame_title: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "VideogameTitleID";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "VideogameTitleName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "VideogameTitleSlug";
                                                readonly type: "string";
                                            };
                                            readonly videogame_id: {
                                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                                readonly title: "VideogameID";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                                        readonly title: "VideogameTitle";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly winner_id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly winner_type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                    readonly year: {
                                        readonly deprecated: false;
                                        readonly minimum: 2012;
                                        readonly title: "SerieYear";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                                readonly title: "Serie";
                                readonly type: "object";
                            };
                            readonly totals: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly assists: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAssistCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly baron_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLBaronKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly blue_games_lost: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly blue_games_won: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly chemtech_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLChemtechDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly deaths: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDeathCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dragon_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDragonKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly elder_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLElderDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_lost: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_played: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_won: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly herald_kill: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLHeraldKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly hextech_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLHextechDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly infernal_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLInfernalDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly inhibitor_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLInhibitorKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly matches_lost: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly matches_played: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly matches_won: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly mountain_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLMountainDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly ocean_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLOceanDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly red_games_lost: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly red_games_won: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly tower_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLTowerKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly voidgrub_kills: {
                                        readonly deprecated: false;
                                        readonly description: "The number of voidgrubs killed by a team.";
                                        readonly minimum: 0;
                                        readonly title: "LoLTeamVoidgrubKillsTotal";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly wards_placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLWardsPlaced";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["assists", "baron_kills", "blue_games_lost", "blue_games_won", "chemtech_drake_kills", "deaths", "dragon_kills", "elder_drake_kills", "games_lost", "games_played", "games_won", "herald_kill", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "matches_lost", "matches_played", "matches_won", "mountain_drake_kills", "ocean_drake_kills", "red_games_lost", "red_games_won", "tower_kills", "voidgrub_kills", "wards_placed"];
                                readonly title: "LoLTeamStatsTotals";
                                readonly type: "object";
                            };
                        };
                        readonly required: readonly ["averages", "games_count", "serie", "totals"];
                        readonly title: "LoLTeamBySerieStat";
                        readonly type: "object";
                    };
                };
                readonly required: readonly ["acronym", "id", "image_url", "last_games", "location", "modified_at", "most_banned", "most_banned_against", "most_picked", "name", "players", "slug", "stats"];
                readonly title: "LoLStatsForTeamBySerie";
                readonly type: "object";
            };
            readonly title: "LoLStatsForTeamsBySerie";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSeriesSerieIdOrSlugTeamsTeamIdOrSlugStats: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly serie_id_or_slug: {
                    readonly description: "A serie ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "SerieSlug";
                        readonly type: "string";
                    }];
                    readonly title: "SerieIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly team_id_or_slug: {
                    readonly description: "A team ID or slug";
                    readonly oneOf: readonly [{
                        readonly description: "The ID of the team.";
                        readonly minimum: 1;
                        readonly title: "TeamID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TeamSlug";
                        readonly type: "string";
                    }];
                    readonly title: "TeamIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["serie_id_or_slug", "team_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly games_count: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The amount of games used for the statistics.\n\nFor example if `?games_count=5`, it would show the statistics for the most recent 5 games played\n";
                };
                readonly side: {
                    readonly enum: readonly ["blue", "red"];
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly videogame_version: {
                    readonly description: "Possible values are `latest`, `all` or a specific version number.";
                    readonly oneOf: readonly [{
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    }, {
                        readonly enum: readonly ["all"];
                    }, {
                        readonly enum: readonly ["latest"];
                    }];
                    readonly title: "VideogameVersionOrAll";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly description: "Team's aggregated statistics for a serie";
            readonly properties: {
                readonly acronym: {
                    readonly deprecated: false;
                    readonly title: "TeamAcronym";
                    readonly type: readonly ["string", "null"];
                };
                readonly id: {
                    readonly description: "The ID of the team.";
                    readonly minimum: 1;
                    readonly title: "TeamID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly deprecated: false;
                    readonly description: "URL of the team logo";
                    readonly format: "uri";
                    readonly title: "TeamImageURL";
                    readonly type: readonly ["string", "null"];
                };
                readonly last_games: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's last game";
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly complete: {
                                readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                readonly title: "GameComplete";
                                readonly type: "boolean";
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether historical data is available for the game";
                                readonly title: "GameDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly finished: {
                                readonly description: "Whether the game is finished";
                                readonly title: "GameIsFinished";
                                readonly type: "boolean";
                            };
                            readonly forfeit: {
                                readonly description: "Whether the game has been forfeited";
                                readonly title: "GameIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly id: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly length: {
                                readonly deprecated: false;
                                readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                readonly minimum: 0;
                                readonly title: "GameLength";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly match_id: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly players: {
                                readonly deprecated: false;
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "Player's data for a Game";
                                    readonly properties: {
                                        readonly assists: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAssistCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly champion: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly id: {
                                                    readonly minimum: 1;
                                                    readonly title: "LoLChampionID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly format: "uri";
                                                    readonly title: "LoLChampionImageURL";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly title: "LoLChampionName";
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["id", "image_url", "name"];
                                            readonly title: "BaseLoLChampion";
                                            readonly type: readonly ["object", "null"];
                                        };
                                        readonly creep_score: {
                                            readonly deprecated: false;
                                            readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                            readonly minimum: 0;
                                            readonly title: "LoLCreepScore";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cs_at_14: {
                                            readonly deprecated: false;
                                            readonly description: "The player's Creep Score (CS.) at 14minutes";
                                            readonly minimum: 0;
                                            readonly title: "LolCreepScoreAt14";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cs_diff_at_14: {
                                            readonly deprecated: false;
                                            readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                            readonly title: "LolCreepScoreDifferenceAt14";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly deaths: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDeathCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly flags: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly first_blood_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first blood assist";
                                                    readonly title: "LoLGotFirstBloodAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_blood_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first blood kill";
                                                    readonly title: "LoLGotFirstBloodKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_inhibitor_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first inhibitor assist";
                                                    readonly title: "LoLGotFirstInhibitorAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_inhibitor_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first inhibitor kill";
                                                    readonly title: "LoLGotFirstInhibitorKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_tower_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first tower assist";
                                                    readonly title: "LoLGotGirstTowerAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_tower_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first tower kill";
                                                    readonly title: "LoLGotFirstTowerKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                            };
                                            readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                            readonly title: "LoLFlags";
                                            readonly type: "object";
                                        };
                                        readonly game_id: {
                                            readonly description: "LoL game ID";
                                            readonly minimum: 1;
                                            readonly title: "LoLGameID";
                                            readonly type: "integer";
                                        };
                                        readonly gold_earned: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly gold_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerGoldErnedPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly gold_spent: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly items: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLItemID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly format: "uri";
                                                        readonly title: "LoLItemImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly is_trinket: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether item is a trinket";
                                                        readonly title: "LoLItemIsTrinket";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLItemName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                                readonly title: "BaseLoLItem";
                                                readonly type: "object";
                                            };
                                            readonly title: "BaseLoLItems";
                                            readonly type: "array";
                                        };
                                        readonly kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly kills_counters: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly inhibitors: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of inhibitors killed by the player";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLInhibitorCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions_enemy_jungle: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions_team_jungle: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionsTeamJungleCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly players: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of players killed";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly turrets: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of turrets killed";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLTurretCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly wards: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of wards killed by the player";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLWardCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                            readonly title: "LoLKillCounters";
                                            readonly type: "object";
                                        };
                                        readonly kills_series: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly double_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieDouble";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly penta_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSeriePenta";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly quadra_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieQuadra";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly triple_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieTriple";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                            readonly title: "LoLKillsSeries";
                                            readonly type: "object";
                                        };
                                        readonly largest_critical_strike: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestCriticalStrike";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly largest_killing_spree: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestKillingSpree";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly largest_multi_kill: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestMultiKill";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly level: {
                                            readonly deprecated: false;
                                            readonly minimum: 1;
                                            readonly title: "LoLChampionLevel";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly magic_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLMagicDamage";
                                            readonly type: "object";
                                        };
                                        readonly masteries: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLMasteryID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLMasteryName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "name"];
                                                readonly title: "LoLMastery";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLMasteries";
                                            readonly type: "array";
                                        };
                                        readonly minions_killed: {
                                            readonly deprecated: true;
                                            readonly description: "The player's Creep Score (CS.)";
                                            readonly minimum: 0;
                                            readonly title: "LoLMinionsKilled";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly opponent: {
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly oneOf: readonly [{
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly active: {
                                                        readonly description: "Whether player is active";
                                                        readonly title: "PlayerIsActive";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly age: {
                                                        readonly deprecated: false;
                                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly minimum: 0;
                                                        readonly title: "PlayerAge";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly birthday: {
                                                        readonly deprecated: false;
                                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly title: "PlayerBirthday";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly first_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "First name of the player. `null` if unknown";
                                                        readonly title: "PlayerFirstName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                                        readonly format: "uri";
                                                        readonly title: "PlayerImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly last_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "Last name of the player. `null` if unknown";
                                                        readonly title: "PlayerLastName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "PlayerModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Professional name of the player";
                                                        readonly title: "PlayerName";
                                                        readonly type: "string";
                                                    };
                                                    readonly nationality: {
                                                        readonly deprecated: false;
                                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                        readonly title: "PlayerNationality";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly role: {
                                                        readonly deprecated: false;
                                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                        readonly title: "PlayerRoleSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "PlayerSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                                readonly title: "BasePlayer";
                                                readonly type: "object";
                                            }, {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly acronym: {
                                                        readonly deprecated: false;
                                                        readonly title: "TeamAcronym";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL of the team logo";
                                                        readonly format: "uri";
                                                        readonly title: "TeamImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly location: {
                                                        readonly deprecated: false;
                                                        readonly description: "The team's organization location";
                                                        readonly title: "TeamLocation";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "TeamModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "The name of the team.";
                                                        readonly title: "TeamName";
                                                        readonly type: "string";
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "TeamSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                readonly title: "BaseTeam";
                                                readonly type: "object";
                                            }];
                                            readonly title: "BaseOpponent";
                                        };
                                        readonly physical_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLPhysicalDamage";
                                            readonly type: "object";
                                        };
                                        readonly player: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly active: {
                                                    readonly description: "Whether player is active";
                                                    readonly title: "PlayerIsActive";
                                                    readonly type: "boolean";
                                                };
                                                readonly age: {
                                                    readonly deprecated: false;
                                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                    readonly minimum: 0;
                                                    readonly title: "PlayerAge";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly birthday: {
                                                    readonly deprecated: false;
                                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                    readonly title: "PlayerBirthday";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly first_name: {
                                                    readonly deprecated: false;
                                                    readonly description: "First name of the player. `null` if unknown";
                                                    readonly title: "PlayerFirstName";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                                    readonly format: "uri";
                                                    readonly title: "PlayerImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly last_name: {
                                                    readonly deprecated: false;
                                                    readonly description: "Last name of the player. `null` if unknown";
                                                    readonly title: "PlayerLastName";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "PlayerModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "Professional name of the player";
                                                    readonly title: "PlayerName";
                                                    readonly type: "string";
                                                };
                                                readonly nationality: {
                                                    readonly deprecated: false;
                                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                    readonly title: "PlayerNationality";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly role: {
                                                    readonly deprecated: false;
                                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                    readonly title: "PlayerRoleSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "PlayerSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                            readonly title: "BasePlayer";
                                            readonly type: "object";
                                        };
                                        readonly player_id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                            readonly title: "LoLPlayerRole";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`adc` `jun` `mid` `sup` `top`";
                                        };
                                        readonly runes: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLRuneName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "name"];
                                                readonly title: "LoLRune";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLRunes";
                                            readonly type: "array";
                                        };
                                        readonly runes_reforged: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly primary_path: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly keystone: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: "object";
                                                        };
                                                        readonly lesser_runes: {
                                                            readonly items: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: "object";
                                                            };
                                                            readonly title: "LoLRunesReforged";
                                                            readonly type: "array";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                                    readonly title: "LoLPlayerPrimaryRunePath";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly secondary_path: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly lesser_runes: {
                                                            readonly items: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: "object";
                                                            };
                                                            readonly title: "LoLRunesReforged";
                                                            readonly type: "array";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                                    readonly title: "LoLPlayerSecondaryRunePath";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly shards: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly defense: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                        readonly flex: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                        readonly offense: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["defense", "flex", "offense"];
                                                    readonly title: "LoLPlayerRuneShards";
                                                    readonly type: "object";
                                                };
                                            };
                                            readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                            readonly title: "LoLPlayerRunesReforged";
                                            readonly type: "object";
                                        };
                                        readonly spells: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLSpellID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLSpellImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLSpellName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "LoLSpell";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLSpells";
                                            readonly type: "array";
                                        };
                                        readonly team: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly acronym: {
                                                    readonly deprecated: false;
                                                    readonly title: "TeamAcronym";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL of the team logo";
                                                    readonly format: "uri";
                                                    readonly title: "TeamImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly location: {
                                                    readonly deprecated: false;
                                                    readonly description: "The team's organization location";
                                                    readonly title: "TeamLocation";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TeamModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "The name of the team.";
                                                    readonly title: "TeamName";
                                                    readonly type: "string";
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TeamSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                            readonly title: "BaseTeam";
                                            readonly type: "object";
                                        };
                                        readonly total_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLTotalDamage";
                                            readonly type: "object";
                                        };
                                        readonly total_heal: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalHeal";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly total_time_crowd_control_dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalTimeCrowdControlDealt";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly total_units_healed: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalUnitsHealed";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly true_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLTrueDamage";
                                            readonly type: "object";
                                        };
                                        readonly wards: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly placed: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLWardsPlaced";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly sight_wards_bought_in_game: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLSightWards";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly vision_wards_bought_in_game: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLVisionWards";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                            readonly title: "LoLWards";
                                            readonly type: "object";
                                        };
                                        readonly wards_placed: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLWardsPlaced";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "cs_diff_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_percentage", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                                    readonly title: "LoLGamePlayer";
                                    readonly type: "object";
                                };
                                readonly title: "LoLGamePlayers";
                                readonly type: readonly ["array", "null"];
                            };
                            readonly position: {
                                readonly description: "Game position in the match. Starts at 1";
                                readonly minimum: 1;
                                readonly title: "GamePosition";
                                readonly type: "integer";
                            };
                            readonly status: {
                                readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                readonly title: "GameStatus";
                                readonly type: "string";
                            };
                            readonly teams: {
                                readonly deprecated: false;
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "Team's data for a Game";
                                    readonly properties: {
                                        readonly bans: {
                                            readonly items: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionID";
                                                readonly type: "integer";
                                            };
                                            readonly title: "LoLChampionIDs";
                                            readonly type: "array";
                                        };
                                        readonly baron_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLBaronKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly chemtech_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLChemtechDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cloud_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLCloudDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly color: {
                                            readonly enum: readonly ["blue", "red"];
                                            readonly title: "LoLTeamColor";
                                            readonly type: "string";
                                            readonly description: "`blue` `red`";
                                        };
                                        readonly dragon_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDragonKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly elder_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLElderDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly first_baron: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first baron Nashor";
                                            readonly title: "LoLTeamGotFirstBaron";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_blood: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first blood";
                                            readonly title: "LoLTeamGotFirstBlood";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_dragon: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first dragon";
                                            readonly title: "LoLTeamGotFirstDragon";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_herald: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first herald";
                                            readonly title: "LoLTeamGotFirstHerald";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_inhibitor: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first inhibitor";
                                            readonly title: "LoLTeamGotFirstInhibitor";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_tower: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first tower";
                                            readonly title: "LoLTeamGotFirstTower";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_voidgrub: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team killed the first voidgrub";
                                            readonly title: "LoLTeamGotFirstVoidgrub";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly gold_earned: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly herald_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLHeraldKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly hextech_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLHextechDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly infernal_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLInfernalDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly inhibitor_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLInhibitorKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly mountain_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLMountainDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly ocean_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLOceanDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly player_ids: {
                                            readonly items: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly title: "PlayerIDs";
                                            readonly type: "array";
                                        };
                                        readonly team: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly acronym: {
                                                    readonly deprecated: false;
                                                    readonly title: "TeamAcronym";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL of the team logo";
                                                    readonly format: "uri";
                                                    readonly title: "TeamImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly location: {
                                                    readonly deprecated: false;
                                                    readonly description: "The team's organization location";
                                                    readonly title: "TeamLocation";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TeamModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "The name of the team.";
                                                    readonly title: "TeamName";
                                                    readonly type: "string";
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TeamSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                            readonly title: "BaseTeam";
                                            readonly type: "object";
                                        };
                                        readonly tower_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTowerKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly voidgrub_kills: {
                                            readonly deprecated: false;
                                            readonly description: "The number of voidgrubs killed by a team.";
                                            readonly maximum: 6;
                                            readonly minimum: 0;
                                            readonly title: "LoLVoidgrubKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["bans", "baron_kills", "chemtech_drake_kills", "cloud_drake_kills", "color", "dragon_kills", "elder_drake_kills", "first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "gold_earned", "herald_kills", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "mountain_drake_kills", "ocean_drake_kills", "player_ids", "team", "tower_kills", "voidgrub_kills"];
                                    readonly title: "LoLGameTeam";
                                    readonly type: "object";
                                };
                                readonly title: "LoLGameTeams";
                                readonly type: readonly ["array", "null"];
                            };
                            readonly winner: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                };
                                readonly required: readonly ["id", "type"];
                                readonly title: "GameWinner";
                                readonly type: "object";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "players", "position", "status", "teams", "winner", "winner_type"];
                        readonly title: "LoLTeamLastGame";
                        readonly type: "object";
                    };
                    readonly title: "LoLTeamLastGames";
                    readonly type: "array";
                };
                readonly location: {
                    readonly deprecated: false;
                    readonly description: "The team's organization location";
                    readonly title: "TeamLocation";
                    readonly type: readonly ["string", "null"];
                };
                readonly modified_at: {
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "TeamModifiedAt";
                    readonly type: "string";
                };
                readonly most_banned: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's banned champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "name"];
                        readonly title: "LoLBannedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLBannedChampions";
                    readonly type: "array";
                };
                readonly most_banned_against: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's banned champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "name"];
                        readonly title: "LoLBannedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLBannedChampions";
                    readonly type: "array";
                };
                readonly most_picked: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's picked champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly games_lost: {
                                readonly description: "Number of games lost by the team on the given champion";
                                readonly type: "integer";
                            };
                            readonly games_won: {
                                readonly description: "Number of games won by the team on the given champion";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "games_lost", "games_won", "name"];
                        readonly title: "LoLPickedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLPickedChampions";
                    readonly type: "array";
                };
                readonly name: {
                    readonly description: "The name of the team.";
                    readonly title: "TeamName";
                    readonly type: "string";
                };
                readonly players: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly active: {
                                readonly description: "Whether player is active";
                                readonly title: "PlayerIsActive";
                                readonly type: "boolean";
                            };
                            readonly age: {
                                readonly deprecated: false;
                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly minimum: 0;
                                readonly title: "PlayerAge";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly birthday: {
                                readonly deprecated: false;
                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly title: "PlayerBirthday";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly first_name: {
                                readonly deprecated: false;
                                readonly description: "First name of the player. `null` if unknown";
                                readonly title: "PlayerFirstName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL to the photo of the player. `null` if not available.";
                                readonly format: "uri";
                                readonly title: "PlayerImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly last_name: {
                                readonly deprecated: false;
                                readonly description: "Last name of the player. `null` if unknown";
                                readonly title: "PlayerLastName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "PlayerModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "Professional name of the player";
                                readonly title: "PlayerName";
                                readonly type: "string";
                            };
                            readonly nationality: {
                                readonly deprecated: false;
                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                readonly title: "PlayerNationality";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                readonly title: "PlayerRoleSlug";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "PlayerSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                        readonly title: "BasePlayer";
                        readonly type: "object";
                    };
                    readonly title: "BasePlayers";
                    readonly type: "array";
                };
                readonly slug: {
                    readonly deprecated: false;
                    readonly minLength: 1;
                    readonly pattern: "^[a-z0-9_-]+$";
                    readonly title: "TeamSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly stats: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly description: "Team's statistics for a serie";
                    readonly properties: {
                        readonly averages: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageAssists";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly baron_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageBaronKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDeaths";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly dragon_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDragonKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly game_length: {
                                    readonly deprecated: false;
                                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                    readonly minimum: 0;
                                    readonly title: "GameLength";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldEarned";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly herald_kill: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageHeraldKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly inhibitor_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageInhibitorKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly ratios: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly first_baron: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstBaron";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_blood: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstBlood";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_dragon: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstDragon";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_herald: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstHerald";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_inhibitor: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstInhibitor";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_tower: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstTower";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_voidgrub: {
                                            readonly deprecated: false;
                                            readonly description: "Whether the team killed the first voidgrub.";
                                            readonly minimum: 0;
                                            readonly title: "LoLTeamFirstVoidgrubRatio";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly win: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioWin";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "win"];
                                    readonly title: "LoLTeamRatios";
                                    readonly type: "object";
                                };
                                readonly total_minions_killed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageMinionsKilled";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly tower_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTowerKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly voidgrub_kills: {
                                    readonly deprecated: false;
                                    readonly description: "The number of voidgrubs killed by a team.";
                                    readonly maximum: 6;
                                    readonly minimum: 0;
                                    readonly title: "LoLTeamVoidgrubKillsAverage";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageWardsPlaced";
                                    readonly type: readonly ["number", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "baron_kills", "deaths", "dragon_kills", "game_length", "gold_earned", "herald_kill", "inhibitor_kills", "kills", "ratios", "total_minions_killed", "tower_kills", "voidgrub_kills", "wards_placed"];
                            readonly title: "LoLTeamAverages";
                            readonly type: "object";
                        };
                        readonly games_count: {
                            readonly deprecated: false;
                            readonly description: "Number of games";
                            readonly minimum: 0;
                            readonly title: "GameCount";
                            readonly type: readonly ["integer", "null"];
                        };
                        readonly serie: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "A serie, an occurrence of a league event";
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly full_name: {
                                    readonly title: "SerieFullName";
                                    readonly type: "string";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly league: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LeagueID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LeagueImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "LeagueModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LeagueName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9:_-]+$";
                                            readonly title: "LeagueSlug";
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LeagueURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                                    readonly title: "BaseLeague";
                                    readonly type: "object";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "SerieModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly deprecated: false;
                                    readonly title: "SerieName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly season: {
                                    readonly deprecated: false;
                                    readonly title: "SerieSeason";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "SerieSlug";
                                    readonly type: "string";
                                };
                                readonly tournaments: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly begin_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TournamentBeginAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly detailed_stats: {
                                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                                readonly title: "TournamentDetailedStats";
                                                readonly type: "boolean";
                                            };
                                            readonly end_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TournamentEndAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly has_bracket: {
                                                readonly description: "Whether the tournament has a bracket";
                                                readonly title: "TournamentHasBracket";
                                                readonly type: "boolean";
                                            };
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "TournamentID";
                                                readonly type: "integer";
                                            };
                                            readonly league_id: {
                                                readonly minimum: 1;
                                                readonly title: "LeagueID";
                                                readonly type: "integer";
                                            };
                                            readonly live_supported: {
                                                readonly description: "Whether live is supported";
                                                readonly title: "TournamentLiveSupported";
                                                readonly type: "boolean";
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TournamentModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "TournamentName";
                                                readonly type: "string";
                                            };
                                            readonly prizepool: {
                                                readonly deprecated: false;
                                                readonly title: "TournamentPrizepool";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly serie_id: {
                                                readonly minimum: 1;
                                                readonly title: "SerieID";
                                                readonly type: "integer";
                                            };
                                            readonly slug: {
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TournamentSlug";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly deprecated: false;
                                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                                readonly title: "TournamentTier";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly winner_id: {
                                                readonly anyOf: readonly [{
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                }, {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                }];
                                                readonly deprecated: false;
                                                readonly nullable: true;
                                                readonly title: "OpponentID";
                                            };
                                            readonly winner_type: {
                                                readonly deprecated: false;
                                                readonly enum: readonly ["Player", "Team"];
                                                readonly title: "OpponentType";
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`Player` `Team`";
                                            };
                                        };
                                        readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                                        readonly title: "BaseTournament";
                                        readonly type: "object";
                                    };
                                    readonly title: "BaseTournaments";
                                    readonly type: "array";
                                };
                                readonly videogame: {
                                    readonly enum: readonly [{
                                        readonly id: 1;
                                        readonly name: "LoL";
                                        readonly slug: "league-of-legends";
                                    }, {
                                        readonly id: 3;
                                        readonly name: "Counter-Strike";
                                        readonly slug: "cs-go";
                                    }, {
                                        readonly id: 4;
                                        readonly name: "Dota 2";
                                        readonly slug: "dota-2";
                                    }, {
                                        readonly id: 14;
                                        readonly name: "Overwatch";
                                        readonly slug: "ow";
                                    }, {
                                        readonly id: 20;
                                        readonly name: "PUBG";
                                        readonly slug: "pubg";
                                    }, {
                                        readonly id: 22;
                                        readonly name: "Rocket League";
                                        readonly slug: "rl";
                                    }, {
                                        readonly id: 23;
                                        readonly name: "Call of Duty";
                                        readonly slug: "cod-mw";
                                    }, {
                                        readonly id: 24;
                                        readonly name: "Rainbow 6 Siege";
                                        readonly slug: "r6-siege";
                                    }, {
                                        readonly id: 25;
                                        readonly name: "EA Sports FC";
                                        readonly slug: "fifa";
                                    }, {
                                        readonly id: 26;
                                        readonly name: "Valorant";
                                        readonly slug: "valorant";
                                    }, {
                                        readonly id: 27;
                                        readonly name: "King of Glory";
                                        readonly slug: "kog";
                                    }, {
                                        readonly id: 28;
                                        readonly name: "LoL Wild Rift";
                                        readonly slug: "lol-wild-rift";
                                    }, {
                                        readonly id: 29;
                                        readonly name: "StarCraft 2";
                                        readonly slug: "starcraft-2";
                                    }, {
                                        readonly id: 30;
                                        readonly name: "StarCraft Brood War";
                                        readonly slug: "starcraft-brood-war";
                                    }, {
                                        readonly id: 31;
                                        readonly name: "eSoccer";
                                        readonly slug: "e-soccer";
                                    }, {
                                        readonly id: 32;
                                        readonly name: "eBasketball";
                                        readonly slug: "e-basketball";
                                    }, {
                                        readonly id: 33;
                                        readonly name: "eCricket";
                                        readonly slug: "e-cricket";
                                    }, {
                                        readonly id: 34;
                                        readonly name: "Mobile Legends: Bang Bang";
                                        readonly slug: "mlbb";
                                    }];
                                    readonly title: "CurrentVideogame";
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                    readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                                };
                                readonly videogame_title: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "VideogameTitleID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "VideogameTitleName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "VideogameTitleSlug";
                                            readonly type: "string";
                                        };
                                        readonly videogame_id: {
                                            readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                            readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                            readonly title: "VideogameID";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "name", "slug", "videogame_id"];
                                    readonly title: "VideogameTitle";
                                    readonly type: readonly ["object", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                                readonly year: {
                                    readonly deprecated: false;
                                    readonly minimum: 2012;
                                    readonly title: "SerieYear";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                            readonly title: "Serie";
                            readonly type: "object";
                        };
                        readonly totals: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAssistCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly baron_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLBaronKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly blue_games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly blue_games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly chemtech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLChemtechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDeathCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly dragon_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDragonKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly elder_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLElderDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_played: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly herald_kill: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHeraldKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly hextech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHextechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly infernal_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInfernalDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly inhibitor_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInhibitorKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_lost: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_played: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_won: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly mountain_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLMountainDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly ocean_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLOceanDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly red_games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly red_games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly tower_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTowerKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly voidgrub_kills: {
                                    readonly deprecated: false;
                                    readonly description: "The number of voidgrubs killed by a team.";
                                    readonly minimum: 0;
                                    readonly title: "LoLTeamVoidgrubKillsTotal";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLWardsPlaced";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "baron_kills", "blue_games_lost", "blue_games_won", "chemtech_drake_kills", "deaths", "dragon_kills", "elder_drake_kills", "games_lost", "games_played", "games_won", "herald_kill", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "matches_lost", "matches_played", "matches_won", "mountain_drake_kills", "ocean_drake_kills", "red_games_lost", "red_games_won", "tower_kills", "voidgrub_kills", "wards_placed"];
                            readonly title: "LoLTeamStatsTotals";
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["averages", "games_count", "serie", "totals"];
                    readonly title: "LoLTeamBySerieStat";
                    readonly type: "object";
                };
            };
            readonly required: readonly ["acronym", "id", "image_url", "last_games", "location", "modified_at", "most_banned", "most_banned_against", "most_picked", "name", "players", "slug", "stats"];
            readonly title: "LoLStatsForTeamBySerie";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSeriesUpcoming: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "SerieName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly season: {
                            readonly items: {
                                readonly title: "SerieSeason";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly year: {
                            readonly items: {
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly league_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "SerieName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly season: {
                            readonly items: {
                                readonly title: "SerieSeason";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly year: {
                            readonly items: {
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "end_at", "-end_at", "id", "-id", "league_id", "-league_id", "modified_at", "-modified_at", "name", "-name", "season", "-season", "slug", "-slug", "winner_id", "-winner_id", "winner_type", "-winner_type", "year", "-year"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "SerieName";
                            readonly type: "string";
                        };
                        readonly season: {
                            readonly title: "SerieSeason";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "SerieSlug";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly description: "A serie, an occurrence of a league event";
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly full_name: {
                        readonly title: "SerieFullName";
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "SerieModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly deprecated: false;
                        readonly title: "SerieName";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly season: {
                        readonly deprecated: false;
                        readonly title: "SerieSeason";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "SerieSlug";
                        readonly type: "string";
                    };
                    readonly tournaments: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                    readonly title: "TournamentDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly has_bracket: {
                                    readonly description: "Whether the tournament has a bracket";
                                    readonly title: "TournamentHasBracket";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly live_supported: {
                                    readonly description: "Whether live is supported";
                                    readonly title: "TournamentLiveSupported";
                                    readonly type: "boolean";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "TournamentName";
                                    readonly type: "string";
                                };
                                readonly prizepool: {
                                    readonly deprecated: false;
                                    readonly title: "TournamentPrizepool";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly serie_id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TournamentSlug";
                                    readonly type: "string";
                                };
                                readonly tier: {
                                    readonly deprecated: false;
                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                    readonly title: "TournamentTier";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                            readonly title: "BaseTournament";
                            readonly type: "object";
                        };
                        readonly title: "BaseTournaments";
                        readonly type: "array";
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                    readonly year: {
                        readonly deprecated: false;
                        readonly minimum: 2012;
                        readonly title: "SerieYear";
                        readonly type: readonly ["integer", "null"];
                    };
                };
                readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                readonly title: "Serie";
                readonly type: "object";
            };
            readonly title: "LoLSeries";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSpells: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLSpellID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLSpellName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLSpellID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLSpellName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["id", "-id", "name", "-name"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLSpellName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLSpellID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly format: "uri";
                        readonly title: "LoLSpellImageURL";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "LoLSpellName";
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["id", "image_url", "name"];
                readonly title: "LoLSpell";
                readonly type: "object";
            };
            readonly title: "LoLSpells";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolSpellsLolSpellId: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_spell_id: {
                    readonly minimum: 1;
                    readonly title: "LoLSpellID";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A spell ID";
                };
            };
            readonly required: readonly ["lol_spell_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly properties: {
                readonly id: {
                    readonly minimum: 1;
                    readonly title: "LoLSpellID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly format: "uri";
                    readonly title: "LoLSpellImageURL";
                    readonly type: "string";
                };
                readonly name: {
                    readonly title: "LoLSpellName";
                    readonly type: "string";
                };
            };
            readonly required: readonly ["id", "image_url", "name"];
            readonly title: "LoLSpell";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTeams: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly acronym: {
                            readonly items: {
                                readonly title: "TeamAcronym";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly location: {
                            readonly items: {
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_id: {
                            readonly items: {
                                readonly description: "A videogame ID";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly acronym: {
                            readonly items: {
                                readonly title: "TeamAcronym";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly location: {
                            readonly items: {
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["acronym", "-acronym", "id", "-id", "location", "-location", "modified_at", "-modified_at", "name", "-name", "slug", "-slug", "videogame_id", "-videogame_id"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly acronym: {
                            readonly title: "TeamAcronym";
                            readonly type: "string";
                        };
                        readonly location: {
                            readonly description: "The team's organization location";
                            readonly title: "TeamLocation";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly description: "The name of the team.";
                            readonly title: "TeamName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TeamSlug";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly acronym: {
                        readonly deprecated: false;
                        readonly title: "TeamAcronym";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly current_videogame: {
                        readonly deprecated: false;
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: readonly ["object", "null"];
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly id: {
                        readonly description: "The ID of the team.";
                        readonly minimum: 1;
                        readonly title: "TeamID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly deprecated: false;
                        readonly description: "URL of the team logo";
                        readonly format: "uri";
                        readonly title: "TeamImageURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly location: {
                        readonly deprecated: false;
                        readonly description: "The team's organization location";
                        readonly title: "TeamLocation";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TeamModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly description: "The name of the team.";
                        readonly title: "TeamName";
                        readonly type: "string";
                    };
                    readonly players: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly active: {
                                    readonly description: "Whether player is active";
                                    readonly title: "PlayerIsActive";
                                    readonly type: "boolean";
                                };
                                readonly age: {
                                    readonly deprecated: false;
                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly minimum: 0;
                                    readonly title: "PlayerAge";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly birthday: {
                                    readonly deprecated: false;
                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                    readonly title: "PlayerBirthday";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly first_name: {
                                    readonly deprecated: false;
                                    readonly description: "First name of the player. `null` if unknown";
                                    readonly title: "PlayerFirstName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                    readonly format: "uri";
                                    readonly title: "PlayerImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly last_name: {
                                    readonly deprecated: false;
                                    readonly description: "Last name of the player. `null` if unknown";
                                    readonly title: "PlayerLastName";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "PlayerModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "Professional name of the player";
                                    readonly title: "PlayerName";
                                    readonly type: "string";
                                };
                                readonly nationality: {
                                    readonly deprecated: false;
                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                    readonly title: "PlayerNationality";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                    readonly title: "PlayerRoleSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "PlayerSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                            readonly title: "BasePlayer";
                            readonly type: "object";
                        };
                        readonly title: "BasePlayers";
                        readonly type: "array";
                    };
                    readonly slug: {
                        readonly deprecated: false;
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TeamSlug";
                        readonly type: readonly ["string", "null"];
                    };
                };
                readonly required: readonly ["acronym", "current_videogame", "id", "image_url", "location", "modified_at", "name", "players", "slug"];
                readonly title: "Team";
                readonly type: "object";
            };
            readonly title: "LoLTeams";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTeamsTeamIdOrSlugGames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly team_id_or_slug: {
                    readonly description: "A team ID or slug";
                    readonly oneOf: readonly [{
                        readonly description: "The ID of the team.";
                        readonly minimum: 1;
                        readonly title: "TeamID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TeamSlug";
                        readonly type: "string";
                    }];
                    readonly title: "TeamIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["team_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly complete: {
                            readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                            readonly title: "GameComplete";
                            readonly type: "boolean";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether historical data is available for the game";
                            readonly title: "GameDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly finished: {
                            readonly description: "Whether the game is finished";
                            readonly title: "GameIsFinished";
                            readonly type: "boolean";
                        };
                        readonly forfeit: {
                            readonly description: "Whether the game has been forfeited";
                            readonly title: "GameIsForfeit";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly length: {
                            readonly items: {
                                readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                readonly minimum: 0;
                                readonly title: "GameLength";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly match_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly position: {
                            readonly items: {
                                readonly description: "Game position in the match. Starts at 1";
                                readonly minimum: 1;
                                readonly title: "GamePosition";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly description: "The game status";
                                readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                readonly title: "GameStatus";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly complete: {
                            readonly items: {
                                readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                readonly title: "GameComplete";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether historical data is available for the game";
                                readonly title: "GameDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly finished: {
                            readonly items: {
                                readonly description: "Whether the game is finished";
                                readonly title: "GameIsFinished";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly forfeit: {
                            readonly items: {
                                readonly description: "Whether the game has been forfeited";
                                readonly title: "GameIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly length: {
                            readonly items: {
                                readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                readonly minimum: 0;
                                readonly title: "GameLength";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly match_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly position: {
                            readonly items: {
                                readonly description: "Game position in the match. Starts at 1";
                                readonly minimum: 1;
                                readonly title: "GamePosition";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly status: {
                            readonly items: {
                                readonly description: "The game status";
                                readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                readonly title: "GameStatus";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "complete", "-complete", "detailed_stats", "-detailed_stats", "end_at", "-end_at", "finished", "-finished", "forfeit", "-forfeit", "id", "-id", "length", "-length", "match_id", "-match_id", "position", "-position", "status", "-status", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly status: {
                            readonly description: "The game status";
                            readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                            readonly title: "GameStatus";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly description: "A team's last game";
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "GameBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly complete: {
                        readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                        readonly title: "GameComplete";
                        readonly type: "boolean";
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether historical data is available for the game";
                        readonly title: "GameDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "GameEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly finished: {
                        readonly description: "Whether the game is finished";
                        readonly title: "GameIsFinished";
                        readonly type: "boolean";
                    };
                    readonly forfeit: {
                        readonly description: "Whether the game has been forfeited";
                        readonly title: "GameIsForfeit";
                        readonly type: "boolean";
                    };
                    readonly id: {
                        readonly description: "LoL game ID";
                        readonly minimum: 1;
                        readonly title: "LoLGameID";
                        readonly type: "integer";
                    };
                    readonly length: {
                        readonly deprecated: false;
                        readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                        readonly minimum: 0;
                        readonly title: "GameLength";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly match_id: {
                        readonly minimum: 1;
                        readonly title: "MatchID";
                        readonly type: "integer";
                    };
                    readonly players: {
                        readonly deprecated: false;
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "Player's data for a Game";
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAssistCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly champion: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLChampionID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly format: "uri";
                                            readonly title: "LoLChampionImageURL";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LoLChampionName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "name"];
                                    readonly title: "BaseLoLChampion";
                                    readonly type: readonly ["object", "null"];
                                };
                                readonly creep_score: {
                                    readonly deprecated: false;
                                    readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                    readonly minimum: 0;
                                    readonly title: "LoLCreepScore";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly cs_at_14: {
                                    readonly deprecated: false;
                                    readonly description: "The player's Creep Score (CS.) at 14minutes";
                                    readonly minimum: 0;
                                    readonly title: "LolCreepScoreAt14";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly cs_diff_at_14: {
                                    readonly deprecated: false;
                                    readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                    readonly title: "LolCreepScoreDifferenceAt14";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDeathCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly flags: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly first_blood_assist: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first blood assist";
                                            readonly title: "LoLGotFirstBloodAssist";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_blood_kill: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first blood kill";
                                            readonly title: "LoLGotFirstBloodKill";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_inhibitor_assist: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first inhibitor assist";
                                            readonly title: "LoLGotFirstInhibitorAssist";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_inhibitor_kill: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first inhibitor kill";
                                            readonly title: "LoLGotFirstInhibitorKill";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_tower_assist: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first tower assist";
                                            readonly title: "LoLGotGirstTowerAssist";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_tower_kill: {
                                            readonly deprecated: false;
                                            readonly description: "Whether player got first tower kill";
                                            readonly title: "LoLGotFirstTowerKill";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                    };
                                    readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                    readonly title: "LoLFlags";
                                    readonly type: "object";
                                };
                                readonly game_id: {
                                    readonly description: "LoL game ID";
                                    readonly minimum: 1;
                                    readonly title: "LoLGameID";
                                    readonly type: "integer";
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLGold";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly gold_percentage: {
                                    readonly deprecated: false;
                                    readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                    readonly maximum: 100;
                                    readonly minimum: 0;
                                    readonly title: "LoLPlayerGoldErnedPercentage";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_spent: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLGold";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly items: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LoLItemID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly format: "uri";
                                                readonly title: "LoLItemImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly is_trinket: {
                                                readonly deprecated: false;
                                                readonly description: "Whether item is a trinket";
                                                readonly title: "LoLItemIsTrinket";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly name: {
                                                readonly title: "LoLItemName";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                        readonly title: "BaseLoLItem";
                                        readonly type: "object";
                                    };
                                    readonly title: "BaseLoLItems";
                                    readonly type: "array";
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills_counters: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly inhibitors: {
                                            readonly deprecated: false;
                                            readonly description: "Number of inhibitors killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLInhibitorCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly neutral_minions: {
                                            readonly deprecated: false;
                                            readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                            readonly minimum: 0;
                                            readonly title: "LoLNeutralMinionCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly neutral_minions_enemy_jungle: {
                                            readonly deprecated: false;
                                            readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                            readonly minimum: 0;
                                            readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly neutral_minions_team_jungle: {
                                            readonly deprecated: false;
                                            readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                            readonly minimum: 0;
                                            readonly title: "LoLNeutralMinionsTeamJungleCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly players: {
                                            readonly deprecated: false;
                                            readonly description: "Number of players killed";
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly turrets: {
                                            readonly deprecated: false;
                                            readonly description: "Number of turrets killed";
                                            readonly minimum: 0;
                                            readonly title: "LoLTurretCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly wards: {
                                            readonly deprecated: false;
                                            readonly description: "Number of wards killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLWardCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                    readonly title: "LoLKillCounters";
                                    readonly type: "object";
                                };
                                readonly kills_series: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly double_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieDouble";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly penta_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSeriePenta";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly quadra_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieQuadra";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly triple_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieTriple";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                    readonly title: "LoLKillsSeries";
                                    readonly type: "object";
                                };
                                readonly largest_critical_strike: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLLargestCriticalStrike";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly largest_killing_spree: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLLargestKillingSpree";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly largest_multi_kill: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLLargestMultiKill";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly level: {
                                    readonly deprecated: false;
                                    readonly minimum: 1;
                                    readonly title: "LoLChampionLevel";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly magic_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLMagicDamage";
                                    readonly type: "object";
                                };
                                readonly masteries: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LoLMasteryID";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "LoLMasteryName";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["id", "name"];
                                        readonly title: "LoLMastery";
                                        readonly type: "object";
                                    };
                                    readonly title: "LoLMasteries";
                                    readonly type: "array";
                                };
                                readonly minions_killed: {
                                    readonly deprecated: true;
                                    readonly description: "The player's Creep Score (CS.)";
                                    readonly minimum: 0;
                                    readonly title: "LoLMinionsKilled";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly opponent: {
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly oneOf: readonly [{
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly active: {
                                                readonly description: "Whether player is active";
                                                readonly title: "PlayerIsActive";
                                                readonly type: "boolean";
                                            };
                                            readonly age: {
                                                readonly deprecated: false;
                                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly minimum: 0;
                                                readonly title: "PlayerAge";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly birthday: {
                                                readonly deprecated: false;
                                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                readonly title: "PlayerBirthday";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly first_name: {
                                                readonly deprecated: false;
                                                readonly description: "First name of the player. `null` if unknown";
                                                readonly title: "PlayerFirstName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to the photo of the player. `null` if not available.";
                                                readonly format: "uri";
                                                readonly title: "PlayerImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly last_name: {
                                                readonly deprecated: false;
                                                readonly description: "Last name of the player. `null` if unknown";
                                                readonly title: "PlayerLastName";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "PlayerModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "Professional name of the player";
                                                readonly title: "PlayerName";
                                                readonly type: "string";
                                            };
                                            readonly nationality: {
                                                readonly deprecated: false;
                                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                readonly title: "PlayerNationality";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly role: {
                                                readonly deprecated: false;
                                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                readonly title: "PlayerRoleSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "PlayerSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                        readonly title: "BasePlayer";
                                        readonly type: "object";
                                    }, {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly acronym: {
                                                readonly deprecated: false;
                                                readonly title: "TeamAcronym";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL of the team logo";
                                                readonly format: "uri";
                                                readonly title: "TeamImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly location: {
                                                readonly deprecated: false;
                                                readonly description: "The team's organization location";
                                                readonly title: "TeamLocation";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TeamModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "The name of the team.";
                                                readonly title: "TeamName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TeamSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                        readonly title: "BaseTeam";
                                        readonly type: "object";
                                    }];
                                    readonly title: "BaseOpponent";
                                };
                                readonly physical_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLPhysicalDamage";
                                    readonly type: "object";
                                };
                                readonly player: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly active: {
                                            readonly description: "Whether player is active";
                                            readonly title: "PlayerIsActive";
                                            readonly type: "boolean";
                                        };
                                        readonly age: {
                                            readonly deprecated: false;
                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly minimum: 0;
                                            readonly title: "PlayerAge";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly birthday: {
                                            readonly deprecated: false;
                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly title: "PlayerBirthday";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                            readonly format: "uri";
                                            readonly title: "PlayerImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "PlayerModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly nationality: {
                                            readonly deprecated: false;
                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                            readonly title: "PlayerNationality";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                            readonly title: "PlayerRoleSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "PlayerSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                    readonly title: "BasePlayer";
                                    readonly type: "object";
                                };
                                readonly player_id: {
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                };
                                readonly role: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                    readonly title: "LoLPlayerRole";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`adc` `jun` `mid` `sup` `top`";
                                };
                                readonly runes: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneID";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "LoLRuneName";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["id", "name"];
                                        readonly title: "LoLRune";
                                        readonly type: "object";
                                    };
                                    readonly title: "LoLRunes";
                                    readonly type: "array";
                                };
                                readonly runes_reforged: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly primary_path: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly id: {
                                                    readonly description: "ID of the rune";
                                                    readonly minimum: 1;
                                                    readonly title: "LoLRuneReforgedID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly description: "URL to an image of the rune";
                                                    readonly format: "uri";
                                                    readonly title: "LoLRuneReforgedImageURL";
                                                    readonly type: "string";
                                                };
                                                readonly keystone: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly lesser_runes: {
                                                    readonly items: {
                                                        readonly additionalProperties: false;
                                                        readonly deprecated: false;
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly description: "ID of the rune";
                                                                readonly minimum: 1;
                                                                readonly title: "LoLRuneReforgedID";
                                                                readonly type: "integer";
                                                            };
                                                            readonly image_url: {
                                                                readonly description: "URL to an image of the rune";
                                                                readonly format: "uri";
                                                                readonly title: "LoLRuneReforgedImageURL";
                                                                readonly type: "string";
                                                            };
                                                            readonly name: {
                                                                readonly description: "Name of the rune path";
                                                                readonly title: "LoLRuneReforgedName";
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                readonly title: "LoLRuneReforgedType";
                                                                readonly type: "string";
                                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "image_url", "name", "type"];
                                                        readonly title: "LoLRuneReforged";
                                                        readonly type: "object";
                                                    };
                                                    readonly title: "LoLRunesReforged";
                                                    readonly type: "array";
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the rune path";
                                                    readonly title: "LoLRuneReforgedName";
                                                    readonly type: "string";
                                                };
                                                readonly type: {
                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                    readonly title: "LoLRuneReforgedType";
                                                    readonly type: "string";
                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                };
                                            };
                                            readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                            readonly title: "LoLPlayerPrimaryRunePath";
                                            readonly type: readonly ["object", "null"];
                                        };
                                        readonly secondary_path: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly id: {
                                                    readonly description: "ID of the rune";
                                                    readonly minimum: 1;
                                                    readonly title: "LoLRuneReforgedID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly description: "URL to an image of the rune";
                                                    readonly format: "uri";
                                                    readonly title: "LoLRuneReforgedImageURL";
                                                    readonly type: "string";
                                                };
                                                readonly lesser_runes: {
                                                    readonly items: {
                                                        readonly additionalProperties: false;
                                                        readonly deprecated: false;
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly description: "ID of the rune";
                                                                readonly minimum: 1;
                                                                readonly title: "LoLRuneReforgedID";
                                                                readonly type: "integer";
                                                            };
                                                            readonly image_url: {
                                                                readonly description: "URL to an image of the rune";
                                                                readonly format: "uri";
                                                                readonly title: "LoLRuneReforgedImageURL";
                                                                readonly type: "string";
                                                            };
                                                            readonly name: {
                                                                readonly description: "Name of the rune path";
                                                                readonly title: "LoLRuneReforgedName";
                                                                readonly type: "string";
                                                            };
                                                            readonly type: {
                                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                readonly title: "LoLRuneReforgedType";
                                                                readonly type: "string";
                                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "image_url", "name", "type"];
                                                        readonly title: "LoLRuneReforged";
                                                        readonly type: "object";
                                                    };
                                                    readonly title: "LoLRunesReforged";
                                                    readonly type: "array";
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the rune path";
                                                    readonly title: "LoLRuneReforgedName";
                                                    readonly type: "string";
                                                };
                                                readonly type: {
                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                    readonly title: "LoLRuneReforgedType";
                                                    readonly type: "string";
                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                };
                                            };
                                            readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                            readonly title: "LoLPlayerSecondaryRunePath";
                                            readonly type: readonly ["object", "null"];
                                        };
                                        readonly shards: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly defense: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly flex: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly offense: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                            };
                                            readonly required: readonly ["defense", "flex", "offense"];
                                            readonly title: "LoLPlayerRuneShards";
                                            readonly type: "object";
                                        };
                                    };
                                    readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                    readonly title: "LoLPlayerRunesReforged";
                                    readonly type: "object";
                                };
                                readonly spells: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LoLSpellID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly format: "uri";
                                                readonly title: "LoLSpellImageURL";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "LoLSpellName";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "name"];
                                        readonly title: "LoLSpell";
                                        readonly type: "object";
                                    };
                                    readonly title: "LoLSpells";
                                    readonly type: "array";
                                };
                                readonly team: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                };
                                readonly total_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLTotalDamage";
                                    readonly type: "object";
                                };
                                readonly total_heal: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTotalHeal";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly total_time_crowd_control_dealt: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTotalTimeCrowdControlDealt";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly total_units_healed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTotalUnitsHealed";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly true_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDamage";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLTrueDamage";
                                    readonly type: "object";
                                };
                                readonly wards: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly placed: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLWardsPlaced";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly sight_wards_bought_in_game: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLSightWards";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly vision_wards_bought_in_game: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLVisionWards";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                    readonly title: "LoLWards";
                                    readonly type: "object";
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLWardsPlaced";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "cs_diff_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_percentage", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                            readonly title: "LoLGamePlayer";
                            readonly type: "object";
                        };
                        readonly title: "LoLGamePlayers";
                        readonly type: readonly ["array", "null"];
                    };
                    readonly position: {
                        readonly description: "Game position in the match. Starts at 1";
                        readonly minimum: 1;
                        readonly title: "GamePosition";
                        readonly type: "integer";
                    };
                    readonly status: {
                        readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                        readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                        readonly title: "GameStatus";
                        readonly type: "string";
                    };
                    readonly teams: {
                        readonly deprecated: false;
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly description: "Team's data for a Game";
                            readonly properties: {
                                readonly bans: {
                                    readonly items: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly title: "LoLChampionIDs";
                                    readonly type: "array";
                                };
                                readonly baron_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLBaronKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly chemtech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLChemtechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly cloud_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLCloudDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly color: {
                                    readonly enum: readonly ["blue", "red"];
                                    readonly title: "LoLTeamColor";
                                    readonly type: "string";
                                    readonly description: "`blue` `red`";
                                };
                                readonly dragon_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDragonKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly elder_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLElderDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly first_baron: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first baron Nashor";
                                    readonly title: "LoLTeamGotFirstBaron";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_blood: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first blood";
                                    readonly title: "LoLTeamGotFirstBlood";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_dragon: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first dragon";
                                    readonly title: "LoLTeamGotFirstDragon";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_herald: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first herald";
                                    readonly title: "LoLTeamGotFirstHerald";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_inhibitor: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first inhibitor";
                                    readonly title: "LoLTeamGotFirstInhibitor";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_tower: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team got first tower";
                                    readonly title: "LoLTeamGotFirstTower";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly first_voidgrub: {
                                    readonly deprecated: false;
                                    readonly description: "Whether team killed the first voidgrub";
                                    readonly title: "LoLTeamGotFirstVoidgrub";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLGold";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly herald_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHeraldKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly hextech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHextechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly infernal_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInfernalDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly inhibitor_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInhibitorKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly mountain_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLMountainDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly ocean_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLOceanDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly player_ids: {
                                    readonly items: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly title: "PlayerIDs";
                                    readonly type: "array";
                                };
                                readonly team: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                };
                                readonly tower_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTowerKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly voidgrub_kills: {
                                    readonly deprecated: false;
                                    readonly description: "The number of voidgrubs killed by a team.";
                                    readonly maximum: 6;
                                    readonly minimum: 0;
                                    readonly title: "LoLVoidgrubKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["bans", "baron_kills", "chemtech_drake_kills", "cloud_drake_kills", "color", "dragon_kills", "elder_drake_kills", "first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "gold_earned", "herald_kills", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "mountain_drake_kills", "ocean_drake_kills", "player_ids", "team", "tower_kills", "voidgrub_kills"];
                            readonly title: "LoLGameTeam";
                            readonly type: "object";
                        };
                        readonly title: "LoLGameTeams";
                        readonly type: readonly ["array", "null"];
                    };
                    readonly winner: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["id", "type"];
                        readonly title: "GameWinner";
                        readonly type: "object";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "players", "position", "status", "teams", "winner", "winner_type"];
                readonly title: "LoLTeamLastGame";
                readonly type: "object";
            };
            readonly title: "LoLTeamLastGames";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTeamsTeamIdOrSlugStats: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly team_id_or_slug: {
                    readonly description: "A team ID or slug";
                    readonly oneOf: readonly [{
                        readonly description: "The ID of the team.";
                        readonly minimum: 1;
                        readonly title: "TeamID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TeamSlug";
                        readonly type: "string";
                    }];
                    readonly title: "TeamIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["team_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly games_count: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The amount of games used for the statistics.\n\nFor example if `?games_count=5`, it would show the statistics for the most recent 5 games played\n";
                };
                readonly side: {
                    readonly enum: readonly ["blue", "red"];
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly videogame_version: {
                    readonly description: "Possible values are `latest`, `all` or a specific version number.";
                    readonly oneOf: readonly [{
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    }, {
                        readonly enum: readonly ["all"];
                    }, {
                        readonly enum: readonly ["latest"];
                    }];
                    readonly title: "VideogameVersionOrAll";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly from: {
                    readonly format: "date";
                    readonly type: "string";
                    readonly examples: readonly ["2017-07-21"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter out 'from' date";
                };
                readonly to: {
                    readonly format: "date";
                    readonly type: "string";
                    readonly examples: readonly ["2017-07-21"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter out 'to' date";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly description: "Aggregated statistics for a team grouped by serie";
            readonly properties: {
                readonly acronym: {
                    readonly deprecated: false;
                    readonly title: "TeamAcronym";
                    readonly type: readonly ["string", "null"];
                };
                readonly id: {
                    readonly description: "The ID of the team.";
                    readonly minimum: 1;
                    readonly title: "TeamID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly deprecated: false;
                    readonly description: "URL of the team logo";
                    readonly format: "uri";
                    readonly title: "TeamImageURL";
                    readonly type: readonly ["string", "null"];
                };
                readonly last_games: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's last game";
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly complete: {
                                readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                readonly title: "GameComplete";
                                readonly type: "boolean";
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether historical data is available for the game";
                                readonly title: "GameDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly finished: {
                                readonly description: "Whether the game is finished";
                                readonly title: "GameIsFinished";
                                readonly type: "boolean";
                            };
                            readonly forfeit: {
                                readonly description: "Whether the game has been forfeited";
                                readonly title: "GameIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly id: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly length: {
                                readonly deprecated: false;
                                readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                readonly minimum: 0;
                                readonly title: "GameLength";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly match_id: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly players: {
                                readonly deprecated: false;
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "Player's data for a Game";
                                    readonly properties: {
                                        readonly assists: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAssistCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly champion: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly id: {
                                                    readonly minimum: 1;
                                                    readonly title: "LoLChampionID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly format: "uri";
                                                    readonly title: "LoLChampionImageURL";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly title: "LoLChampionName";
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["id", "image_url", "name"];
                                            readonly title: "BaseLoLChampion";
                                            readonly type: readonly ["object", "null"];
                                        };
                                        readonly creep_score: {
                                            readonly deprecated: false;
                                            readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                            readonly minimum: 0;
                                            readonly title: "LoLCreepScore";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cs_at_14: {
                                            readonly deprecated: false;
                                            readonly description: "The player's Creep Score (CS.) at 14minutes";
                                            readonly minimum: 0;
                                            readonly title: "LolCreepScoreAt14";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cs_diff_at_14: {
                                            readonly deprecated: false;
                                            readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                            readonly title: "LolCreepScoreDifferenceAt14";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly deaths: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDeathCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly flags: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly first_blood_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first blood assist";
                                                    readonly title: "LoLGotFirstBloodAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_blood_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first blood kill";
                                                    readonly title: "LoLGotFirstBloodKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_inhibitor_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first inhibitor assist";
                                                    readonly title: "LoLGotFirstInhibitorAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_inhibitor_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first inhibitor kill";
                                                    readonly title: "LoLGotFirstInhibitorKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_tower_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first tower assist";
                                                    readonly title: "LoLGotGirstTowerAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_tower_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first tower kill";
                                                    readonly title: "LoLGotFirstTowerKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                            };
                                            readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                            readonly title: "LoLFlags";
                                            readonly type: "object";
                                        };
                                        readonly game_id: {
                                            readonly description: "LoL game ID";
                                            readonly minimum: 1;
                                            readonly title: "LoLGameID";
                                            readonly type: "integer";
                                        };
                                        readonly gold_earned: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly gold_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerGoldErnedPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly gold_spent: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly items: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLItemID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly format: "uri";
                                                        readonly title: "LoLItemImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly is_trinket: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether item is a trinket";
                                                        readonly title: "LoLItemIsTrinket";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLItemName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                                readonly title: "BaseLoLItem";
                                                readonly type: "object";
                                            };
                                            readonly title: "BaseLoLItems";
                                            readonly type: "array";
                                        };
                                        readonly kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly kills_counters: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly inhibitors: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of inhibitors killed by the player";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLInhibitorCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions_enemy_jungle: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions_team_jungle: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionsTeamJungleCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly players: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of players killed";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly turrets: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of turrets killed";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLTurretCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly wards: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of wards killed by the player";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLWardCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                            readonly title: "LoLKillCounters";
                                            readonly type: "object";
                                        };
                                        readonly kills_series: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly double_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieDouble";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly penta_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSeriePenta";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly quadra_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieQuadra";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly triple_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieTriple";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                            readonly title: "LoLKillsSeries";
                                            readonly type: "object";
                                        };
                                        readonly largest_critical_strike: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestCriticalStrike";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly largest_killing_spree: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestKillingSpree";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly largest_multi_kill: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestMultiKill";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly level: {
                                            readonly deprecated: false;
                                            readonly minimum: 1;
                                            readonly title: "LoLChampionLevel";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly magic_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLMagicDamage";
                                            readonly type: "object";
                                        };
                                        readonly masteries: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLMasteryID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLMasteryName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "name"];
                                                readonly title: "LoLMastery";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLMasteries";
                                            readonly type: "array";
                                        };
                                        readonly minions_killed: {
                                            readonly deprecated: true;
                                            readonly description: "The player's Creep Score (CS.)";
                                            readonly minimum: 0;
                                            readonly title: "LoLMinionsKilled";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly opponent: {
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly oneOf: readonly [{
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly active: {
                                                        readonly description: "Whether player is active";
                                                        readonly title: "PlayerIsActive";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly age: {
                                                        readonly deprecated: false;
                                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly minimum: 0;
                                                        readonly title: "PlayerAge";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly birthday: {
                                                        readonly deprecated: false;
                                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly title: "PlayerBirthday";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly first_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "First name of the player. `null` if unknown";
                                                        readonly title: "PlayerFirstName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                                        readonly format: "uri";
                                                        readonly title: "PlayerImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly last_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "Last name of the player. `null` if unknown";
                                                        readonly title: "PlayerLastName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "PlayerModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Professional name of the player";
                                                        readonly title: "PlayerName";
                                                        readonly type: "string";
                                                    };
                                                    readonly nationality: {
                                                        readonly deprecated: false;
                                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                        readonly title: "PlayerNationality";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly role: {
                                                        readonly deprecated: false;
                                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                        readonly title: "PlayerRoleSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "PlayerSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                                readonly title: "BasePlayer";
                                                readonly type: "object";
                                            }, {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly acronym: {
                                                        readonly deprecated: false;
                                                        readonly title: "TeamAcronym";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL of the team logo";
                                                        readonly format: "uri";
                                                        readonly title: "TeamImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly location: {
                                                        readonly deprecated: false;
                                                        readonly description: "The team's organization location";
                                                        readonly title: "TeamLocation";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "TeamModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "The name of the team.";
                                                        readonly title: "TeamName";
                                                        readonly type: "string";
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "TeamSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                readonly title: "BaseTeam";
                                                readonly type: "object";
                                            }];
                                            readonly title: "BaseOpponent";
                                        };
                                        readonly physical_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLPhysicalDamage";
                                            readonly type: "object";
                                        };
                                        readonly player: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly active: {
                                                    readonly description: "Whether player is active";
                                                    readonly title: "PlayerIsActive";
                                                    readonly type: "boolean";
                                                };
                                                readonly age: {
                                                    readonly deprecated: false;
                                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                    readonly minimum: 0;
                                                    readonly title: "PlayerAge";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly birthday: {
                                                    readonly deprecated: false;
                                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                    readonly title: "PlayerBirthday";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly first_name: {
                                                    readonly deprecated: false;
                                                    readonly description: "First name of the player. `null` if unknown";
                                                    readonly title: "PlayerFirstName";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                                    readonly format: "uri";
                                                    readonly title: "PlayerImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly last_name: {
                                                    readonly deprecated: false;
                                                    readonly description: "Last name of the player. `null` if unknown";
                                                    readonly title: "PlayerLastName";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "PlayerModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "Professional name of the player";
                                                    readonly title: "PlayerName";
                                                    readonly type: "string";
                                                };
                                                readonly nationality: {
                                                    readonly deprecated: false;
                                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                    readonly title: "PlayerNationality";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly role: {
                                                    readonly deprecated: false;
                                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                    readonly title: "PlayerRoleSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "PlayerSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                            readonly title: "BasePlayer";
                                            readonly type: "object";
                                        };
                                        readonly player_id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                            readonly title: "LoLPlayerRole";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`adc` `jun` `mid` `sup` `top`";
                                        };
                                        readonly runes: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLRuneName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "name"];
                                                readonly title: "LoLRune";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLRunes";
                                            readonly type: "array";
                                        };
                                        readonly runes_reforged: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly primary_path: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly keystone: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: "object";
                                                        };
                                                        readonly lesser_runes: {
                                                            readonly items: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: "object";
                                                            };
                                                            readonly title: "LoLRunesReforged";
                                                            readonly type: "array";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                                    readonly title: "LoLPlayerPrimaryRunePath";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly secondary_path: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly lesser_runes: {
                                                            readonly items: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: "object";
                                                            };
                                                            readonly title: "LoLRunesReforged";
                                                            readonly type: "array";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                                    readonly title: "LoLPlayerSecondaryRunePath";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly shards: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly defense: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                        readonly flex: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                        readonly offense: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["defense", "flex", "offense"];
                                                    readonly title: "LoLPlayerRuneShards";
                                                    readonly type: "object";
                                                };
                                            };
                                            readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                            readonly title: "LoLPlayerRunesReforged";
                                            readonly type: "object";
                                        };
                                        readonly spells: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLSpellID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLSpellImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLSpellName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "LoLSpell";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLSpells";
                                            readonly type: "array";
                                        };
                                        readonly team: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly acronym: {
                                                    readonly deprecated: false;
                                                    readonly title: "TeamAcronym";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL of the team logo";
                                                    readonly format: "uri";
                                                    readonly title: "TeamImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly location: {
                                                    readonly deprecated: false;
                                                    readonly description: "The team's organization location";
                                                    readonly title: "TeamLocation";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TeamModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "The name of the team.";
                                                    readonly title: "TeamName";
                                                    readonly type: "string";
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TeamSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                            readonly title: "BaseTeam";
                                            readonly type: "object";
                                        };
                                        readonly total_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLTotalDamage";
                                            readonly type: "object";
                                        };
                                        readonly total_heal: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalHeal";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly total_time_crowd_control_dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalTimeCrowdControlDealt";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly total_units_healed: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalUnitsHealed";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly true_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLTrueDamage";
                                            readonly type: "object";
                                        };
                                        readonly wards: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly placed: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLWardsPlaced";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly sight_wards_bought_in_game: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLSightWards";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly vision_wards_bought_in_game: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLVisionWards";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                            readonly title: "LoLWards";
                                            readonly type: "object";
                                        };
                                        readonly wards_placed: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLWardsPlaced";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "cs_diff_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_percentage", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                                    readonly title: "LoLGamePlayer";
                                    readonly type: "object";
                                };
                                readonly title: "LoLGamePlayers";
                                readonly type: readonly ["array", "null"];
                            };
                            readonly position: {
                                readonly description: "Game position in the match. Starts at 1";
                                readonly minimum: 1;
                                readonly title: "GamePosition";
                                readonly type: "integer";
                            };
                            readonly status: {
                                readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                readonly title: "GameStatus";
                                readonly type: "string";
                            };
                            readonly teams: {
                                readonly deprecated: false;
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "Team's data for a Game";
                                    readonly properties: {
                                        readonly bans: {
                                            readonly items: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionID";
                                                readonly type: "integer";
                                            };
                                            readonly title: "LoLChampionIDs";
                                            readonly type: "array";
                                        };
                                        readonly baron_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLBaronKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly chemtech_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLChemtechDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cloud_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLCloudDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly color: {
                                            readonly enum: readonly ["blue", "red"];
                                            readonly title: "LoLTeamColor";
                                            readonly type: "string";
                                            readonly description: "`blue` `red`";
                                        };
                                        readonly dragon_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDragonKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly elder_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLElderDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly first_baron: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first baron Nashor";
                                            readonly title: "LoLTeamGotFirstBaron";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_blood: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first blood";
                                            readonly title: "LoLTeamGotFirstBlood";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_dragon: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first dragon";
                                            readonly title: "LoLTeamGotFirstDragon";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_herald: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first herald";
                                            readonly title: "LoLTeamGotFirstHerald";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_inhibitor: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first inhibitor";
                                            readonly title: "LoLTeamGotFirstInhibitor";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_tower: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first tower";
                                            readonly title: "LoLTeamGotFirstTower";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_voidgrub: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team killed the first voidgrub";
                                            readonly title: "LoLTeamGotFirstVoidgrub";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly gold_earned: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly herald_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLHeraldKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly hextech_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLHextechDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly infernal_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLInfernalDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly inhibitor_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLInhibitorKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly mountain_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLMountainDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly ocean_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLOceanDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly player_ids: {
                                            readonly items: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly title: "PlayerIDs";
                                            readonly type: "array";
                                        };
                                        readonly team: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly acronym: {
                                                    readonly deprecated: false;
                                                    readonly title: "TeamAcronym";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL of the team logo";
                                                    readonly format: "uri";
                                                    readonly title: "TeamImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly location: {
                                                    readonly deprecated: false;
                                                    readonly description: "The team's organization location";
                                                    readonly title: "TeamLocation";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TeamModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "The name of the team.";
                                                    readonly title: "TeamName";
                                                    readonly type: "string";
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TeamSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                            readonly title: "BaseTeam";
                                            readonly type: "object";
                                        };
                                        readonly tower_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTowerKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly voidgrub_kills: {
                                            readonly deprecated: false;
                                            readonly description: "The number of voidgrubs killed by a team.";
                                            readonly maximum: 6;
                                            readonly minimum: 0;
                                            readonly title: "LoLVoidgrubKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["bans", "baron_kills", "chemtech_drake_kills", "cloud_drake_kills", "color", "dragon_kills", "elder_drake_kills", "first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "gold_earned", "herald_kills", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "mountain_drake_kills", "ocean_drake_kills", "player_ids", "team", "tower_kills", "voidgrub_kills"];
                                    readonly title: "LoLGameTeam";
                                    readonly type: "object";
                                };
                                readonly title: "LoLGameTeams";
                                readonly type: readonly ["array", "null"];
                            };
                            readonly winner: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                };
                                readonly required: readonly ["id", "type"];
                                readonly title: "GameWinner";
                                readonly type: "object";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "players", "position", "status", "teams", "winner", "winner_type"];
                        readonly title: "LoLTeamLastGame";
                        readonly type: "object";
                    };
                    readonly title: "LoLTeamLastGames";
                    readonly type: "array";
                };
                readonly location: {
                    readonly deprecated: false;
                    readonly description: "The team's organization location";
                    readonly title: "TeamLocation";
                    readonly type: readonly ["string", "null"];
                };
                readonly modified_at: {
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "TeamModifiedAt";
                    readonly type: "string";
                };
                readonly most_banned: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's banned champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "name"];
                        readonly title: "LoLBannedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLBannedChampions";
                    readonly type: "array";
                };
                readonly most_banned_against: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's banned champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "name"];
                        readonly title: "LoLBannedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLBannedChampions";
                    readonly type: "array";
                };
                readonly most_picked: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's picked champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly games_lost: {
                                readonly description: "Number of games lost by the team on the given champion";
                                readonly type: "integer";
                            };
                            readonly games_won: {
                                readonly description: "Number of games won by the team on the given champion";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "games_lost", "games_won", "name"];
                        readonly title: "LoLPickedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLPickedChampions";
                    readonly type: "array";
                };
                readonly name: {
                    readonly description: "The name of the team.";
                    readonly title: "TeamName";
                    readonly type: "string";
                };
                readonly players: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly active: {
                                readonly description: "Whether player is active";
                                readonly title: "PlayerIsActive";
                                readonly type: "boolean";
                            };
                            readonly age: {
                                readonly deprecated: false;
                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly minimum: 0;
                                readonly title: "PlayerAge";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly birthday: {
                                readonly deprecated: false;
                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly title: "PlayerBirthday";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly first_name: {
                                readonly deprecated: false;
                                readonly description: "First name of the player. `null` if unknown";
                                readonly title: "PlayerFirstName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL to the photo of the player. `null` if not available.";
                                readonly format: "uri";
                                readonly title: "PlayerImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly last_name: {
                                readonly deprecated: false;
                                readonly description: "Last name of the player. `null` if unknown";
                                readonly title: "PlayerLastName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "PlayerModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "Professional name of the player";
                                readonly title: "PlayerName";
                                readonly type: "string";
                            };
                            readonly nationality: {
                                readonly deprecated: false;
                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                readonly title: "PlayerNationality";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                readonly title: "PlayerRoleSlug";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "PlayerSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                        readonly title: "BasePlayer";
                        readonly type: "object";
                    };
                    readonly title: "BasePlayers";
                    readonly type: "array";
                };
                readonly slug: {
                    readonly deprecated: false;
                    readonly minLength: 1;
                    readonly pattern: "^[a-z0-9_-]+$";
                    readonly title: "TeamSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly stats: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Team's statistics for a serie";
                        readonly properties: {
                            readonly averages: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly assists: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageAssists";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly baron_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageBaronKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly deaths: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDeaths";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly dragon_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageDragonKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly game_length: {
                                        readonly deprecated: false;
                                        readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                        readonly minimum: 0;
                                        readonly title: "GameLength";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly gold_earned: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageGoldEarned";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly herald_kill: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageHeraldKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly inhibitor_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageInhibitorKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly ratios: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly first_baron: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstBaron";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_blood: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstBlood";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_dragon: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstDragon";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_herald: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstHerald";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_inhibitor: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstInhibitor";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_tower: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioFirstTower";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly first_voidgrub: {
                                                readonly deprecated: false;
                                                readonly description: "Whether the team killed the first voidgrub.";
                                                readonly minimum: 0;
                                                readonly title: "LoLTeamFirstVoidgrubRatio";
                                                readonly type: readonly ["number", "null"];
                                            };
                                            readonly win: {
                                                readonly deprecated: false;
                                                readonly maximum: 1;
                                                readonly minimum: 0;
                                                readonly title: "LoLRatioWin";
                                                readonly type: readonly ["number", "null"];
                                            };
                                        };
                                        readonly required: readonly ["first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "win"];
                                        readonly title: "LoLTeamRatios";
                                        readonly type: "object";
                                    };
                                    readonly total_minions_killed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageMinionsKilled";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly tower_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageTowerKills";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly voidgrub_kills: {
                                        readonly deprecated: false;
                                        readonly description: "The number of voidgrubs killed by a team.";
                                        readonly maximum: 6;
                                        readonly minimum: 0;
                                        readonly title: "LoLTeamVoidgrubKillsAverage";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly wards_placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAverageWardsPlaced";
                                        readonly type: readonly ["number", "null"];
                                    };
                                };
                                readonly required: readonly ["assists", "baron_kills", "deaths", "dragon_kills", "game_length", "gold_earned", "herald_kill", "inhibitor_kills", "kills", "ratios", "total_minions_killed", "tower_kills", "voidgrub_kills", "wards_placed"];
                                readonly title: "LoLTeamAverages";
                                readonly type: "object";
                            };
                            readonly games_count: {
                                readonly deprecated: false;
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly serie: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly description: "A serie, an occurrence of a league event";
                                readonly properties: {
                                    readonly begin_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieBeginAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly end_at: {
                                        readonly deprecated: false;
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieEndAt";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly full_name: {
                                        readonly title: "SerieFullName";
                                        readonly type: "string";
                                    };
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "SerieID";
                                        readonly type: "integer";
                                    };
                                    readonly league: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "LeagueID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly format: "uri";
                                                readonly title: "LeagueImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "LeagueModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "LeagueName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9:_-]+$";
                                                readonly title: "LeagueSlug";
                                                readonly type: "string";
                                            };
                                            readonly url: {
                                                readonly deprecated: false;
                                                readonly format: "uri";
                                                readonly title: "LeagueURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                                        readonly title: "BaseLeague";
                                        readonly type: "object";
                                    };
                                    readonly league_id: {
                                        readonly minimum: 1;
                                        readonly title: "LeagueID";
                                        readonly type: "integer";
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "SerieModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly deprecated: false;
                                        readonly title: "SerieName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly season: {
                                        readonly deprecated: false;
                                        readonly title: "SerieSeason";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "SerieSlug";
                                        readonly type: "string";
                                    };
                                    readonly tournaments: {
                                        readonly items: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly begin_at: {
                                                    readonly deprecated: false;
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentBeginAt";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly detailed_stats: {
                                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                                    readonly title: "TournamentDetailedStats";
                                                    readonly type: "boolean";
                                                };
                                                readonly end_at: {
                                                    readonly deprecated: false;
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentEndAt";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly has_bracket: {
                                                    readonly description: "Whether the tournament has a bracket";
                                                    readonly title: "TournamentHasBracket";
                                                    readonly type: "boolean";
                                                };
                                                readonly id: {
                                                    readonly minimum: 1;
                                                    readonly title: "TournamentID";
                                                    readonly type: "integer";
                                                };
                                                readonly league_id: {
                                                    readonly minimum: 1;
                                                    readonly title: "LeagueID";
                                                    readonly type: "integer";
                                                };
                                                readonly live_supported: {
                                                    readonly description: "Whether live is supported";
                                                    readonly title: "TournamentLiveSupported";
                                                    readonly type: "boolean";
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TournamentModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly title: "TournamentName";
                                                    readonly type: "string";
                                                };
                                                readonly prizepool: {
                                                    readonly deprecated: false;
                                                    readonly title: "TournamentPrizepool";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly serie_id: {
                                                    readonly minimum: 1;
                                                    readonly title: "SerieID";
                                                    readonly type: "integer";
                                                };
                                                readonly slug: {
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TournamentSlug";
                                                    readonly type: "string";
                                                };
                                                readonly tier: {
                                                    readonly deprecated: false;
                                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                                    readonly title: "TournamentTier";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly winner_id: {
                                                    readonly anyOf: readonly [{
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    }, {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    }];
                                                    readonly deprecated: false;
                                                    readonly nullable: true;
                                                    readonly title: "OpponentID";
                                                };
                                                readonly winner_type: {
                                                    readonly deprecated: false;
                                                    readonly enum: readonly ["Player", "Team"];
                                                    readonly title: "OpponentType";
                                                    readonly type: readonly ["string", "null"];
                                                    readonly description: "`Player` `Team`";
                                                };
                                            };
                                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league_id", "live_supported", "modified_at", "name", "prizepool", "serie_id", "slug", "tier", "winner_id", "winner_type"];
                                            readonly title: "BaseTournament";
                                            readonly type: "object";
                                        };
                                        readonly title: "BaseTournaments";
                                        readonly type: "array";
                                    };
                                    readonly videogame: {
                                        readonly enum: readonly [{
                                            readonly id: 1;
                                            readonly name: "LoL";
                                            readonly slug: "league-of-legends";
                                        }, {
                                            readonly id: 3;
                                            readonly name: "Counter-Strike";
                                            readonly slug: "cs-go";
                                        }, {
                                            readonly id: 4;
                                            readonly name: "Dota 2";
                                            readonly slug: "dota-2";
                                        }, {
                                            readonly id: 14;
                                            readonly name: "Overwatch";
                                            readonly slug: "ow";
                                        }, {
                                            readonly id: 20;
                                            readonly name: "PUBG";
                                            readonly slug: "pubg";
                                        }, {
                                            readonly id: 22;
                                            readonly name: "Rocket League";
                                            readonly slug: "rl";
                                        }, {
                                            readonly id: 23;
                                            readonly name: "Call of Duty";
                                            readonly slug: "cod-mw";
                                        }, {
                                            readonly id: 24;
                                            readonly name: "Rainbow 6 Siege";
                                            readonly slug: "r6-siege";
                                        }, {
                                            readonly id: 25;
                                            readonly name: "EA Sports FC";
                                            readonly slug: "fifa";
                                        }, {
                                            readonly id: 26;
                                            readonly name: "Valorant";
                                            readonly slug: "valorant";
                                        }, {
                                            readonly id: 27;
                                            readonly name: "King of Glory";
                                            readonly slug: "kog";
                                        }, {
                                            readonly id: 28;
                                            readonly name: "LoL Wild Rift";
                                            readonly slug: "lol-wild-rift";
                                        }, {
                                            readonly id: 29;
                                            readonly name: "StarCraft 2";
                                            readonly slug: "starcraft-2";
                                        }, {
                                            readonly id: 30;
                                            readonly name: "StarCraft Brood War";
                                            readonly slug: "starcraft-brood-war";
                                        }, {
                                            readonly id: 31;
                                            readonly name: "eSoccer";
                                            readonly slug: "e-soccer";
                                        }, {
                                            readonly id: 32;
                                            readonly name: "eBasketball";
                                            readonly slug: "e-basketball";
                                        }, {
                                            readonly id: 33;
                                            readonly name: "eCricket";
                                            readonly slug: "e-cricket";
                                        }, {
                                            readonly id: 34;
                                            readonly name: "Mobile Legends: Bang Bang";
                                            readonly slug: "mlbb";
                                        }];
                                        readonly title: "CurrentVideogame";
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                                    };
                                    readonly videogame_title: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "VideogameTitleID";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "VideogameTitleName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "VideogameTitleSlug";
                                                readonly type: "string";
                                            };
                                            readonly videogame_id: {
                                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                                readonly title: "VideogameID";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                                        readonly title: "VideogameTitle";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly winner_id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly winner_type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                    readonly year: {
                                        readonly deprecated: false;
                                        readonly minimum: 2012;
                                        readonly title: "SerieYear";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league", "league_id", "modified_at", "name", "season", "slug", "tournaments", "videogame", "videogame_title", "winner_id", "winner_type", "year"];
                                readonly title: "Serie";
                                readonly type: "object";
                            };
                            readonly totals: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly assists: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLAssistCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly baron_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLBaronKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly blue_games_lost: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly blue_games_won: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly chemtech_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLChemtechDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly deaths: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDeathCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dragon_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDragonKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly elder_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLElderDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_lost: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_played: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly games_won: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly herald_kill: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLHeraldKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly hextech_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLHextechDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly infernal_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLInfernalDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly inhibitor_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLInhibitorKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly matches_lost: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly matches_played: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly matches_won: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "MatchCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly mountain_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLMountainDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly ocean_drake_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLOceanDrakeKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly red_games_lost: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly red_games_won: {
                                        readonly deprecated: false;
                                        readonly description: "Number of games";
                                        readonly minimum: 0;
                                        readonly title: "GameCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly tower_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLTowerKills";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly voidgrub_kills: {
                                        readonly deprecated: false;
                                        readonly description: "The number of voidgrubs killed by a team.";
                                        readonly minimum: 0;
                                        readonly title: "LoLTeamVoidgrubKillsTotal";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly wards_placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLWardsPlaced";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["assists", "baron_kills", "blue_games_lost", "blue_games_won", "chemtech_drake_kills", "deaths", "dragon_kills", "elder_drake_kills", "games_lost", "games_played", "games_won", "herald_kill", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "matches_lost", "matches_played", "matches_won", "mountain_drake_kills", "ocean_drake_kills", "red_games_lost", "red_games_won", "tower_kills", "voidgrub_kills", "wards_placed"];
                                readonly title: "LoLTeamStatsTotals";
                                readonly type: "object";
                            };
                        };
                        readonly required: readonly ["averages", "games_count", "serie", "totals"];
                        readonly title: "LoLTeamBySerieStat";
                        readonly type: "object";
                    };
                    readonly title: "LoLTeamBySerieStats";
                    readonly type: "array";
                };
                readonly total_stats: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly description: "Total Team's statistics";
                    readonly properties: {
                        readonly averages: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageAssists";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly baron_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageBaronKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDeaths";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly dragon_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDragonKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly game_length: {
                                    readonly deprecated: false;
                                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                    readonly minimum: 0;
                                    readonly title: "GameLength";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldEarned";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly herald_kill: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageHeraldKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly inhibitor_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageInhibitorKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly ratios: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly first_baron: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstBaron";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_blood: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstBlood";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_dragon: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstDragon";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_herald: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstHerald";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_inhibitor: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstInhibitor";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_tower: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstTower";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_voidgrub: {
                                            readonly deprecated: false;
                                            readonly description: "Whether the team killed the first voidgrub.";
                                            readonly minimum: 0;
                                            readonly title: "LoLTeamFirstVoidgrubRatio";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly win: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioWin";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "win"];
                                    readonly title: "LoLTeamRatios";
                                    readonly type: "object";
                                };
                                readonly total_minions_killed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageMinionsKilled";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly tower_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTowerKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly voidgrub_kills: {
                                    readonly deprecated: false;
                                    readonly description: "The number of voidgrubs killed by a team.";
                                    readonly maximum: 6;
                                    readonly minimum: 0;
                                    readonly title: "LoLTeamVoidgrubKillsAverage";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageWardsPlaced";
                                    readonly type: readonly ["number", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "baron_kills", "deaths", "dragon_kills", "game_length", "gold_earned", "herald_kill", "inhibitor_kills", "kills", "ratios", "total_minions_killed", "tower_kills", "voidgrub_kills", "wards_placed"];
                            readonly title: "LoLTeamAverages";
                            readonly type: "object";
                        };
                        readonly games_count: {
                            readonly deprecated: false;
                            readonly description: "Number of games";
                            readonly minimum: 0;
                            readonly title: "GameCount";
                            readonly type: readonly ["integer", "null"];
                        };
                        readonly totals: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAssistCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly baron_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLBaronKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly blue_games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly blue_games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly chemtech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLChemtechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDeathCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly dragon_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDragonKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly elder_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLElderDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_played: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly herald_kill: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHeraldKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly hextech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHextechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly infernal_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInfernalDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly inhibitor_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInhibitorKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_lost: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_played: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_won: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly mountain_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLMountainDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly ocean_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLOceanDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly red_games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly red_games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly tower_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTowerKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly voidgrub_kills: {
                                    readonly deprecated: false;
                                    readonly description: "The number of voidgrubs killed by a team.";
                                    readonly minimum: 0;
                                    readonly title: "LoLTeamVoidgrubKillsTotal";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLWardsPlaced";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "baron_kills", "blue_games_lost", "blue_games_won", "chemtech_drake_kills", "deaths", "dragon_kills", "elder_drake_kills", "games_lost", "games_played", "games_won", "herald_kill", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "matches_lost", "matches_played", "matches_won", "mountain_drake_kills", "ocean_drake_kills", "red_games_lost", "red_games_won", "tower_kills", "voidgrub_kills", "wards_placed"];
                            readonly title: "LoLTeamStatsTotals";
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["averages", "games_count", "totals"];
                    readonly title: "LoLTotalTeamStat";
                    readonly type: "object";
                };
            };
            readonly required: readonly ["acronym", "id", "image_url", "last_games", "location", "modified_at", "most_banned", "most_banned_against", "most_picked", "name", "players", "slug", "stats", "total_stats"];
            readonly title: "LoLStatsForTeam";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTournaments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the tournament is expected to have detailed statistics available";
                            readonly title: "TournamentDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly has_bracket: {
                            readonly description: "Whether the tournament has a bracket";
                            readonly title: "TournamentHasBracket";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly live_supported: {
                            readonly description: "Whether live is supported";
                            readonly title: "TournamentLiveSupported";
                            readonly type: "boolean";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly prizepool: {
                            readonly items: {
                                readonly title: "TournamentPrizepool";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly tier: {
                            readonly items: {
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                readonly title: "TournamentDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly has_bracket: {
                            readonly items: {
                                readonly description: "Whether the tournament has a bracket";
                                readonly title: "TournamentHasBracket";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly prizepool: {
                            readonly items: {
                                readonly title: "TournamentPrizepool";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly tier: {
                            readonly items: {
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "end_at", "-end_at", "has_bracket", "-has_bracket", "id", "-id", "modified_at", "-modified_at", "name", "-name", "prizepool", "-prizepool", "serie_id", "-serie_id", "slug", "-slug", "tier", "-tier", "winner_id", "-winner_id", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "TournamentName";
                            readonly type: "string";
                        };
                        readonly prizepool: {
                            readonly title: "TournamentPrizepool";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TournamentSlug";
                            readonly type: "string";
                        };
                        readonly tier: {
                            readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                            readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                            readonly title: "TournamentTier";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether the tournament is expected to have detailed statistics available";
                        readonly title: "TournamentDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly has_bracket: {
                        readonly description: "Whether the tournament has a bracket";
                        readonly title: "TournamentHasBracket";
                        readonly type: "boolean";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly live_supported: {
                        readonly description: "Whether live is supported";
                        readonly title: "TournamentLiveSupported";
                        readonly type: "boolean";
                    };
                    readonly matches: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the match offers full stats";
                                    readonly title: "MatchDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly draw: {
                                    readonly description: "Whether result of the match is a draw";
                                    readonly title: "MatchIsDraw";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly forfeit: {
                                    readonly description: "Whether match was forfeited";
                                    readonly title: "MatchIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly game_advantage: {
                                    readonly deprecated: false;
                                    readonly description: "ID of the opponent with a game advantage";
                                    readonly minimum: 1;
                                    readonly title: "GameAdvantageOpponent";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly live: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly opens_at: {
                                            readonly deprecated: false;
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "MatchLiveOpensAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly supported: {
                                            readonly description: "Whether live is supported";
                                            readonly title: "MatchLiveIsSupported";
                                            readonly type: "boolean";
                                        };
                                        readonly url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "MatchLiveURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["opens_at", "supported", "url"];
                                    readonly title: "MatchLive";
                                    readonly type: "object";
                                };
                                readonly match_type: {
                                    readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                    readonly title: "MatchType";
                                    readonly type: "string";
                                    readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "MatchName";
                                    readonly type: "string";
                                };
                                readonly number_of_games: {
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: "integer";
                                };
                                readonly original_scheduled_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchOriginalScheduledAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly rescheduled: {
                                    readonly deprecated: false;
                                    readonly description: "Whether match has been rescheduled";
                                    readonly title: "MatchIsRescheduled";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly scheduled_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchScheduledAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                    readonly title: "MatchSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly status: {
                                    readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                    readonly title: "MatchStatus";
                                    readonly type: "string";
                                    readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                                };
                                readonly streams_list: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly embed_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to embed in an iframe.";
                                                readonly format: "uri";
                                                readonly title: "StreamEmbedURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly language: {
                                                readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                                readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                                readonly title: "StreamLanguage";
                                                readonly type: "string";
                                            };
                                            readonly main: {
                                                readonly description: "Whether it is the main stream. Main stream is always official.";
                                                readonly title: "StreamIsMain";
                                                readonly type: "boolean";
                                            };
                                            readonly official: {
                                                readonly description: "Whether it is an official broadcast.";
                                                readonly title: "StreamIsOfficial";
                                                readonly type: "boolean";
                                            };
                                            readonly raw_url: {
                                                readonly description: "URL to the stream on host website.";
                                                readonly format: "uri";
                                                readonly title: "StreamURL";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                                        readonly title: "Stream";
                                        readonly type: "object";
                                    };
                                    readonly title: "StreamsList";
                                    readonly type: "array";
                                };
                                readonly tournament_id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "MatchWinnerType";
                                    readonly type: "string";
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "id", "live", "match_type", "modified_at", "name", "number_of_games", "original_scheduled_at", "rescheduled", "scheduled_at", "slug", "status", "streams_list", "tournament_id", "winner_id", "winner_type"];
                            readonly title: "BaseMatch";
                            readonly type: "object";
                        };
                        readonly title: "BaseMatches";
                        readonly type: "array";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "TournamentName";
                        readonly type: "string";
                    };
                    readonly prizepool: {
                        readonly deprecated: false;
                        readonly title: "TournamentPrizepool";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly serie: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly full_name: {
                                readonly title: "SerieFullName";
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly deprecated: false;
                                readonly title: "SerieName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly season: {
                                readonly deprecated: false;
                                readonly title: "SerieSeason";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                            readonly year: {
                                readonly deprecated: false;
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                        readonly title: "BaseSerie";
                        readonly type: "object";
                    };
                    readonly serie_id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TournamentSlug";
                        readonly type: "string";
                    };
                    readonly teams: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly acronym: {
                                    readonly deprecated: false;
                                    readonly title: "TeamAcronym";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL of the team logo";
                                    readonly format: "uri";
                                    readonly title: "TeamImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly location: {
                                    readonly deprecated: false;
                                    readonly description: "The team's organization location";
                                    readonly title: "TeamLocation";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TeamModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "The name of the team.";
                                    readonly title: "TeamName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TeamSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                            readonly title: "BaseTeam";
                            readonly type: "object";
                        };
                        readonly title: "BaseTeams";
                        readonly type: "array";
                    };
                    readonly tier: {
                        readonly deprecated: false;
                        readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                        readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                        readonly title: "TournamentTier";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league", "league_id", "live_supported", "matches", "modified_at", "name", "prizepool", "serie", "serie_id", "slug", "teams", "tier", "videogame", "videogame_title", "winner_id", "winner_type"];
                readonly title: "ShortTournament";
                readonly type: "object";
            };
            readonly title: "LoLShortTournaments";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTournamentsPast: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the tournament is expected to have detailed statistics available";
                            readonly title: "TournamentDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly has_bracket: {
                            readonly description: "Whether the tournament has a bracket";
                            readonly title: "TournamentHasBracket";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly live_supported: {
                            readonly description: "Whether live is supported";
                            readonly title: "TournamentLiveSupported";
                            readonly type: "boolean";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly prizepool: {
                            readonly items: {
                                readonly title: "TournamentPrizepool";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly tier: {
                            readonly items: {
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                readonly title: "TournamentDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly has_bracket: {
                            readonly items: {
                                readonly description: "Whether the tournament has a bracket";
                                readonly title: "TournamentHasBracket";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly prizepool: {
                            readonly items: {
                                readonly title: "TournamentPrizepool";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly tier: {
                            readonly items: {
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "end_at", "-end_at", "has_bracket", "-has_bracket", "id", "-id", "modified_at", "-modified_at", "name", "-name", "prizepool", "-prizepool", "serie_id", "-serie_id", "slug", "-slug", "tier", "-tier", "winner_id", "-winner_id", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "TournamentName";
                            readonly type: "string";
                        };
                        readonly prizepool: {
                            readonly title: "TournamentPrizepool";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TournamentSlug";
                            readonly type: "string";
                        };
                        readonly tier: {
                            readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                            readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                            readonly title: "TournamentTier";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether the tournament is expected to have detailed statistics available";
                        readonly title: "TournamentDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly has_bracket: {
                        readonly description: "Whether the tournament has a bracket";
                        readonly title: "TournamentHasBracket";
                        readonly type: "boolean";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly live_supported: {
                        readonly description: "Whether live is supported";
                        readonly title: "TournamentLiveSupported";
                        readonly type: "boolean";
                    };
                    readonly matches: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the match offers full stats";
                                    readonly title: "MatchDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly draw: {
                                    readonly description: "Whether result of the match is a draw";
                                    readonly title: "MatchIsDraw";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly forfeit: {
                                    readonly description: "Whether match was forfeited";
                                    readonly title: "MatchIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly game_advantage: {
                                    readonly deprecated: false;
                                    readonly description: "ID of the opponent with a game advantage";
                                    readonly minimum: 1;
                                    readonly title: "GameAdvantageOpponent";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly live: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly opens_at: {
                                            readonly deprecated: false;
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "MatchLiveOpensAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly supported: {
                                            readonly description: "Whether live is supported";
                                            readonly title: "MatchLiveIsSupported";
                                            readonly type: "boolean";
                                        };
                                        readonly url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "MatchLiveURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["opens_at", "supported", "url"];
                                    readonly title: "MatchLive";
                                    readonly type: "object";
                                };
                                readonly match_type: {
                                    readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                    readonly title: "MatchType";
                                    readonly type: "string";
                                    readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "MatchName";
                                    readonly type: "string";
                                };
                                readonly number_of_games: {
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: "integer";
                                };
                                readonly original_scheduled_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchOriginalScheduledAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly rescheduled: {
                                    readonly deprecated: false;
                                    readonly description: "Whether match has been rescheduled";
                                    readonly title: "MatchIsRescheduled";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly scheduled_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchScheduledAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                    readonly title: "MatchSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly status: {
                                    readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                    readonly title: "MatchStatus";
                                    readonly type: "string";
                                    readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                                };
                                readonly streams_list: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly embed_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to embed in an iframe.";
                                                readonly format: "uri";
                                                readonly title: "StreamEmbedURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly language: {
                                                readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                                readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                                readonly title: "StreamLanguage";
                                                readonly type: "string";
                                            };
                                            readonly main: {
                                                readonly description: "Whether it is the main stream. Main stream is always official.";
                                                readonly title: "StreamIsMain";
                                                readonly type: "boolean";
                                            };
                                            readonly official: {
                                                readonly description: "Whether it is an official broadcast.";
                                                readonly title: "StreamIsOfficial";
                                                readonly type: "boolean";
                                            };
                                            readonly raw_url: {
                                                readonly description: "URL to the stream on host website.";
                                                readonly format: "uri";
                                                readonly title: "StreamURL";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                                        readonly title: "Stream";
                                        readonly type: "object";
                                    };
                                    readonly title: "StreamsList";
                                    readonly type: "array";
                                };
                                readonly tournament_id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "MatchWinnerType";
                                    readonly type: "string";
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "id", "live", "match_type", "modified_at", "name", "number_of_games", "original_scheduled_at", "rescheduled", "scheduled_at", "slug", "status", "streams_list", "tournament_id", "winner_id", "winner_type"];
                            readonly title: "BaseMatch";
                            readonly type: "object";
                        };
                        readonly title: "BaseMatches";
                        readonly type: "array";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "TournamentName";
                        readonly type: "string";
                    };
                    readonly prizepool: {
                        readonly deprecated: false;
                        readonly title: "TournamentPrizepool";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly serie: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly full_name: {
                                readonly title: "SerieFullName";
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly deprecated: false;
                                readonly title: "SerieName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly season: {
                                readonly deprecated: false;
                                readonly title: "SerieSeason";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                            readonly year: {
                                readonly deprecated: false;
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                        readonly title: "BaseSerie";
                        readonly type: "object";
                    };
                    readonly serie_id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TournamentSlug";
                        readonly type: "string";
                    };
                    readonly teams: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly acronym: {
                                    readonly deprecated: false;
                                    readonly title: "TeamAcronym";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL of the team logo";
                                    readonly format: "uri";
                                    readonly title: "TeamImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly location: {
                                    readonly deprecated: false;
                                    readonly description: "The team's organization location";
                                    readonly title: "TeamLocation";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TeamModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "The name of the team.";
                                    readonly title: "TeamName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TeamSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                            readonly title: "BaseTeam";
                            readonly type: "object";
                        };
                        readonly title: "BaseTeams";
                        readonly type: "array";
                    };
                    readonly tier: {
                        readonly deprecated: false;
                        readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                        readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                        readonly title: "TournamentTier";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league", "league_id", "live_supported", "matches", "modified_at", "name", "prizepool", "serie", "serie_id", "slug", "teams", "tier", "videogame", "videogame_title", "winner_id", "winner_type"];
                readonly title: "ShortTournament";
                readonly type: "object";
            };
            readonly title: "LoLShortTournaments";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTournamentsRunning: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the tournament is expected to have detailed statistics available";
                            readonly title: "TournamentDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly has_bracket: {
                            readonly description: "Whether the tournament has a bracket";
                            readonly title: "TournamentHasBracket";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly live_supported: {
                            readonly description: "Whether live is supported";
                            readonly title: "TournamentLiveSupported";
                            readonly type: "boolean";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly prizepool: {
                            readonly items: {
                                readonly title: "TournamentPrizepool";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly tier: {
                            readonly items: {
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                readonly title: "TournamentDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly has_bracket: {
                            readonly items: {
                                readonly description: "Whether the tournament has a bracket";
                                readonly title: "TournamentHasBracket";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly prizepool: {
                            readonly items: {
                                readonly title: "TournamentPrizepool";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly tier: {
                            readonly items: {
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "end_at", "-end_at", "has_bracket", "-has_bracket", "id", "-id", "modified_at", "-modified_at", "name", "-name", "prizepool", "-prizepool", "serie_id", "-serie_id", "slug", "-slug", "tier", "-tier", "winner_id", "-winner_id", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "TournamentName";
                            readonly type: "string";
                        };
                        readonly prizepool: {
                            readonly title: "TournamentPrizepool";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TournamentSlug";
                            readonly type: "string";
                        };
                        readonly tier: {
                            readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                            readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                            readonly title: "TournamentTier";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether the tournament is expected to have detailed statistics available";
                        readonly title: "TournamentDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly has_bracket: {
                        readonly description: "Whether the tournament has a bracket";
                        readonly title: "TournamentHasBracket";
                        readonly type: "boolean";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly live_supported: {
                        readonly description: "Whether live is supported";
                        readonly title: "TournamentLiveSupported";
                        readonly type: "boolean";
                    };
                    readonly matches: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the match offers full stats";
                                    readonly title: "MatchDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly draw: {
                                    readonly description: "Whether result of the match is a draw";
                                    readonly title: "MatchIsDraw";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly forfeit: {
                                    readonly description: "Whether match was forfeited";
                                    readonly title: "MatchIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly game_advantage: {
                                    readonly deprecated: false;
                                    readonly description: "ID of the opponent with a game advantage";
                                    readonly minimum: 1;
                                    readonly title: "GameAdvantageOpponent";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly live: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly opens_at: {
                                            readonly deprecated: false;
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "MatchLiveOpensAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly supported: {
                                            readonly description: "Whether live is supported";
                                            readonly title: "MatchLiveIsSupported";
                                            readonly type: "boolean";
                                        };
                                        readonly url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "MatchLiveURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["opens_at", "supported", "url"];
                                    readonly title: "MatchLive";
                                    readonly type: "object";
                                };
                                readonly match_type: {
                                    readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                    readonly title: "MatchType";
                                    readonly type: "string";
                                    readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "MatchName";
                                    readonly type: "string";
                                };
                                readonly number_of_games: {
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: "integer";
                                };
                                readonly original_scheduled_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchOriginalScheduledAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly rescheduled: {
                                    readonly deprecated: false;
                                    readonly description: "Whether match has been rescheduled";
                                    readonly title: "MatchIsRescheduled";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly scheduled_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchScheduledAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                    readonly title: "MatchSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly status: {
                                    readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                    readonly title: "MatchStatus";
                                    readonly type: "string";
                                    readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                                };
                                readonly streams_list: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly embed_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to embed in an iframe.";
                                                readonly format: "uri";
                                                readonly title: "StreamEmbedURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly language: {
                                                readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                                readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                                readonly title: "StreamLanguage";
                                                readonly type: "string";
                                            };
                                            readonly main: {
                                                readonly description: "Whether it is the main stream. Main stream is always official.";
                                                readonly title: "StreamIsMain";
                                                readonly type: "boolean";
                                            };
                                            readonly official: {
                                                readonly description: "Whether it is an official broadcast.";
                                                readonly title: "StreamIsOfficial";
                                                readonly type: "boolean";
                                            };
                                            readonly raw_url: {
                                                readonly description: "URL to the stream on host website.";
                                                readonly format: "uri";
                                                readonly title: "StreamURL";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                                        readonly title: "Stream";
                                        readonly type: "object";
                                    };
                                    readonly title: "StreamsList";
                                    readonly type: "array";
                                };
                                readonly tournament_id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "MatchWinnerType";
                                    readonly type: "string";
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "id", "live", "match_type", "modified_at", "name", "number_of_games", "original_scheduled_at", "rescheduled", "scheduled_at", "slug", "status", "streams_list", "tournament_id", "winner_id", "winner_type"];
                            readonly title: "BaseMatch";
                            readonly type: "object";
                        };
                        readonly title: "BaseMatches";
                        readonly type: "array";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "TournamentName";
                        readonly type: "string";
                    };
                    readonly prizepool: {
                        readonly deprecated: false;
                        readonly title: "TournamentPrizepool";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly serie: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly full_name: {
                                readonly title: "SerieFullName";
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly deprecated: false;
                                readonly title: "SerieName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly season: {
                                readonly deprecated: false;
                                readonly title: "SerieSeason";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                            readonly year: {
                                readonly deprecated: false;
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                        readonly title: "BaseSerie";
                        readonly type: "object";
                    };
                    readonly serie_id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TournamentSlug";
                        readonly type: "string";
                    };
                    readonly teams: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly acronym: {
                                    readonly deprecated: false;
                                    readonly title: "TeamAcronym";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL of the team logo";
                                    readonly format: "uri";
                                    readonly title: "TeamImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly location: {
                                    readonly deprecated: false;
                                    readonly description: "The team's organization location";
                                    readonly title: "TeamLocation";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TeamModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "The name of the team.";
                                    readonly title: "TeamName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TeamSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                            readonly title: "BaseTeam";
                            readonly type: "object";
                        };
                        readonly title: "BaseTeams";
                        readonly type: "array";
                    };
                    readonly tier: {
                        readonly deprecated: false;
                        readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                        readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                        readonly title: "TournamentTier";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league", "league_id", "live_supported", "matches", "modified_at", "name", "prizepool", "serie", "serie_id", "slug", "teams", "tier", "videogame", "videogame_title", "winner_id", "winner_type"];
                readonly title: "ShortTournament";
                readonly type: "object";
            };
            readonly title: "LoLShortTournaments";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTournamentsTournamentIdOrSlugPlayersPlayerIdOrSlugStats: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly tournament_id_or_slug: {
                    readonly description: "A tournament ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TournamentSlug";
                        readonly type: "string";
                    }];
                    readonly title: "TournamentIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly player_id_or_slug: {
                    readonly description: "A player ID or slug";
                    readonly oneOf: readonly [{
                        readonly description: "ID of the player";
                        readonly minimum: 1;
                        readonly title: "PlayerID";
                        readonly type: "integer";
                    }, {
                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "PlayerSlug";
                        readonly type: "string";
                    }];
                    readonly title: "PlayerIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["tournament_id_or_slug", "player_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly games_count: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The amount of games used for the statistics.\n\nFor example if `?games_count=5`, it would show the statistics for the most recent 5 games played\n";
                };
                readonly side: {
                    readonly enum: readonly ["blue", "red"];
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly videogame_version: {
                    readonly description: "Possible values are `latest`, `all` or a specific version number.";
                    readonly oneOf: readonly [{
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    }, {
                        readonly enum: readonly ["all"];
                    }, {
                        readonly enum: readonly ["latest"];
                    }];
                    readonly title: "VideogameVersionOrAll";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly description: "Player's aggregated statistics for a tournament";
            readonly properties: {
                readonly active: {
                    readonly description: "Whether player is active";
                    readonly title: "PlayerIsActive";
                    readonly type: "boolean";
                };
                readonly age: {
                    readonly deprecated: false;
                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                    readonly minimum: 0;
                    readonly title: "PlayerAge";
                    readonly type: readonly ["number", "null"];
                };
                readonly birthday: {
                    readonly deprecated: false;
                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                    readonly title: "PlayerBirthday";
                    readonly type: readonly ["string", "null"];
                };
                readonly current_team: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly properties: {
                        readonly acronym: {
                            readonly deprecated: false;
                            readonly title: "TeamAcronym";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly id: {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        };
                        readonly image_url: {
                            readonly deprecated: false;
                            readonly description: "URL of the team logo";
                            readonly format: "uri";
                            readonly title: "TeamImageURL";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly location: {
                            readonly deprecated: false;
                            readonly description: "The team's organization location";
                            readonly title: "TeamLocation";
                            readonly type: readonly ["string", "null"];
                        };
                        readonly modified_at: {
                            readonly format: "date-time";
                            readonly minLength: 1;
                            readonly title: "TeamModifiedAt";
                            readonly type: "string";
                        };
                        readonly name: {
                            readonly description: "The name of the team.";
                            readonly title: "TeamName";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly deprecated: false;
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TeamSlug";
                            readonly type: readonly ["string", "null"];
                        };
                    };
                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                    readonly title: "BaseTeam";
                    readonly type: readonly ["object", "null"];
                };
                readonly current_videogame: {
                    readonly deprecated: false;
                    readonly enum: readonly [{
                        readonly id: 1;
                        readonly name: "LoL";
                        readonly slug: "league-of-legends";
                    }, {
                        readonly id: 3;
                        readonly name: "Counter-Strike";
                        readonly slug: "cs-go";
                    }, {
                        readonly id: 4;
                        readonly name: "Dota 2";
                        readonly slug: "dota-2";
                    }, {
                        readonly id: 14;
                        readonly name: "Overwatch";
                        readonly slug: "ow";
                    }, {
                        readonly id: 20;
                        readonly name: "PUBG";
                        readonly slug: "pubg";
                    }, {
                        readonly id: 22;
                        readonly name: "Rocket League";
                        readonly slug: "rl";
                    }, {
                        readonly id: 23;
                        readonly name: "Call of Duty";
                        readonly slug: "cod-mw";
                    }, {
                        readonly id: 24;
                        readonly name: "Rainbow 6 Siege";
                        readonly slug: "r6-siege";
                    }, {
                        readonly id: 25;
                        readonly name: "EA Sports FC";
                        readonly slug: "fifa";
                    }, {
                        readonly id: 26;
                        readonly name: "Valorant";
                        readonly slug: "valorant";
                    }, {
                        readonly id: 27;
                        readonly name: "King of Glory";
                        readonly slug: "kog";
                    }, {
                        readonly id: 28;
                        readonly name: "LoL Wild Rift";
                        readonly slug: "lol-wild-rift";
                    }, {
                        readonly id: 29;
                        readonly name: "StarCraft 2";
                        readonly slug: "starcraft-2";
                    }, {
                        readonly id: 30;
                        readonly name: "StarCraft Brood War";
                        readonly slug: "starcraft-brood-war";
                    }, {
                        readonly id: 31;
                        readonly name: "eSoccer";
                        readonly slug: "e-soccer";
                    }, {
                        readonly id: 32;
                        readonly name: "eBasketball";
                        readonly slug: "e-basketball";
                    }, {
                        readonly id: 33;
                        readonly name: "eCricket";
                        readonly slug: "e-cricket";
                    }, {
                        readonly id: 34;
                        readonly name: "Mobile Legends: Bang Bang";
                        readonly slug: "mlbb";
                    }];
                    readonly title: "CurrentVideogame";
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                    readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                };
                readonly favorite_champions: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A player's most used champion";
                        readonly properties: {
                            readonly champion: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly armor: {
                                        readonly minimum: 0;
                                        readonly title: "LoLArmor";
                                        readonly type: "number";
                                    };
                                    readonly armorperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLArmorPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly attackdamage: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackDamage";
                                        readonly type: "number";
                                    };
                                    readonly attackdamageperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackDamagePerLevel";
                                        readonly type: "number";
                                    };
                                    readonly attackrange: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackRange";
                                        readonly type: "number";
                                    };
                                    readonly attackspeedoffset: {
                                        readonly deprecated: false;
                                        readonly title: "LoLAttackSpeedOffset";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly attackspeedperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLAttackSpeedPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly big_image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionBigImageURL";
                                        readonly type: "string";
                                    };
                                    readonly crit: {
                                        readonly minimum: 0;
                                        readonly title: "LoLCrit";
                                        readonly type: "number";
                                    };
                                    readonly critperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLCritPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly hp: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHP";
                                        readonly type: "number";
                                    };
                                    readonly hpperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly hpregen: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPRegen";
                                        readonly type: "number";
                                    };
                                    readonly hpregenperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLHPRegenPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionImageURL";
                                        readonly type: "string";
                                    };
                                    readonly movespeed: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMoveSpeed";
                                        readonly type: "number";
                                    };
                                    readonly mp: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMP";
                                        readonly type: "number";
                                    };
                                    readonly mpperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly mpregen: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPRegen";
                                        readonly type: "number";
                                    };
                                    readonly mpregenperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMPRegenPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly name: {
                                        readonly title: "LoLChampionName";
                                        readonly type: "string";
                                    };
                                    readonly spellblock: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMagicResist";
                                        readonly type: "number";
                                    };
                                    readonly spellblockperlevel: {
                                        readonly minimum: 0;
                                        readonly title: "LoLMagicResistPerLevel";
                                        readonly type: "number";
                                    };
                                    readonly videogame_versions: {
                                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                                        readonly items: {
                                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                                            readonly title: "VideogameVersion";
                                            readonly type: "string";
                                        };
                                        readonly title: "VideogameVersions";
                                        readonly type: "array";
                                    };
                                };
                                readonly required: readonly ["armor", "armorperlevel", "attackdamage", "attackdamageperlevel", "attackrange", "attackspeedoffset", "attackspeedperlevel", "big_image_url", "crit", "critperlevel", "hp", "hpperlevel", "hpregen", "hpregenperlevel", "id", "image_url", "movespeed", "mp", "mpperlevel", "mpregen", "mpregenperlevel", "name", "spellblock", "spellblockperlevel", "videogame_versions"];
                                readonly title: "LoLChampion";
                                readonly type: "object";
                            };
                            readonly games_count: {
                                readonly description: "Number of games";
                                readonly minimum: 0;
                                readonly title: "GameCount";
                                readonly type: "integer";
                            };
                            readonly games_lost: {
                                readonly description: "Number of games lost by the player on the given champion";
                                readonly type: "integer";
                            };
                            readonly games_won: {
                                readonly description: "Number of games won by the player on the given champion";
                                readonly type: "integer";
                            };
                            readonly most_used_items: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "An item used by a champion";
                                    readonly properties: {
                                        readonly count: {
                                            readonly minimum: 0;
                                            readonly title: "LoLUsedItemCount";
                                            readonly type: "integer";
                                        };
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLItemID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLItemName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["count", "id", "name"];
                                    readonly title: "LoLUsedItem";
                                    readonly type: "object";
                                };
                                readonly title: "LoLUsedItems";
                                readonly type: "array";
                            };
                        };
                        readonly required: readonly ["champion", "games_count", "games_lost", "games_won", "most_used_items"];
                        readonly title: "LoLFavoriteChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLFavoriteChampions";
                    readonly type: "array";
                };
                readonly first_name: {
                    readonly deprecated: false;
                    readonly description: "First name of the player. `null` if unknown";
                    readonly title: "PlayerFirstName";
                    readonly type: readonly ["string", "null"];
                };
                readonly id: {
                    readonly description: "ID of the player";
                    readonly minimum: 1;
                    readonly title: "PlayerID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly deprecated: false;
                    readonly description: "URL to the photo of the player. `null` if not available.";
                    readonly format: "uri";
                    readonly title: "PlayerImageURL";
                    readonly type: readonly ["string", "null"];
                };
                readonly last_games: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "Player's data for a Game";
                        readonly properties: {
                            readonly assists: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLAssistCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly champion: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly minimum: 1;
                                        readonly title: "LoLChampionID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly format: "uri";
                                        readonly title: "LoLChampionImageURL";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly title: "LoLChampionName";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["id", "image_url", "name"];
                                readonly title: "BaseLoLChampion";
                                readonly type: readonly ["object", "null"];
                            };
                            readonly creep_score: {
                                readonly deprecated: false;
                                readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                readonly minimum: 0;
                                readonly title: "LoLCreepScore";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly cs_at_14: {
                                readonly deprecated: false;
                                readonly description: "The player's Creep Score (CS.) at 14minutes";
                                readonly minimum: 0;
                                readonly title: "LolCreepScoreAt14";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly deaths: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLDeathCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly flags: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly first_blood_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first blood assist";
                                        readonly title: "LoLGotFirstBloodAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_blood_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first blood kill";
                                        readonly title: "LoLGotFirstBloodKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_inhibitor_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first inhibitor assist";
                                        readonly title: "LoLGotFirstInhibitorAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_inhibitor_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first inhibitor kill";
                                        readonly title: "LoLGotFirstInhibitorKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_tower_assist: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first tower assist";
                                        readonly title: "LoLGotGirstTowerAssist";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly first_tower_kill: {
                                        readonly deprecated: false;
                                        readonly description: "Whether player got first tower kill";
                                        readonly title: "LoLGotFirstTowerKill";
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                };
                                readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                readonly title: "LoLFlags";
                                readonly type: "object";
                            };
                            readonly game_id: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly gold_earned: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly gold_spent: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly items: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLItemID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LoLItemImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly is_trinket: {
                                            readonly deprecated: false;
                                            readonly description: "Whether item is a trinket";
                                            readonly title: "LoLItemIsTrinket";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly name: {
                                            readonly title: "LoLItemName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                    readonly title: "BaseLoLItem";
                                    readonly type: "object";
                                };
                                readonly title: "BaseLoLItems";
                                readonly type: "array";
                            };
                            readonly kills: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLKillCount";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly kills_counters: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly inhibitors: {
                                        readonly deprecated: false;
                                        readonly description: "Number of inhibitors killed by the player";
                                        readonly minimum: 0;
                                        readonly title: "LoLInhibitorCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions_enemy_jungle: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly neutral_minions_team_jungle: {
                                        readonly deprecated: false;
                                        readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                        readonly minimum: 0;
                                        readonly title: "LoLNeutralMinionsTeamJungleCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly players: {
                                        readonly deprecated: false;
                                        readonly description: "Number of players killed";
                                        readonly minimum: 0;
                                        readonly title: "LoLPlayerCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly turrets: {
                                        readonly deprecated: false;
                                        readonly description: "Number of turrets killed";
                                        readonly minimum: 0;
                                        readonly title: "LoLTurretCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly wards: {
                                        readonly deprecated: false;
                                        readonly description: "Number of wards killed by the player";
                                        readonly minimum: 0;
                                        readonly title: "LoLWardCount";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                readonly title: "LoLKillCounters";
                                readonly type: "object";
                            };
                            readonly kills_series: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly double_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieDouble";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly penta_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSeriePenta";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly quadra_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieQuadra";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly triple_kills: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLKillsSerieTriple";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                readonly title: "LoLKillsSeries";
                                readonly type: "object";
                            };
                            readonly largest_critical_strike: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestCriticalStrike";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly largest_killing_spree: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestKillingSpree";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly largest_multi_kill: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLLargestMultiKill";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly level: {
                                readonly deprecated: false;
                                readonly minimum: 1;
                                readonly title: "LoLChampionLevel";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly magic_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly masteries: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLMasteryID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLMasteryName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly title: "LoLMastery";
                                    readonly type: "object";
                                };
                                readonly title: "LoLMasteries";
                                readonly type: "array";
                            };
                            readonly minions_killed: {
                                readonly deprecated: true;
                                readonly description: "The player's Creep Score (CS.)";
                                readonly minimum: 0;
                                readonly title: "LoLMinionsKilled";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly opponent: {
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly oneOf: readonly [{
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly active: {
                                            readonly description: "Whether player is active";
                                            readonly title: "PlayerIsActive";
                                            readonly type: "boolean";
                                        };
                                        readonly age: {
                                            readonly deprecated: false;
                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly minimum: 0;
                                            readonly title: "PlayerAge";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly birthday: {
                                            readonly deprecated: false;
                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                            readonly title: "PlayerBirthday";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly first_name: {
                                            readonly deprecated: false;
                                            readonly description: "First name of the player. `null` if unknown";
                                            readonly title: "PlayerFirstName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                            readonly format: "uri";
                                            readonly title: "PlayerImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly last_name: {
                                            readonly deprecated: false;
                                            readonly description: "Last name of the player. `null` if unknown";
                                            readonly title: "PlayerLastName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "PlayerModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "Professional name of the player";
                                            readonly title: "PlayerName";
                                            readonly type: "string";
                                        };
                                        readonly nationality: {
                                            readonly deprecated: false;
                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                            readonly title: "PlayerNationality";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                            readonly title: "PlayerRoleSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "PlayerSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                    readonly title: "BasePlayer";
                                    readonly type: "object";
                                }, {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly acronym: {
                                            readonly deprecated: false;
                                            readonly title: "TeamAcronym";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly id: {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly description: "URL of the team logo";
                                            readonly format: "uri";
                                            readonly title: "TeamImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly location: {
                                            readonly deprecated: false;
                                            readonly description: "The team's organization location";
                                            readonly title: "TeamLocation";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "TeamModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly description: "The name of the team.";
                                            readonly title: "TeamName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly deprecated: false;
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "TeamSlug";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                    readonly title: "BaseTeam";
                                    readonly type: "object";
                                }];
                                readonly title: "BaseOpponent";
                            };
                            readonly physical_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly player: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly active: {
                                        readonly description: "Whether player is active";
                                        readonly title: "PlayerIsActive";
                                        readonly type: "boolean";
                                    };
                                    readonly age: {
                                        readonly deprecated: false;
                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly minimum: 0;
                                        readonly title: "PlayerAge";
                                        readonly type: readonly ["number", "null"];
                                    };
                                    readonly birthday: {
                                        readonly deprecated: false;
                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                        readonly title: "PlayerBirthday";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly first_name: {
                                        readonly deprecated: false;
                                        readonly description: "First name of the player. `null` if unknown";
                                        readonly title: "PlayerFirstName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                        readonly format: "uri";
                                        readonly title: "PlayerImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly last_name: {
                                        readonly deprecated: false;
                                        readonly description: "Last name of the player. `null` if unknown";
                                        readonly title: "PlayerLastName";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "PlayerModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "Professional name of the player";
                                        readonly title: "PlayerName";
                                        readonly type: "string";
                                    };
                                    readonly nationality: {
                                        readonly deprecated: false;
                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                        readonly title: "PlayerNationality";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly role: {
                                        readonly deprecated: false;
                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                        readonly title: "PlayerRoleSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "PlayerSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                readonly title: "BasePlayer";
                                readonly type: "object";
                            };
                            readonly player_id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                readonly title: "LoLPlayerRole";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`adc` `jun` `mid` `sup` `top`";
                            };
                            readonly runes: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLRuneID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "LoLRuneName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly title: "LoLRune";
                                    readonly type: "object";
                                };
                                readonly title: "LoLRunes";
                                readonly type: "array";
                            };
                            readonly runes_reforged: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly primary_path: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly description: "ID of the rune";
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneReforgedID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly description: "URL to an image of the rune";
                                                readonly format: "uri";
                                                readonly title: "LoLRuneReforgedImageURL";
                                                readonly type: "string";
                                            };
                                            readonly keystone: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: "object";
                                            };
                                            readonly lesser_runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunesReforged";
                                                readonly type: "array";
                                            };
                                            readonly name: {
                                                readonly description: "Name of the rune path";
                                                readonly title: "LoLRuneReforgedName";
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                readonly title: "LoLRuneReforgedType";
                                                readonly type: "string";
                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                        readonly title: "LoLPlayerPrimaryRunePath";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly secondary_path: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly id: {
                                                readonly description: "ID of the rune";
                                                readonly minimum: 1;
                                                readonly title: "LoLRuneReforgedID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly description: "URL to an image of the rune";
                                                readonly format: "uri";
                                                readonly title: "LoLRuneReforgedImageURL";
                                                readonly type: "string";
                                            };
                                            readonly lesser_runes: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "name", "type"];
                                                    readonly title: "LoLRuneReforged";
                                                    readonly type: "object";
                                                };
                                                readonly title: "LoLRunesReforged";
                                                readonly type: "array";
                                            };
                                            readonly name: {
                                                readonly description: "Name of the rune path";
                                                readonly title: "LoLRuneReforgedName";
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                readonly title: "LoLRuneReforgedType";
                                                readonly type: "string";
                                                readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                            };
                                        };
                                        readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                        readonly title: "LoLPlayerSecondaryRunePath";
                                        readonly type: readonly ["object", "null"];
                                    };
                                    readonly shards: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly defense: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly flex: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                            readonly offense: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly description: "ID of the rune";
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneReforgedID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly description: "URL to an image of the rune";
                                                        readonly format: "uri";
                                                        readonly title: "LoLRuneReforgedImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Name of the rune path";
                                                        readonly title: "LoLRuneReforgedName";
                                                        readonly type: "string";
                                                    };
                                                    readonly type: {
                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                        readonly title: "LoLRuneReforgedType";
                                                        readonly type: "string";
                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                readonly title: "LoLRuneReforged";
                                                readonly type: readonly ["object", "null"];
                                            };
                                        };
                                        readonly required: readonly ["defense", "flex", "offense"];
                                        readonly title: "LoLPlayerRuneShards";
                                        readonly type: "object";
                                    };
                                };
                                readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                readonly title: "LoLPlayerRunesReforged";
                                readonly type: "object";
                            };
                            readonly spells: {
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LoLSpellID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly format: "uri";
                                            readonly title: "LoLSpellImageURL";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LoLSpellName";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "name"];
                                    readonly title: "LoLSpell";
                                    readonly type: "object";
                                };
                                readonly title: "LoLSpells";
                                readonly type: "array";
                            };
                            readonly team: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly acronym: {
                                        readonly deprecated: false;
                                        readonly title: "TeamAcronym";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly id: {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    };
                                    readonly image_url: {
                                        readonly deprecated: false;
                                        readonly description: "URL of the team logo";
                                        readonly format: "uri";
                                        readonly title: "TeamImageURL";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly location: {
                                        readonly deprecated: false;
                                        readonly description: "The team's organization location";
                                        readonly title: "TeamLocation";
                                        readonly type: readonly ["string", "null"];
                                    };
                                    readonly modified_at: {
                                        readonly format: "date-time";
                                        readonly minLength: 1;
                                        readonly title: "TeamModifiedAt";
                                        readonly type: "string";
                                    };
                                    readonly name: {
                                        readonly description: "The name of the team.";
                                        readonly title: "TeamName";
                                        readonly type: "string";
                                    };
                                    readonly slug: {
                                        readonly deprecated: false;
                                        readonly minLength: 1;
                                        readonly pattern: "^[a-z0-9_-]+$";
                                        readonly title: "TeamSlug";
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                readonly title: "BaseTeam";
                                readonly type: "object";
                            };
                            readonly total_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly total_heal: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalHeal";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly total_time_crowd_control_dealt: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalTimeCrowdControlDealt";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly total_units_healed: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLTotalUnitsHealed";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly true_damage: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly dealt: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly dealt_to_champions: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly taken: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLDamage";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["dealt", "dealt_to_champions", "taken"];
                                readonly title: "LoLGamePlayerDamageForStats";
                                readonly type: "object";
                            };
                            readonly wards: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly placed: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLWardsPlaced";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly sight_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLSightWards";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                    readonly vision_wards_bought_in_game: {
                                        readonly deprecated: false;
                                        readonly minimum: 0;
                                        readonly title: "LoLVisionWards";
                                        readonly type: readonly ["integer", "null"];
                                    };
                                };
                                readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                readonly title: "LoLWards";
                                readonly type: "object";
                            };
                            readonly wards_placed: {
                                readonly deprecated: false;
                                readonly minimum: 0;
                                readonly title: "LoLWardsPlaced";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                        readonly title: "LoLGamePlayerForStats";
                        readonly type: "object";
                    };
                    readonly title: "LoLGamePlayersForStats";
                    readonly type: "array";
                };
                readonly last_name: {
                    readonly deprecated: false;
                    readonly description: "Last name of the player. `null` if unknown";
                    readonly title: "PlayerLastName";
                    readonly type: readonly ["string", "null"];
                };
                readonly modified_at: {
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "PlayerModifiedAt";
                    readonly type: "string";
                };
                readonly name: {
                    readonly description: "Professional name of the player";
                    readonly title: "PlayerName";
                    readonly type: "string";
                };
                readonly nationality: {
                    readonly deprecated: false;
                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                    readonly title: "PlayerNationality";
                    readonly type: readonly ["string", "null"];
                };
                readonly role: {
                    readonly deprecated: false;
                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                    readonly title: "PlayerRoleSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly slug: {
                    readonly deprecated: false;
                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                    readonly minLength: 1;
                    readonly pattern: "^[a-z0-9_-]+$";
                    readonly title: "PlayerSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly stats: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly description: "Player's statistics for a tournament";
                    readonly properties: {
                        readonly averages: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageAssists";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly cs_at_14: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LolAverageCreepScoreAt14";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly cs_diff_at_14: {
                                    readonly deprecated: false;
                                    readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                    readonly title: "LolAverageCreepScoreDifferenceAt14";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDeaths";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldEarned";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_percentage: {
                                    readonly deprecated: false;
                                    readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                    readonly maximum: 100;
                                    readonly minimum: 0;
                                    readonly title: "LoLPlayerGoldErnedPercentage";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly gold_spent: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldSpent";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly kill_counters: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly inhibitors: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageInhibitorKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageNeutralMinionKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions_enemy_jungle: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageMinionsEnemyJungleKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly neutral_minions_team_jungle: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageMinionsTeamJungleKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly players: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly turrets: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageTurretKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly wards: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageWardKills";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                    readonly title: "LoLAverageKillCounters";
                                    readonly type: "object";
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly magic_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageMagicDamage";
                                    readonly type: "object";
                                };
                                readonly minions_killed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageMinionsKilled";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly physical_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAveragePhysicalDamage";
                                    readonly type: "object";
                                };
                                readonly total_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageTotalDamage";
                                    readonly type: "object";
                                };
                                readonly total_heal: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalHeal";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly total_time_crowd_control_dealt: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalTimeCrowdControlDealt";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly total_units_healed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTotalUnitsHealed";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly true_damage: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealt";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampions";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly dealt_to_champions_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly taken: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAverageDamageTaken";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                    readonly title: "LoLAverageTrueDamage";
                                    readonly type: "object";
                                };
                                readonly vision_wards_bought_in_game: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageVisionWardsBoughtInGame";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageWardsPlaced";
                                    readonly type: readonly ["number", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "cs_at_14", "cs_diff_at_14", "deaths", "gold_earned", "gold_percentage", "gold_spent", "kill_counters", "kills", "magic_damage", "minions_killed", "physical_damage", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "vision_wards_bought_in_game", "wards_placed"];
                            readonly title: "LoLPlayerAverages";
                            readonly type: "object";
                        };
                        readonly games_count: {
                            readonly deprecated: false;
                            readonly description: "Number of games";
                            readonly minimum: 0;
                            readonly title: "GameCount";
                            readonly type: readonly ["integer", "null"];
                        };
                        readonly totals: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAssistCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDeathCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_played: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kill_counters: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly inhibitors: {
                                            readonly deprecated: false;
                                            readonly description: "Number of inhibitors killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLInhibitorCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly turrets: {
                                            readonly deprecated: false;
                                            readonly description: "Number of turrets killed";
                                            readonly minimum: 0;
                                            readonly title: "LoLTurretCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly wards: {
                                            readonly deprecated: false;
                                            readonly description: "Number of wards killed by the player";
                                            readonly minimum: 0;
                                            readonly title: "LoLWardCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["inhibitors", "turrets", "wards"];
                                    readonly title: "LoLPlayerTotalKillCounters";
                                    readonly type: "object";
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills_series: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly double_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieDouble";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly penta_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSeriePenta";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly quadra_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieQuadra";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly triple_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillsSerieTriple";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                    readonly title: "LoLKillsSeries";
                                    readonly type: "object";
                                };
                                readonly matches_lost: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_played: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_won: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLWardsPlaced";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "deaths", "games_lost", "games_played", "games_won", "kill_counters", "kills", "kills_series", "matches_lost", "matches_played", "matches_won", "wards_placed"];
                            readonly title: "LoLPlayerStatsTotals";
                            readonly type: "object";
                        };
                        readonly tournament: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                    readonly title: "TournamentDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly expected_roster: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly players: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly active: {
                                                            readonly description: "Whether player is active";
                                                            readonly title: "PlayerIsActive";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly age: {
                                                            readonly deprecated: false;
                                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                            readonly minimum: 0;
                                                            readonly title: "PlayerAge";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly birthday: {
                                                            readonly deprecated: false;
                                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                            readonly title: "PlayerBirthday";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly first_name: {
                                                            readonly deprecated: false;
                                                            readonly description: "First name of the player. `null` if unknown";
                                                            readonly title: "PlayerFirstName";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly id: {
                                                            readonly description: "ID of the player";
                                                            readonly minimum: 1;
                                                            readonly title: "PlayerID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly deprecated: false;
                                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                                            readonly format: "uri";
                                                            readonly title: "PlayerImageURL";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly last_name: {
                                                            readonly deprecated: false;
                                                            readonly description: "Last name of the player. `null` if unknown";
                                                            readonly title: "PlayerLastName";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly modified_at: {
                                                            readonly format: "date-time";
                                                            readonly minLength: 1;
                                                            readonly title: "PlayerModifiedAt";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Professional name of the player";
                                                            readonly title: "PlayerName";
                                                            readonly type: "string";
                                                        };
                                                        readonly nationality: {
                                                            readonly deprecated: false;
                                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                            readonly title: "PlayerNationality";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly role: {
                                                            readonly deprecated: false;
                                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                            readonly title: "PlayerRoleSlug";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly slug: {
                                                            readonly deprecated: false;
                                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                            readonly minLength: 1;
                                                            readonly pattern: "^[a-z0-9_-]+$";
                                                            readonly title: "PlayerSlug";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                                    readonly title: "BasePlayer";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BasePlayers";
                                                readonly type: "array";
                                            };
                                            readonly team: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly acronym: {
                                                        readonly deprecated: false;
                                                        readonly title: "TeamAcronym";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL of the team logo";
                                                        readonly format: "uri";
                                                        readonly title: "TeamImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly location: {
                                                        readonly deprecated: false;
                                                        readonly description: "The team's organization location";
                                                        readonly title: "TeamLocation";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "TeamModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "The name of the team.";
                                                        readonly title: "TeamName";
                                                        readonly type: "string";
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "TeamSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                readonly title: "BaseTeam";
                                                readonly type: "object";
                                            };
                                        };
                                        readonly required: readonly ["players", "team"];
                                        readonly title: "TournamentRosterItem";
                                        readonly type: "object";
                                    };
                                    readonly title: "TournamentRosterItems";
                                    readonly type: "array";
                                };
                                readonly has_bracket: {
                                    readonly description: "Whether the tournament has a bracket";
                                    readonly title: "TournamentHasBracket";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly league: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LeagueID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LeagueImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "LeagueModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LeagueName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9:_-]+$";
                                            readonly title: "LeagueSlug";
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LeagueURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                                    readonly title: "BaseLeague";
                                    readonly type: "object";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly live_supported: {
                                    readonly description: "Whether live is supported";
                                    readonly title: "TournamentLiveSupported";
                                    readonly type: "boolean";
                                };
                                readonly matches: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly begin_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchBeginAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly detailed_stats: {
                                                readonly description: "Whether the match offers full stats";
                                                readonly title: "MatchDetailedStats";
                                                readonly type: "boolean";
                                            };
                                            readonly draw: {
                                                readonly description: "Whether result of the match is a draw";
                                                readonly title: "MatchIsDraw";
                                                readonly type: "boolean";
                                            };
                                            readonly end_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchEndAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly forfeit: {
                                                readonly description: "Whether match was forfeited";
                                                readonly title: "MatchIsForfeit";
                                                readonly type: "boolean";
                                            };
                                            readonly game_advantage: {
                                                readonly deprecated: false;
                                                readonly description: "ID of the opponent with a game advantage";
                                                readonly minimum: 1;
                                                readonly title: "GameAdvantageOpponent";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "MatchID";
                                                readonly type: "integer";
                                            };
                                            readonly live: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly opens_at: {
                                                        readonly deprecated: false;
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "MatchLiveOpensAt";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly supported: {
                                                        readonly description: "Whether live is supported";
                                                        readonly title: "MatchLiveIsSupported";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly url: {
                                                        readonly deprecated: false;
                                                        readonly format: "uri";
                                                        readonly title: "MatchLiveURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["opens_at", "supported", "url"];
                                                readonly title: "MatchLive";
                                                readonly type: "object";
                                            };
                                            readonly match_type: {
                                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                                readonly title: "MatchType";
                                                readonly type: "string";
                                                readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "MatchName";
                                                readonly type: "string";
                                            };
                                            readonly number_of_games: {
                                                readonly description: "Number of games";
                                                readonly minimum: 0;
                                                readonly title: "GameCount";
                                                readonly type: "integer";
                                            };
                                            readonly original_scheduled_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchOriginalScheduledAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly rescheduled: {
                                                readonly deprecated: false;
                                                readonly description: "Whether match has been rescheduled";
                                                readonly title: "MatchIsRescheduled";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly scheduled_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchScheduledAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                                readonly title: "MatchSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly status: {
                                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                                readonly title: "MatchStatus";
                                                readonly type: "string";
                                                readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                                            };
                                            readonly streams_list: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly embed_url: {
                                                            readonly deprecated: false;
                                                            readonly description: "URL to embed in an iframe.";
                                                            readonly format: "uri";
                                                            readonly title: "StreamEmbedURL";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly language: {
                                                            readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                                            readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                                            readonly title: "StreamLanguage";
                                                            readonly type: "string";
                                                        };
                                                        readonly main: {
                                                            readonly description: "Whether it is the main stream. Main stream is always official.";
                                                            readonly title: "StreamIsMain";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly official: {
                                                            readonly description: "Whether it is an official broadcast.";
                                                            readonly title: "StreamIsOfficial";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly raw_url: {
                                                            readonly description: "URL to the stream on host website.";
                                                            readonly format: "uri";
                                                            readonly title: "StreamURL";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                                                    readonly title: "Stream";
                                                    readonly type: "object";
                                                };
                                                readonly title: "StreamsList";
                                                readonly type: "array";
                                            };
                                            readonly tournament_id: {
                                                readonly minimum: 1;
                                                readonly title: "TournamentID";
                                                readonly type: "integer";
                                            };
                                            readonly winner_id: {
                                                readonly anyOf: readonly [{
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                }, {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                }];
                                                readonly deprecated: false;
                                                readonly nullable: true;
                                                readonly title: "OpponentID";
                                            };
                                            readonly winner_type: {
                                                readonly enum: readonly ["Player", "Team"];
                                                readonly title: "MatchWinnerType";
                                                readonly type: "string";
                                                readonly description: "`Player` `Team`";
                                            };
                                        };
                                        readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "id", "live", "match_type", "modified_at", "name", "number_of_games", "original_scheduled_at", "rescheduled", "scheduled_at", "slug", "status", "streams_list", "tournament_id", "winner_id", "winner_type"];
                                        readonly title: "BaseMatch";
                                        readonly type: "object";
                                    };
                                    readonly title: "BaseMatches";
                                    readonly type: "array";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "TournamentName";
                                    readonly type: "string";
                                };
                                readonly prizepool: {
                                    readonly deprecated: false;
                                    readonly title: "TournamentPrizepool";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly serie: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly begin_at: {
                                            readonly deprecated: false;
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "SerieBeginAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly end_at: {
                                            readonly deprecated: false;
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "SerieEndAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly full_name: {
                                            readonly title: "SerieFullName";
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "SerieID";
                                            readonly type: "integer";
                                        };
                                        readonly league_id: {
                                            readonly minimum: 1;
                                            readonly title: "LeagueID";
                                            readonly type: "integer";
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "SerieModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly deprecated: false;
                                            readonly title: "SerieName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly season: {
                                            readonly deprecated: false;
                                            readonly title: "SerieSeason";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "SerieSlug";
                                            readonly type: "string";
                                        };
                                        readonly winner_id: {
                                            readonly anyOf: readonly [{
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            }, {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            }];
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly title: "OpponentID";
                                        };
                                        readonly winner_type: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`Player` `Team`";
                                        };
                                        readonly year: {
                                            readonly deprecated: false;
                                            readonly minimum: 2012;
                                            readonly title: "SerieYear";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                                    readonly title: "BaseSerie";
                                    readonly type: "object";
                                };
                                readonly serie_id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TournamentSlug";
                                    readonly type: "string";
                                };
                                readonly teams: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly acronym: {
                                                readonly deprecated: false;
                                                readonly title: "TeamAcronym";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL of the team logo";
                                                readonly format: "uri";
                                                readonly title: "TeamImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly location: {
                                                readonly deprecated: false;
                                                readonly description: "The team's organization location";
                                                readonly title: "TeamLocation";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TeamModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "The name of the team.";
                                                readonly title: "TeamName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TeamSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                        readonly title: "BaseTeam";
                                        readonly type: "object";
                                    };
                                    readonly title: "BaseTeams";
                                    readonly type: "array";
                                };
                                readonly tier: {
                                    readonly deprecated: false;
                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                    readonly title: "TournamentTier";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly videogame: {
                                    readonly enum: readonly [{
                                        readonly id: 1;
                                        readonly name: "LoL";
                                        readonly slug: "league-of-legends";
                                    }, {
                                        readonly id: 3;
                                        readonly name: "Counter-Strike";
                                        readonly slug: "cs-go";
                                    }, {
                                        readonly id: 4;
                                        readonly name: "Dota 2";
                                        readonly slug: "dota-2";
                                    }, {
                                        readonly id: 14;
                                        readonly name: "Overwatch";
                                        readonly slug: "ow";
                                    }, {
                                        readonly id: 20;
                                        readonly name: "PUBG";
                                        readonly slug: "pubg";
                                    }, {
                                        readonly id: 22;
                                        readonly name: "Rocket League";
                                        readonly slug: "rl";
                                    }, {
                                        readonly id: 23;
                                        readonly name: "Call of Duty";
                                        readonly slug: "cod-mw";
                                    }, {
                                        readonly id: 24;
                                        readonly name: "Rainbow 6 Siege";
                                        readonly slug: "r6-siege";
                                    }, {
                                        readonly id: 25;
                                        readonly name: "EA Sports FC";
                                        readonly slug: "fifa";
                                    }, {
                                        readonly id: 26;
                                        readonly name: "Valorant";
                                        readonly slug: "valorant";
                                    }, {
                                        readonly id: 27;
                                        readonly name: "King of Glory";
                                        readonly slug: "kog";
                                    }, {
                                        readonly id: 28;
                                        readonly name: "LoL Wild Rift";
                                        readonly slug: "lol-wild-rift";
                                    }, {
                                        readonly id: 29;
                                        readonly name: "StarCraft 2";
                                        readonly slug: "starcraft-2";
                                    }, {
                                        readonly id: 30;
                                        readonly name: "StarCraft Brood War";
                                        readonly slug: "starcraft-brood-war";
                                    }, {
                                        readonly id: 31;
                                        readonly name: "eSoccer";
                                        readonly slug: "e-soccer";
                                    }, {
                                        readonly id: 32;
                                        readonly name: "eBasketball";
                                        readonly slug: "e-basketball";
                                    }, {
                                        readonly id: 33;
                                        readonly name: "eCricket";
                                        readonly slug: "e-cricket";
                                    }, {
                                        readonly id: 34;
                                        readonly name: "Mobile Legends: Bang Bang";
                                        readonly slug: "mlbb";
                                    }];
                                    readonly title: "CurrentVideogame";
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                    readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                                };
                                readonly videogame_title: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "VideogameTitleID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "VideogameTitleName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "VideogameTitleSlug";
                                            readonly type: "string";
                                        };
                                        readonly videogame_id: {
                                            readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                            readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                            readonly title: "VideogameID";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "name", "slug", "videogame_id"];
                                    readonly title: "VideogameTitle";
                                    readonly type: readonly ["object", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "expected_roster", "has_bracket", "id", "league", "league_id", "live_supported", "matches", "modified_at", "name", "prizepool", "serie", "serie_id", "slug", "teams", "tier", "videogame", "videogame_title", "winner_id", "winner_type"];
                            readonly title: "Tournament";
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["averages", "games_count", "totals", "tournament"];
                    readonly title: "LoLPlayerByTournamentStat";
                    readonly type: "object";
                };
                readonly teams: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly acronym: {
                                readonly deprecated: false;
                                readonly title: "TeamAcronym";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "The ID of the team.";
                                readonly minimum: 1;
                                readonly title: "TeamID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL of the team logo";
                                readonly format: "uri";
                                readonly title: "TeamImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly location: {
                                readonly deprecated: false;
                                readonly description: "The team's organization location";
                                readonly title: "TeamLocation";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TeamModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "The name of the team.";
                                readonly title: "TeamName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TeamSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                        readonly title: "BaseTeam";
                        readonly type: "object";
                    };
                    readonly title: "BaseTeams";
                    readonly type: "array";
                };
            };
            readonly required: readonly ["active", "age", "birthday", "current_team", "current_videogame", "favorite_champions", "first_name", "id", "image_url", "last_games", "last_name", "modified_at", "name", "nationality", "role", "slug", "stats", "teams"];
            readonly title: "LoLStatsForPlayerByTournament";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTournamentsTournamentIdOrSlugTeamsTeamIdOrSlugStats: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly tournament_id_or_slug: {
                    readonly description: "A tournament ID or slug";
                    readonly oneOf: readonly [{
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TournamentSlug";
                        readonly type: "string";
                    }];
                    readonly title: "TournamentIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly team_id_or_slug: {
                    readonly description: "A team ID or slug";
                    readonly oneOf: readonly [{
                        readonly description: "The ID of the team.";
                        readonly minimum: 1;
                        readonly title: "TeamID";
                        readonly type: "integer";
                    }, {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TeamSlug";
                        readonly type: "string";
                    }];
                    readonly title: "TeamIDOrSlug";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["tournament_id_or_slug", "team_id_or_slug"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly games_count: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The amount of games used for the statistics.\n\nFor example if `?games_count=5`, it would show the statistics for the most recent 5 games played\n";
                };
                readonly side: {
                    readonly enum: readonly ["blue", "red"];
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly videogame_version: {
                    readonly description: "Possible values are `latest`, `all` or a specific version number.";
                    readonly oneOf: readonly [{
                        readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                        readonly title: "VideogameVersion";
                        readonly type: "string";
                    }, {
                        readonly enum: readonly ["all"];
                    }, {
                        readonly enum: readonly ["latest"];
                    }];
                    readonly title: "VideogameVersionOrAll";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly additionalProperties: false;
            readonly deprecated: false;
            readonly description: "Team's aggregated statistics for a tournament";
            readonly properties: {
                readonly acronym: {
                    readonly deprecated: false;
                    readonly title: "TeamAcronym";
                    readonly type: readonly ["string", "null"];
                };
                readonly id: {
                    readonly description: "The ID of the team.";
                    readonly minimum: 1;
                    readonly title: "TeamID";
                    readonly type: "integer";
                };
                readonly image_url: {
                    readonly deprecated: false;
                    readonly description: "URL of the team logo";
                    readonly format: "uri";
                    readonly title: "TeamImageURL";
                    readonly type: readonly ["string", "null"];
                };
                readonly last_games: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's last game";
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly description: "The game begin time, UTC.\n`null` when the game status is `not_started`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly complete: {
                                readonly description: "Whether When `true`, the game statistics are complete and will not be updated again";
                                readonly title: "GameComplete";
                                readonly type: "boolean";
                            };
                            readonly detailed_stats: {
                                readonly description: "Whether historical data is available for the game";
                                readonly title: "GameDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly description: "The game end time, UTC.\n`null` when the game status is not `finished`";
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "GameEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly finished: {
                                readonly description: "Whether the game is finished";
                                readonly title: "GameIsFinished";
                                readonly type: "boolean";
                            };
                            readonly forfeit: {
                                readonly description: "Whether the game has been forfeited";
                                readonly title: "GameIsForfeit";
                                readonly type: "boolean";
                            };
                            readonly id: {
                                readonly description: "LoL game ID";
                                readonly minimum: 1;
                                readonly title: "LoLGameID";
                                readonly type: "integer";
                            };
                            readonly length: {
                                readonly deprecated: false;
                                readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                readonly minimum: 0;
                                readonly title: "GameLength";
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly match_id: {
                                readonly minimum: 1;
                                readonly title: "MatchID";
                                readonly type: "integer";
                            };
                            readonly players: {
                                readonly deprecated: false;
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "Player's data for a Game";
                                    readonly properties: {
                                        readonly assists: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLAssistCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly champion: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly id: {
                                                    readonly minimum: 1;
                                                    readonly title: "LoLChampionID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly format: "uri";
                                                    readonly title: "LoLChampionImageURL";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly title: "LoLChampionName";
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["id", "image_url", "name"];
                                            readonly title: "BaseLoLChampion";
                                            readonly type: readonly ["object", "null"];
                                        };
                                        readonly creep_score: {
                                            readonly deprecated: false;
                                            readonly description: "The player's Creep Score (CS.)\n\nNB: Creep Score can be different that the number of minions killed because neutral monsters can give more score.";
                                            readonly minimum: 0;
                                            readonly title: "LoLCreepScore";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cs_at_14: {
                                            readonly deprecated: false;
                                            readonly description: "The player's Creep Score (CS.) at 14minutes";
                                            readonly minimum: 0;
                                            readonly title: "LolCreepScoreAt14";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cs_diff_at_14: {
                                            readonly deprecated: false;
                                            readonly description: "Player CS difference compared to their lane opponent at the 14th minute in-game";
                                            readonly title: "LolCreepScoreDifferenceAt14";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly deaths: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDeathCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly flags: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly first_blood_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first blood assist";
                                                    readonly title: "LoLGotFirstBloodAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_blood_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first blood kill";
                                                    readonly title: "LoLGotFirstBloodKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_inhibitor_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first inhibitor assist";
                                                    readonly title: "LoLGotFirstInhibitorAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_inhibitor_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first inhibitor kill";
                                                    readonly title: "LoLGotFirstInhibitorKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_tower_assist: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first tower assist";
                                                    readonly title: "LoLGotGirstTowerAssist";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly first_tower_kill: {
                                                    readonly deprecated: false;
                                                    readonly description: "Whether player got first tower kill";
                                                    readonly title: "LoLGotFirstTowerKill";
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                            };
                                            readonly required: readonly ["first_blood_assist", "first_blood_kill", "first_inhibitor_assist", "first_inhibitor_kill", "first_tower_assist", "first_tower_kill"];
                                            readonly title: "LoLFlags";
                                            readonly type: "object";
                                        };
                                        readonly game_id: {
                                            readonly description: "LoL game ID";
                                            readonly minimum: 1;
                                            readonly title: "LoLGameID";
                                            readonly type: "integer";
                                        };
                                        readonly gold_earned: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly gold_percentage: {
                                            readonly deprecated: false;
                                            readonly description: "Percentage of gold the player had compared to the total gold of the team";
                                            readonly maximum: 100;
                                            readonly minimum: 0;
                                            readonly title: "LoLPlayerGoldErnedPercentage";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly gold_spent: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly items: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLItemID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly format: "uri";
                                                        readonly title: "LoLItemImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly is_trinket: {
                                                        readonly deprecated: false;
                                                        readonly description: "Whether item is a trinket";
                                                        readonly title: "LoLItemIsTrinket";
                                                        readonly type: readonly ["boolean", "null"];
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLItemName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "is_trinket", "name"];
                                                readonly title: "BaseLoLItem";
                                                readonly type: "object";
                                            };
                                            readonly title: "BaseLoLItems";
                                            readonly type: "array";
                                        };
                                        readonly kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly kills_counters: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly inhibitors: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of inhibitors killed by the player";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLInhibitorCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions_enemy_jungle: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions in the player's enemy jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionsEnemyJungleCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly neutral_minions_team_jungle: {
                                                    readonly deprecated: false;
                                                    readonly description: "Creep Score awarded for killing neutral minions in the player's team jungle.\n\nNB: This can be different than the actual number of neutral minions killed.";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLNeutralMinionsTeamJungleCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly players: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of players killed";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly turrets: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of turrets killed";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLTurretCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly wards: {
                                                    readonly deprecated: false;
                                                    readonly description: "Number of wards killed by the player";
                                                    readonly minimum: 0;
                                                    readonly title: "LoLWardCount";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["inhibitors", "neutral_minions", "neutral_minions_enemy_jungle", "neutral_minions_team_jungle", "players", "turrets", "wards"];
                                            readonly title: "LoLKillCounters";
                                            readonly type: "object";
                                        };
                                        readonly kills_series: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly double_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieDouble";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly penta_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSeriePenta";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly quadra_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieQuadra";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly triple_kills: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLKillsSerieTriple";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["double_kills", "penta_kills", "quadra_kills", "triple_kills"];
                                            readonly title: "LoLKillsSeries";
                                            readonly type: "object";
                                        };
                                        readonly largest_critical_strike: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestCriticalStrike";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly largest_killing_spree: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestKillingSpree";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly largest_multi_kill: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLLargestMultiKill";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly level: {
                                            readonly deprecated: false;
                                            readonly minimum: 1;
                                            readonly title: "LoLChampionLevel";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly magic_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLMagicDamage";
                                            readonly type: "object";
                                        };
                                        readonly masteries: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLMasteryID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLMasteryName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "name"];
                                                readonly title: "LoLMastery";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLMasteries";
                                            readonly type: "array";
                                        };
                                        readonly minions_killed: {
                                            readonly deprecated: true;
                                            readonly description: "The player's Creep Score (CS.)";
                                            readonly minimum: 0;
                                            readonly title: "LoLMinionsKilled";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly opponent: {
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly oneOf: readonly [{
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly active: {
                                                        readonly description: "Whether player is active";
                                                        readonly title: "PlayerIsActive";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly age: {
                                                        readonly deprecated: false;
                                                        readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly minimum: 0;
                                                        readonly title: "PlayerAge";
                                                        readonly type: readonly ["number", "null"];
                                                    };
                                                    readonly birthday: {
                                                        readonly deprecated: false;
                                                        readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                        readonly title: "PlayerBirthday";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly first_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "First name of the player. `null` if unknown";
                                                        readonly title: "PlayerFirstName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "ID of the player";
                                                        readonly minimum: 1;
                                                        readonly title: "PlayerID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL to the photo of the player. `null` if not available.";
                                                        readonly format: "uri";
                                                        readonly title: "PlayerImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly last_name: {
                                                        readonly deprecated: false;
                                                        readonly description: "Last name of the player. `null` if unknown";
                                                        readonly title: "PlayerLastName";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "PlayerModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "Professional name of the player";
                                                        readonly title: "PlayerName";
                                                        readonly type: "string";
                                                    };
                                                    readonly nationality: {
                                                        readonly deprecated: false;
                                                        readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                        readonly title: "PlayerNationality";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly role: {
                                                        readonly deprecated: false;
                                                        readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                        readonly title: "PlayerRoleSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "PlayerSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                                readonly title: "BasePlayer";
                                                readonly type: "object";
                                            }, {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly acronym: {
                                                        readonly deprecated: false;
                                                        readonly title: "TeamAcronym";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL of the team logo";
                                                        readonly format: "uri";
                                                        readonly title: "TeamImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly location: {
                                                        readonly deprecated: false;
                                                        readonly description: "The team's organization location";
                                                        readonly title: "TeamLocation";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "TeamModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "The name of the team.";
                                                        readonly title: "TeamName";
                                                        readonly type: "string";
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "TeamSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                readonly title: "BaseTeam";
                                                readonly type: "object";
                                            }];
                                            readonly title: "BaseOpponent";
                                        };
                                        readonly physical_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLPhysicalDamage";
                                            readonly type: "object";
                                        };
                                        readonly player: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly active: {
                                                    readonly description: "Whether player is active";
                                                    readonly title: "PlayerIsActive";
                                                    readonly type: "boolean";
                                                };
                                                readonly age: {
                                                    readonly deprecated: false;
                                                    readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                    readonly minimum: 0;
                                                    readonly title: "PlayerAge";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly birthday: {
                                                    readonly deprecated: false;
                                                    readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                    readonly title: "PlayerBirthday";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly first_name: {
                                                    readonly deprecated: false;
                                                    readonly description: "First name of the player. `null` if unknown";
                                                    readonly title: "PlayerFirstName";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL to the photo of the player. `null` if not available.";
                                                    readonly format: "uri";
                                                    readonly title: "PlayerImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly last_name: {
                                                    readonly deprecated: false;
                                                    readonly description: "Last name of the player. `null` if unknown";
                                                    readonly title: "PlayerLastName";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "PlayerModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "Professional name of the player";
                                                    readonly title: "PlayerName";
                                                    readonly type: "string";
                                                };
                                                readonly nationality: {
                                                    readonly deprecated: false;
                                                    readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                    readonly title: "PlayerNationality";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly role: {
                                                    readonly deprecated: false;
                                                    readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                    readonly title: "PlayerRoleSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "PlayerSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                            readonly title: "BasePlayer";
                                            readonly type: "object";
                                        };
                                        readonly player_id: {
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        };
                                        readonly role: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["adc", "jun", "mid", "sup", "top"];
                                            readonly title: "LoLPlayerRole";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`adc` `jun` `mid` `sup` `top`";
                                        };
                                        readonly runes: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLRuneID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLRuneName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "name"];
                                                readonly title: "LoLRune";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLRunes";
                                            readonly type: "array";
                                        };
                                        readonly runes_reforged: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly primary_path: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly keystone: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: "object";
                                                        };
                                                        readonly lesser_runes: {
                                                            readonly items: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: "object";
                                                            };
                                                            readonly title: "LoLRunesReforged";
                                                            readonly type: "array";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "keystone", "lesser_runes", "name", "type"];
                                                    readonly title: "LoLPlayerPrimaryRunePath";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly secondary_path: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly description: "ID of the rune";
                                                            readonly minimum: 1;
                                                            readonly title: "LoLRuneReforgedID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly description: "URL to an image of the rune";
                                                            readonly format: "uri";
                                                            readonly title: "LoLRuneReforgedImageURL";
                                                            readonly type: "string";
                                                        };
                                                        readonly lesser_runes: {
                                                            readonly items: {
                                                                readonly additionalProperties: false;
                                                                readonly deprecated: false;
                                                                readonly properties: {
                                                                    readonly id: {
                                                                        readonly description: "ID of the rune";
                                                                        readonly minimum: 1;
                                                                        readonly title: "LoLRuneReforgedID";
                                                                        readonly type: "integer";
                                                                    };
                                                                    readonly image_url: {
                                                                        readonly description: "URL to an image of the rune";
                                                                        readonly format: "uri";
                                                                        readonly title: "LoLRuneReforgedImageURL";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly name: {
                                                                        readonly description: "Name of the rune path";
                                                                        readonly title: "LoLRuneReforgedName";
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly type: {
                                                                        readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                        readonly title: "LoLRuneReforgedType";
                                                                        readonly type: "string";
                                                                        readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                    };
                                                                };
                                                                readonly required: readonly ["id", "image_url", "name", "type"];
                                                                readonly title: "LoLRuneReforged";
                                                                readonly type: "object";
                                                            };
                                                            readonly title: "LoLRunesReforged";
                                                            readonly type: "array";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Name of the rune path";
                                                            readonly title: "LoLRuneReforgedName";
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                            readonly title: "LoLRuneReforgedType";
                                                            readonly type: "string";
                                                            readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                        };
                                                    };
                                                    readonly required: readonly ["id", "image_url", "lesser_runes", "name", "type"];
                                                    readonly title: "LoLPlayerSecondaryRunePath";
                                                    readonly type: readonly ["object", "null"];
                                                };
                                                readonly shards: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly defense: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                        readonly flex: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                        readonly offense: {
                                                            readonly additionalProperties: false;
                                                            readonly deprecated: false;
                                                            readonly properties: {
                                                                readonly id: {
                                                                    readonly description: "ID of the rune";
                                                                    readonly minimum: 1;
                                                                    readonly title: "LoLRuneReforgedID";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly image_url: {
                                                                    readonly description: "URL to an image of the rune";
                                                                    readonly format: "uri";
                                                                    readonly title: "LoLRuneReforgedImageURL";
                                                                    readonly type: "string";
                                                                };
                                                                readonly name: {
                                                                    readonly description: "Name of the rune path";
                                                                    readonly title: "LoLRuneReforgedName";
                                                                    readonly type: "string";
                                                                };
                                                                readonly type: {
                                                                    readonly enum: readonly ["keystone", "path", "shard", "slot1", "slot2", "slot3"];
                                                                    readonly title: "LoLRuneReforgedType";
                                                                    readonly type: "string";
                                                                    readonly description: "`keystone` `path` `shard` `slot1` `slot2` `slot3`";
                                                                };
                                                            };
                                                            readonly required: readonly ["id", "image_url", "name", "type"];
                                                            readonly title: "LoLRuneReforged";
                                                            readonly type: readonly ["object", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["defense", "flex", "offense"];
                                                    readonly title: "LoLPlayerRuneShards";
                                                    readonly type: "object";
                                                };
                                            };
                                            readonly required: readonly ["primary_path", "secondary_path", "shards"];
                                            readonly title: "LoLPlayerRunesReforged";
                                            readonly type: "object";
                                        };
                                        readonly spells: {
                                            readonly items: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly minimum: 1;
                                                        readonly title: "LoLSpellID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly format: "uri";
                                                        readonly title: "LoLSpellImageURL";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly title: "LoLSpellName";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "image_url", "name"];
                                                readonly title: "LoLSpell";
                                                readonly type: "object";
                                            };
                                            readonly title: "LoLSpells";
                                            readonly type: "array";
                                        };
                                        readonly team: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly acronym: {
                                                    readonly deprecated: false;
                                                    readonly title: "TeamAcronym";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL of the team logo";
                                                    readonly format: "uri";
                                                    readonly title: "TeamImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly location: {
                                                    readonly deprecated: false;
                                                    readonly description: "The team's organization location";
                                                    readonly title: "TeamLocation";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TeamModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "The name of the team.";
                                                    readonly title: "TeamName";
                                                    readonly type: "string";
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TeamSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                            readonly title: "BaseTeam";
                                            readonly type: "object";
                                        };
                                        readonly total_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLTotalDamage";
                                            readonly type: "object";
                                        };
                                        readonly total_heal: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalHeal";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly total_time_crowd_control_dealt: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalTimeCrowdControlDealt";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly total_units_healed: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTotalUnitsHealed";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly true_damage: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly dealt: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLPlayerDamageDealtPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly dealt_to_champions: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly dealt_to_champions_percentage: {
                                                    readonly deprecated: false;
                                                    readonly description: "Percentage of damage dealt to champions the player had compared to the total damage of the team";
                                                    readonly maximum: 100;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLAverageDamageDealtToChampionsPercentage";
                                                    readonly type: readonly ["number", "null"];
                                                };
                                                readonly taken: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLDamage";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["dealt", "dealt_percentage", "dealt_to_champions", "dealt_to_champions_percentage", "taken"];
                                            readonly title: "LoLTrueDamage";
                                            readonly type: "object";
                                        };
                                        readonly wards: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly placed: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLWardsPlaced";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly sight_wards_bought_in_game: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLSightWards";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly vision_wards_bought_in_game: {
                                                    readonly deprecated: false;
                                                    readonly minimum: 0;
                                                    readonly title: "LoLVisionWards";
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                            };
                                            readonly required: readonly ["placed", "sight_wards_bought_in_game", "vision_wards_bought_in_game"];
                                            readonly title: "LoLWards";
                                            readonly type: "object";
                                        };
                                        readonly wards_placed: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLWardsPlaced";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["assists", "champion", "creep_score", "cs_at_14", "cs_diff_at_14", "deaths", "flags", "game_id", "gold_earned", "gold_percentage", "gold_spent", "items", "kills", "kills_counters", "kills_series", "largest_critical_strike", "largest_killing_spree", "largest_multi_kill", "level", "magic_damage", "masteries", "minions_killed", "opponent", "physical_damage", "player", "player_id", "role", "runes", "runes_reforged", "spells", "team", "total_damage", "total_heal", "total_time_crowd_control_dealt", "total_units_healed", "true_damage", "wards", "wards_placed"];
                                    readonly title: "LoLGamePlayer";
                                    readonly type: "object";
                                };
                                readonly title: "LoLGamePlayers";
                                readonly type: readonly ["array", "null"];
                            };
                            readonly position: {
                                readonly description: "Game position in the match. Starts at 1";
                                readonly minimum: 1;
                                readonly title: "GamePosition";
                                readonly type: "integer";
                            };
                            readonly status: {
                                readonly description: "The game status\n\n`finished` `not_played` `not_started` `running`";
                                readonly enum: readonly ["finished", "not_played", "not_started", "running"];
                                readonly title: "GameStatus";
                                readonly type: "string";
                            };
                            readonly teams: {
                                readonly deprecated: false;
                                readonly items: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly description: "Team's data for a Game";
                                    readonly properties: {
                                        readonly bans: {
                                            readonly items: {
                                                readonly minimum: 1;
                                                readonly title: "LoLChampionID";
                                                readonly type: "integer";
                                            };
                                            readonly title: "LoLChampionIDs";
                                            readonly type: "array";
                                        };
                                        readonly baron_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLBaronKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly chemtech_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLChemtechDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly cloud_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLCloudDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly color: {
                                            readonly enum: readonly ["blue", "red"];
                                            readonly title: "LoLTeamColor";
                                            readonly type: "string";
                                            readonly description: "`blue` `red`";
                                        };
                                        readonly dragon_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLDragonKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly elder_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLElderDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly first_baron: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first baron Nashor";
                                            readonly title: "LoLTeamGotFirstBaron";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_blood: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first blood";
                                            readonly title: "LoLTeamGotFirstBlood";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_dragon: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first dragon";
                                            readonly title: "LoLTeamGotFirstDragon";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_herald: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first herald";
                                            readonly title: "LoLTeamGotFirstHerald";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_inhibitor: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first inhibitor";
                                            readonly title: "LoLTeamGotFirstInhibitor";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_tower: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team got first tower";
                                            readonly title: "LoLTeamGotFirstTower";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly first_voidgrub: {
                                            readonly deprecated: false;
                                            readonly description: "Whether team killed the first voidgrub";
                                            readonly title: "LoLTeamGotFirstVoidgrub";
                                            readonly type: readonly ["boolean", "null"];
                                        };
                                        readonly gold_earned: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLGold";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly herald_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLHeraldKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly hextech_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLHextechDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly infernal_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLInfernalDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly inhibitor_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLInhibitorKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLKillCount";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly mountain_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLMountainDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly ocean_drake_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLOceanDrakeKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly player_ids: {
                                            readonly items: {
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            };
                                            readonly title: "PlayerIDs";
                                            readonly type: "array";
                                        };
                                        readonly team: {
                                            readonly additionalProperties: false;
                                            readonly deprecated: false;
                                            readonly properties: {
                                                readonly acronym: {
                                                    readonly deprecated: false;
                                                    readonly title: "TeamAcronym";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly id: {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                };
                                                readonly image_url: {
                                                    readonly deprecated: false;
                                                    readonly description: "URL of the team logo";
                                                    readonly format: "uri";
                                                    readonly title: "TeamImageURL";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly location: {
                                                    readonly deprecated: false;
                                                    readonly description: "The team's organization location";
                                                    readonly title: "TeamLocation";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly modified_at: {
                                                    readonly format: "date-time";
                                                    readonly minLength: 1;
                                                    readonly title: "TeamModifiedAt";
                                                    readonly type: "string";
                                                };
                                                readonly name: {
                                                    readonly description: "The name of the team.";
                                                    readonly title: "TeamName";
                                                    readonly type: "string";
                                                };
                                                readonly slug: {
                                                    readonly deprecated: false;
                                                    readonly minLength: 1;
                                                    readonly pattern: "^[a-z0-9_-]+$";
                                                    readonly title: "TeamSlug";
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                            readonly title: "BaseTeam";
                                            readonly type: "object";
                                        };
                                        readonly tower_kills: {
                                            readonly deprecated: false;
                                            readonly minimum: 0;
                                            readonly title: "LoLTowerKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly voidgrub_kills: {
                                            readonly deprecated: false;
                                            readonly description: "The number of voidgrubs killed by a team.";
                                            readonly maximum: 6;
                                            readonly minimum: 0;
                                            readonly title: "LoLVoidgrubKills";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["bans", "baron_kills", "chemtech_drake_kills", "cloud_drake_kills", "color", "dragon_kills", "elder_drake_kills", "first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "gold_earned", "herald_kills", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "mountain_drake_kills", "ocean_drake_kills", "player_ids", "team", "tower_kills", "voidgrub_kills"];
                                    readonly title: "LoLGameTeam";
                                    readonly type: "object";
                                };
                                readonly title: "LoLGameTeams";
                                readonly type: readonly ["array", "null"];
                            };
                            readonly winner: {
                                readonly additionalProperties: false;
                                readonly deprecated: false;
                                readonly properties: {
                                    readonly id: {
                                        readonly anyOf: readonly [{
                                            readonly description: "ID of the player";
                                            readonly minimum: 1;
                                            readonly title: "PlayerID";
                                            readonly type: "integer";
                                        }, {
                                            readonly description: "The ID of the team.";
                                            readonly minimum: 1;
                                            readonly title: "TeamID";
                                            readonly type: "integer";
                                        }];
                                        readonly deprecated: false;
                                        readonly nullable: true;
                                        readonly title: "OpponentID";
                                    };
                                    readonly type: {
                                        readonly deprecated: false;
                                        readonly enum: readonly ["Player", "Team"];
                                        readonly title: "OpponentType";
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`Player` `Team`";
                                    };
                                };
                                readonly required: readonly ["id", "type"];
                                readonly title: "GameWinner";
                                readonly type: "object";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                        };
                        readonly required: readonly ["begin_at", "complete", "detailed_stats", "end_at", "finished", "forfeit", "id", "length", "match_id", "players", "position", "status", "teams", "winner", "winner_type"];
                        readonly title: "LoLTeamLastGame";
                        readonly type: "object";
                    };
                    readonly title: "LoLTeamLastGames";
                    readonly type: "array";
                };
                readonly location: {
                    readonly deprecated: false;
                    readonly description: "The team's organization location";
                    readonly title: "TeamLocation";
                    readonly type: readonly ["string", "null"];
                };
                readonly modified_at: {
                    readonly format: "date-time";
                    readonly minLength: 1;
                    readonly title: "TeamModifiedAt";
                    readonly type: "string";
                };
                readonly most_banned: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's banned champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "name"];
                        readonly title: "LoLBannedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLBannedChampions";
                    readonly type: "array";
                };
                readonly most_banned_against: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's banned champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "name"];
                        readonly title: "LoLBannedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLBannedChampions";
                    readonly type: "array";
                };
                readonly most_picked: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly description: "A team's picked champion";
                        readonly properties: {
                            readonly count: {
                                readonly minimum: 0;
                                readonly title: "LoLChampionPickedOrBannedCount";
                                readonly type: "integer";
                            };
                            readonly games_lost: {
                                readonly description: "Number of games lost by the team on the given champion";
                                readonly type: "integer";
                            };
                            readonly games_won: {
                                readonly description: "Number of games won by the team on the given champion";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["count", "games_lost", "games_won", "name"];
                        readonly title: "LoLPickedChampion";
                        readonly type: "object";
                    };
                    readonly title: "LoLPickedChampions";
                    readonly type: "array";
                };
                readonly name: {
                    readonly description: "The name of the team.";
                    readonly title: "TeamName";
                    readonly type: "string";
                };
                readonly players: {
                    readonly items: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly active: {
                                readonly description: "Whether player is active";
                                readonly title: "PlayerIsActive";
                                readonly type: "boolean";
                            };
                            readonly age: {
                                readonly deprecated: false;
                                readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly minimum: 0;
                                readonly title: "PlayerAge";
                                readonly type: readonly ["number", "null"];
                            };
                            readonly birthday: {
                                readonly deprecated: false;
                                readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                readonly title: "PlayerBirthday";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly first_name: {
                                readonly deprecated: false;
                                readonly description: "First name of the player. `null` if unknown";
                                readonly title: "PlayerFirstName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly id: {
                                readonly description: "ID of the player";
                                readonly minimum: 1;
                                readonly title: "PlayerID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly description: "URL to the photo of the player. `null` if not available.";
                                readonly format: "uri";
                                readonly title: "PlayerImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly last_name: {
                                readonly deprecated: false;
                                readonly description: "Last name of the player. `null` if unknown";
                                readonly title: "PlayerLastName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "PlayerModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly description: "Professional name of the player";
                                readonly title: "PlayerName";
                                readonly type: "string";
                            };
                            readonly nationality: {
                                readonly deprecated: false;
                                readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                readonly title: "PlayerNationality";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly role: {
                                readonly deprecated: false;
                                readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                readonly title: "PlayerRoleSlug";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly deprecated: false;
                                readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "PlayerSlug";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                        readonly title: "BasePlayer";
                        readonly type: "object";
                    };
                    readonly title: "BasePlayers";
                    readonly type: "array";
                };
                readonly slug: {
                    readonly deprecated: false;
                    readonly minLength: 1;
                    readonly pattern: "^[a-z0-9_-]+$";
                    readonly title: "TeamSlug";
                    readonly type: readonly ["string", "null"];
                };
                readonly stats: {
                    readonly additionalProperties: false;
                    readonly deprecated: false;
                    readonly description: "Team's statistics for a tournament";
                    readonly properties: {
                        readonly averages: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageAssists";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly baron_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageBaronKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDeaths";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly dragon_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageDragonKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly game_length: {
                                    readonly deprecated: false;
                                    readonly description: "Duration of the game in seconds.\n`null` when the game status is not `finished`";
                                    readonly minimum: 0;
                                    readonly title: "GameLength";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly gold_earned: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageGoldEarned";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly herald_kill: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageHeraldKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly inhibitor_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageInhibitorKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly ratios: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly first_baron: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstBaron";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_blood: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstBlood";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_dragon: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstDragon";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_herald: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstHerald";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_inhibitor: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstInhibitor";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_tower: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioFirstTower";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly first_voidgrub: {
                                            readonly deprecated: false;
                                            readonly description: "Whether the team killed the first voidgrub.";
                                            readonly minimum: 0;
                                            readonly title: "LoLTeamFirstVoidgrubRatio";
                                            readonly type: readonly ["number", "null"];
                                        };
                                        readonly win: {
                                            readonly deprecated: false;
                                            readonly maximum: 1;
                                            readonly minimum: 0;
                                            readonly title: "LoLRatioWin";
                                            readonly type: readonly ["number", "null"];
                                        };
                                    };
                                    readonly required: readonly ["first_baron", "first_blood", "first_dragon", "first_herald", "first_inhibitor", "first_tower", "first_voidgrub", "win"];
                                    readonly title: "LoLTeamRatios";
                                    readonly type: "object";
                                };
                                readonly total_minions_killed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageMinionsKilled";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly tower_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageTowerKills";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly voidgrub_kills: {
                                    readonly deprecated: false;
                                    readonly description: "The number of voidgrubs killed by a team.";
                                    readonly maximum: 6;
                                    readonly minimum: 0;
                                    readonly title: "LoLTeamVoidgrubKillsAverage";
                                    readonly type: readonly ["number", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAverageWardsPlaced";
                                    readonly type: readonly ["number", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "baron_kills", "deaths", "dragon_kills", "game_length", "gold_earned", "herald_kill", "inhibitor_kills", "kills", "ratios", "total_minions_killed", "tower_kills", "voidgrub_kills", "wards_placed"];
                            readonly title: "LoLTeamAverages";
                            readonly type: "object";
                        };
                        readonly games_count: {
                            readonly deprecated: false;
                            readonly description: "Number of games";
                            readonly minimum: 0;
                            readonly title: "GameCount";
                            readonly type: readonly ["integer", "null"];
                        };
                        readonly totals: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly assists: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLAssistCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly baron_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLBaronKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly blue_games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly blue_games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly chemtech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLChemtechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly deaths: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDeathCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly dragon_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLDragonKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly elder_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLElderDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_played: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly herald_kill: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHeraldKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly hextech_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLHextechDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly infernal_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInfernalDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly inhibitor_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLInhibitorKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLKillCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_lost: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_played: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly matches_won: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "MatchCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly mountain_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLMountainDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly ocean_drake_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLOceanDrakeKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly red_games_lost: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly red_games_won: {
                                    readonly deprecated: false;
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly tower_kills: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLTowerKills";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly voidgrub_kills: {
                                    readonly deprecated: false;
                                    readonly description: "The number of voidgrubs killed by a team.";
                                    readonly minimum: 0;
                                    readonly title: "LoLTeamVoidgrubKillsTotal";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly wards_placed: {
                                    readonly deprecated: false;
                                    readonly minimum: 0;
                                    readonly title: "LoLWardsPlaced";
                                    readonly type: readonly ["integer", "null"];
                                };
                            };
                            readonly required: readonly ["assists", "baron_kills", "blue_games_lost", "blue_games_won", "chemtech_drake_kills", "deaths", "dragon_kills", "elder_drake_kills", "games_lost", "games_played", "games_won", "herald_kill", "hextech_drake_kills", "infernal_drake_kills", "inhibitor_kills", "kills", "matches_lost", "matches_played", "matches_won", "mountain_drake_kills", "ocean_drake_kills", "red_games_lost", "red_games_won", "tower_kills", "voidgrub_kills", "wards_placed"];
                            readonly title: "LoLTeamStatsTotals";
                            readonly type: "object";
                        };
                        readonly tournament: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the tournament is expected to have detailed statistics available";
                                    readonly title: "TournamentDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly expected_roster: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly players: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly active: {
                                                            readonly description: "Whether player is active";
                                                            readonly title: "PlayerIsActive";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly age: {
                                                            readonly deprecated: false;
                                                            readonly description: "Age of the player, `null` if unknown. When `birthday` is `null`, `age` is an approxiamation. Read more about [players' age](/docs/about-players-age)\n**Note**: This field is only present for users running the Historical plan or above.";
                                                            readonly minimum: 0;
                                                            readonly title: "PlayerAge";
                                                            readonly type: readonly ["number", "null"];
                                                        };
                                                        readonly birthday: {
                                                            readonly deprecated: false;
                                                            readonly description: "Birth day of the player, `YYYY-MM-DD` format. `null` if unknown.\n**Note**: This field is only present for users running the Historical plan or above.";
                                                            readonly title: "PlayerBirthday";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly first_name: {
                                                            readonly deprecated: false;
                                                            readonly description: "First name of the player. `null` if unknown";
                                                            readonly title: "PlayerFirstName";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly id: {
                                                            readonly description: "ID of the player";
                                                            readonly minimum: 1;
                                                            readonly title: "PlayerID";
                                                            readonly type: "integer";
                                                        };
                                                        readonly image_url: {
                                                            readonly deprecated: false;
                                                            readonly description: "URL to the photo of the player. `null` if not available.";
                                                            readonly format: "uri";
                                                            readonly title: "PlayerImageURL";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly last_name: {
                                                            readonly deprecated: false;
                                                            readonly description: "Last name of the player. `null` if unknown";
                                                            readonly title: "PlayerLastName";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly modified_at: {
                                                            readonly format: "date-time";
                                                            readonly minLength: 1;
                                                            readonly title: "PlayerModifiedAt";
                                                            readonly type: "string";
                                                        };
                                                        readonly name: {
                                                            readonly description: "Professional name of the player";
                                                            readonly title: "PlayerName";
                                                            readonly type: "string";
                                                        };
                                                        readonly nationality: {
                                                            readonly deprecated: false;
                                                            readonly description: "Country code matching the nationality of the player according to the ISO 3166-1 standard (Alpha-2 code).\nIn addition to the standard, the `XK` code is used for Kosovo.\n`null` if unknown";
                                                            readonly title: "PlayerNationality";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly role: {
                                                            readonly deprecated: false;
                                                            readonly description: "Role/position of the player. Field value varies depending on the video game.`null` if unknown.\n**Note**: role is only available for DotA 2, League of Legends, and Overwatch players.\n`null` for other video games.";
                                                            readonly title: "PlayerRoleSlug";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly slug: {
                                                            readonly deprecated: false;
                                                            readonly description: "Unique, human-readable identifier for the player.\n`id` and `slug` can be used interchangeably throughout the API.";
                                                            readonly minLength: 1;
                                                            readonly pattern: "^[a-z0-9_-]+$";
                                                            readonly title: "PlayerSlug";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                    };
                                                    readonly required: readonly ["active", "age", "birthday", "first_name", "id", "image_url", "last_name", "modified_at", "name", "nationality", "role", "slug"];
                                                    readonly title: "BasePlayer";
                                                    readonly type: "object";
                                                };
                                                readonly title: "BasePlayers";
                                                readonly type: "array";
                                            };
                                            readonly team: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly acronym: {
                                                        readonly deprecated: false;
                                                        readonly title: "TeamAcronym";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly id: {
                                                        readonly description: "The ID of the team.";
                                                        readonly minimum: 1;
                                                        readonly title: "TeamID";
                                                        readonly type: "integer";
                                                    };
                                                    readonly image_url: {
                                                        readonly deprecated: false;
                                                        readonly description: "URL of the team logo";
                                                        readonly format: "uri";
                                                        readonly title: "TeamImageURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly location: {
                                                        readonly deprecated: false;
                                                        readonly description: "The team's organization location";
                                                        readonly title: "TeamLocation";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly modified_at: {
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "TeamModifiedAt";
                                                        readonly type: "string";
                                                    };
                                                    readonly name: {
                                                        readonly description: "The name of the team.";
                                                        readonly title: "TeamName";
                                                        readonly type: "string";
                                                    };
                                                    readonly slug: {
                                                        readonly deprecated: false;
                                                        readonly minLength: 1;
                                                        readonly pattern: "^[a-z0-9_-]+$";
                                                        readonly title: "TeamSlug";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                                readonly title: "BaseTeam";
                                                readonly type: "object";
                                            };
                                        };
                                        readonly required: readonly ["players", "team"];
                                        readonly title: "TournamentRosterItem";
                                        readonly type: "object";
                                    };
                                    readonly title: "TournamentRosterItems";
                                    readonly type: "array";
                                };
                                readonly has_bracket: {
                                    readonly description: "Whether the tournament has a bracket";
                                    readonly title: "TournamentHasBracket";
                                    readonly type: "boolean";
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly league: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "LeagueID";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LeagueImageURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "LeagueModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "LeagueName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9:_-]+$";
                                            readonly title: "LeagueSlug";
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "LeagueURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                                    readonly title: "BaseLeague";
                                    readonly type: "object";
                                };
                                readonly league_id: {
                                    readonly minimum: 1;
                                    readonly title: "LeagueID";
                                    readonly type: "integer";
                                };
                                readonly live_supported: {
                                    readonly description: "Whether live is supported";
                                    readonly title: "TournamentLiveSupported";
                                    readonly type: "boolean";
                                };
                                readonly matches: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly begin_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchBeginAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly detailed_stats: {
                                                readonly description: "Whether the match offers full stats";
                                                readonly title: "MatchDetailedStats";
                                                readonly type: "boolean";
                                            };
                                            readonly draw: {
                                                readonly description: "Whether result of the match is a draw";
                                                readonly title: "MatchIsDraw";
                                                readonly type: "boolean";
                                            };
                                            readonly end_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchEndAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly forfeit: {
                                                readonly description: "Whether match was forfeited";
                                                readonly title: "MatchIsForfeit";
                                                readonly type: "boolean";
                                            };
                                            readonly game_advantage: {
                                                readonly deprecated: false;
                                                readonly description: "ID of the opponent with a game advantage";
                                                readonly minimum: 1;
                                                readonly title: "GameAdvantageOpponent";
                                                readonly type: readonly ["integer", "null"];
                                            };
                                            readonly id: {
                                                readonly minimum: 1;
                                                readonly title: "MatchID";
                                                readonly type: "integer";
                                            };
                                            readonly live: {
                                                readonly additionalProperties: false;
                                                readonly deprecated: false;
                                                readonly properties: {
                                                    readonly opens_at: {
                                                        readonly deprecated: false;
                                                        readonly format: "date-time";
                                                        readonly minLength: 1;
                                                        readonly title: "MatchLiveOpensAt";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                    readonly supported: {
                                                        readonly description: "Whether live is supported";
                                                        readonly title: "MatchLiveIsSupported";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly url: {
                                                        readonly deprecated: false;
                                                        readonly format: "uri";
                                                        readonly title: "MatchLiveURL";
                                                        readonly type: readonly ["string", "null"];
                                                    };
                                                };
                                                readonly required: readonly ["opens_at", "supported", "url"];
                                                readonly title: "MatchLive";
                                                readonly type: "object";
                                            };
                                            readonly match_type: {
                                                readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                                readonly title: "MatchType";
                                                readonly type: "string";
                                                readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly title: "MatchName";
                                                readonly type: "string";
                                            };
                                            readonly number_of_games: {
                                                readonly description: "Number of games";
                                                readonly minimum: 0;
                                                readonly title: "GameCount";
                                                readonly type: "integer";
                                            };
                                            readonly original_scheduled_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchOriginalScheduledAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly rescheduled: {
                                                readonly deprecated: false;
                                                readonly description: "Whether match has been rescheduled";
                                                readonly title: "MatchIsRescheduled";
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly scheduled_at: {
                                                readonly deprecated: false;
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "MatchScheduledAt";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                                readonly title: "MatchSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly status: {
                                                readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                                readonly title: "MatchStatus";
                                                readonly type: "string";
                                                readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                                            };
                                            readonly streams_list: {
                                                readonly items: {
                                                    readonly additionalProperties: false;
                                                    readonly deprecated: false;
                                                    readonly properties: {
                                                        readonly embed_url: {
                                                            readonly deprecated: false;
                                                            readonly description: "URL to embed in an iframe.";
                                                            readonly format: "uri";
                                                            readonly title: "StreamEmbedURL";
                                                            readonly type: readonly ["string", "null"];
                                                        };
                                                        readonly language: {
                                                            readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                                            readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                                            readonly title: "StreamLanguage";
                                                            readonly type: "string";
                                                        };
                                                        readonly main: {
                                                            readonly description: "Whether it is the main stream. Main stream is always official.";
                                                            readonly title: "StreamIsMain";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly official: {
                                                            readonly description: "Whether it is an official broadcast.";
                                                            readonly title: "StreamIsOfficial";
                                                            readonly type: "boolean";
                                                        };
                                                        readonly raw_url: {
                                                            readonly description: "URL to the stream on host website.";
                                                            readonly format: "uri";
                                                            readonly title: "StreamURL";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                                                    readonly title: "Stream";
                                                    readonly type: "object";
                                                };
                                                readonly title: "StreamsList";
                                                readonly type: "array";
                                            };
                                            readonly tournament_id: {
                                                readonly minimum: 1;
                                                readonly title: "TournamentID";
                                                readonly type: "integer";
                                            };
                                            readonly winner_id: {
                                                readonly anyOf: readonly [{
                                                    readonly description: "ID of the player";
                                                    readonly minimum: 1;
                                                    readonly title: "PlayerID";
                                                    readonly type: "integer";
                                                }, {
                                                    readonly description: "The ID of the team.";
                                                    readonly minimum: 1;
                                                    readonly title: "TeamID";
                                                    readonly type: "integer";
                                                }];
                                                readonly deprecated: false;
                                                readonly nullable: true;
                                                readonly title: "OpponentID";
                                            };
                                            readonly winner_type: {
                                                readonly enum: readonly ["Player", "Team"];
                                                readonly title: "MatchWinnerType";
                                                readonly type: "string";
                                                readonly description: "`Player` `Team`";
                                            };
                                        };
                                        readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "id", "live", "match_type", "modified_at", "name", "number_of_games", "original_scheduled_at", "rescheduled", "scheduled_at", "slug", "status", "streams_list", "tournament_id", "winner_id", "winner_type"];
                                        readonly title: "BaseMatch";
                                        readonly type: "object";
                                    };
                                    readonly title: "BaseMatches";
                                    readonly type: "array";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TournamentModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "TournamentName";
                                    readonly type: "string";
                                };
                                readonly prizepool: {
                                    readonly deprecated: false;
                                    readonly title: "TournamentPrizepool";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly serie: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly begin_at: {
                                            readonly deprecated: false;
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "SerieBeginAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly end_at: {
                                            readonly deprecated: false;
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "SerieEndAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly full_name: {
                                            readonly title: "SerieFullName";
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "SerieID";
                                            readonly type: "integer";
                                        };
                                        readonly league_id: {
                                            readonly minimum: 1;
                                            readonly title: "LeagueID";
                                            readonly type: "integer";
                                        };
                                        readonly modified_at: {
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "SerieModifiedAt";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly deprecated: false;
                                            readonly title: "SerieName";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly season: {
                                            readonly deprecated: false;
                                            readonly title: "SerieSeason";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "SerieSlug";
                                            readonly type: "string";
                                        };
                                        readonly winner_id: {
                                            readonly anyOf: readonly [{
                                                readonly description: "ID of the player";
                                                readonly minimum: 1;
                                                readonly title: "PlayerID";
                                                readonly type: "integer";
                                            }, {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            }];
                                            readonly deprecated: false;
                                            readonly nullable: true;
                                            readonly title: "OpponentID";
                                        };
                                        readonly winner_type: {
                                            readonly deprecated: false;
                                            readonly enum: readonly ["Player", "Team"];
                                            readonly title: "OpponentType";
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`Player` `Team`";
                                        };
                                        readonly year: {
                                            readonly deprecated: false;
                                            readonly minimum: 2012;
                                            readonly title: "SerieYear";
                                            readonly type: readonly ["integer", "null"];
                                        };
                                    };
                                    readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                                    readonly title: "BaseSerie";
                                    readonly type: "object";
                                };
                                readonly serie_id: {
                                    readonly minimum: 1;
                                    readonly title: "SerieID";
                                    readonly type: "integer";
                                };
                                readonly slug: {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TournamentSlug";
                                    readonly type: "string";
                                };
                                readonly teams: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly acronym: {
                                                readonly deprecated: false;
                                                readonly title: "TeamAcronym";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly id: {
                                                readonly description: "The ID of the team.";
                                                readonly minimum: 1;
                                                readonly title: "TeamID";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL of the team logo";
                                                readonly format: "uri";
                                                readonly title: "TeamImageURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly location: {
                                                readonly deprecated: false;
                                                readonly description: "The team's organization location";
                                                readonly title: "TeamLocation";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly modified_at: {
                                                readonly format: "date-time";
                                                readonly minLength: 1;
                                                readonly title: "TeamModifiedAt";
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly description: "The name of the team.";
                                                readonly title: "TeamName";
                                                readonly type: "string";
                                            };
                                            readonly slug: {
                                                readonly deprecated: false;
                                                readonly minLength: 1;
                                                readonly pattern: "^[a-z0-9_-]+$";
                                                readonly title: "TeamSlug";
                                                readonly type: readonly ["string", "null"];
                                            };
                                        };
                                        readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                                        readonly title: "BaseTeam";
                                        readonly type: "object";
                                    };
                                    readonly title: "BaseTeams";
                                    readonly type: "array";
                                };
                                readonly tier: {
                                    readonly deprecated: false;
                                    readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                                    readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                    readonly title: "TournamentTier";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly videogame: {
                                    readonly enum: readonly [{
                                        readonly id: 1;
                                        readonly name: "LoL";
                                        readonly slug: "league-of-legends";
                                    }, {
                                        readonly id: 3;
                                        readonly name: "Counter-Strike";
                                        readonly slug: "cs-go";
                                    }, {
                                        readonly id: 4;
                                        readonly name: "Dota 2";
                                        readonly slug: "dota-2";
                                    }, {
                                        readonly id: 14;
                                        readonly name: "Overwatch";
                                        readonly slug: "ow";
                                    }, {
                                        readonly id: 20;
                                        readonly name: "PUBG";
                                        readonly slug: "pubg";
                                    }, {
                                        readonly id: 22;
                                        readonly name: "Rocket League";
                                        readonly slug: "rl";
                                    }, {
                                        readonly id: 23;
                                        readonly name: "Call of Duty";
                                        readonly slug: "cod-mw";
                                    }, {
                                        readonly id: 24;
                                        readonly name: "Rainbow 6 Siege";
                                        readonly slug: "r6-siege";
                                    }, {
                                        readonly id: 25;
                                        readonly name: "EA Sports FC";
                                        readonly slug: "fifa";
                                    }, {
                                        readonly id: 26;
                                        readonly name: "Valorant";
                                        readonly slug: "valorant";
                                    }, {
                                        readonly id: 27;
                                        readonly name: "King of Glory";
                                        readonly slug: "kog";
                                    }, {
                                        readonly id: 28;
                                        readonly name: "LoL Wild Rift";
                                        readonly slug: "lol-wild-rift";
                                    }, {
                                        readonly id: 29;
                                        readonly name: "StarCraft 2";
                                        readonly slug: "starcraft-2";
                                    }, {
                                        readonly id: 30;
                                        readonly name: "StarCraft Brood War";
                                        readonly slug: "starcraft-brood-war";
                                    }, {
                                        readonly id: 31;
                                        readonly name: "eSoccer";
                                        readonly slug: "e-soccer";
                                    }, {
                                        readonly id: 32;
                                        readonly name: "eBasketball";
                                        readonly slug: "e-basketball";
                                    }, {
                                        readonly id: 33;
                                        readonly name: "eCricket";
                                        readonly slug: "e-cricket";
                                    }, {
                                        readonly id: 34;
                                        readonly name: "Mobile Legends: Bang Bang";
                                        readonly slug: "mlbb";
                                    }];
                                    readonly title: "CurrentVideogame";
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                    readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                                };
                                readonly videogame_title: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly id: {
                                            readonly minimum: 1;
                                            readonly title: "VideogameTitleID";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "VideogameTitleName";
                                            readonly type: "string";
                                        };
                                        readonly slug: {
                                            readonly minLength: 1;
                                            readonly pattern: "^[a-z0-9_-]+$";
                                            readonly title: "VideogameTitleSlug";
                                            readonly type: "string";
                                        };
                                        readonly videogame_id: {
                                            readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                            readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                            readonly title: "VideogameID";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "name", "slug", "videogame_id"];
                                    readonly title: "VideogameTitle";
                                    readonly type: readonly ["object", "null"];
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly deprecated: false;
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "OpponentType";
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "end_at", "expected_roster", "has_bracket", "id", "league", "league_id", "live_supported", "matches", "modified_at", "name", "prizepool", "serie", "serie_id", "slug", "teams", "tier", "videogame", "videogame_title", "winner_id", "winner_type"];
                            readonly title: "Tournament";
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["averages", "games_count", "totals", "tournament"];
                    readonly title: "LoLTeamByTournamentStat";
                    readonly type: "object";
                };
            };
            readonly required: readonly ["acronym", "id", "image_url", "last_games", "location", "modified_at", "most_banned", "most_banned_against", "most_picked", "name", "players", "slug", "stats"];
            readonly title: "LoLStatsForTeamByTournament";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolTournamentsUpcoming: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly description: "Whether the tournament is expected to have detailed statistics available";
                            readonly title: "TournamentDetailedStats";
                            readonly type: "boolean";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly has_bracket: {
                            readonly description: "Whether the tournament has a bracket";
                            readonly title: "TournamentHasBracket";
                            readonly type: "boolean";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly live_supported: {
                            readonly description: "Whether live is supported";
                            readonly title: "TournamentLiveSupported";
                            readonly type: "boolean";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly prizepool: {
                            readonly items: {
                                readonly title: "TournamentPrizepool";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly tier: {
                            readonly items: {
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_title: {
                            readonly description: "A videogame title id or slug.\nOnly for `/csgo/*`, `/codmw/*`, `/fifa/*` and `/ow/*` endpoints\n";
                            readonly items: {
                                readonly oneOf: readonly [{
                                    readonly minimum: 1;
                                    readonly title: "VideogameTitleID";
                                    readonly type: "integer";
                                }, {
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "VideogameTitleSlug";
                                    readonly type: "string";
                                }];
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly begin_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentBeginAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly detailed_stats: {
                            readonly items: {
                                readonly description: "Whether the tournament is expected to have detailed statistics available";
                                readonly title: "TournamentDetailedStats";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly end_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentEndAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly has_bracket: {
                            readonly items: {
                                readonly description: "Whether the tournament has a bracket";
                                readonly title: "TournamentHasBracket";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "TournamentID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly modified_at: {
                            readonly items: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "TournamentModifiedAt";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "TournamentName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly prizepool: {
                            readonly items: {
                                readonly title: "TournamentPrizepool";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly serie_id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly slug: {
                            readonly items: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "TournamentSlug";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly tier: {
                            readonly items: {
                                readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                                readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                                readonly title: "TournamentTier";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_id: {
                            readonly items: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly title: "OpponentID";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly winner_type: {
                            readonly items: {
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["begin_at", "-begin_at", "detailed_stats", "-detailed_stats", "end_at", "-end_at", "has_bracket", "-has_bracket", "id", "-id", "modified_at", "-modified_at", "name", "-name", "prizepool", "-prizepool", "serie_id", "-serie_id", "slug", "-slug", "tier", "-tier", "winner_id", "-winner_id", "winner_type", "-winner_type"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "TournamentName";
                            readonly type: "string";
                        };
                        readonly prizepool: {
                            readonly title: "TournamentPrizepool";
                            readonly type: "string";
                        };
                        readonly slug: {
                            readonly minLength: 1;
                            readonly pattern: "^[a-z0-9_-]+$";
                            readonly title: "TournamentSlug";
                            readonly type: "string";
                        };
                        readonly tier: {
                            readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'";
                            readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                            readonly title: "TournamentTier";
                            readonly type: "string";
                        };
                        readonly winner_type: {
                            readonly enum: readonly ["Player", "Team"];
                            readonly title: "OpponentType";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly begin_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentBeginAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly detailed_stats: {
                        readonly description: "Whether the tournament is expected to have detailed statistics available";
                        readonly title: "TournamentDetailedStats";
                        readonly type: "boolean";
                    };
                    readonly end_at: {
                        readonly deprecated: false;
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentEndAt";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly has_bracket: {
                        readonly description: "Whether the tournament has a bracket";
                        readonly title: "TournamentHasBracket";
                        readonly type: "boolean";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "TournamentID";
                        readonly type: "integer";
                    };
                    readonly league: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly image_url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueImageURL";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "LeagueModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly title: "LeagueName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9:_-]+$";
                                readonly title: "LeagueSlug";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly deprecated: false;
                                readonly format: "uri";
                                readonly title: "LeagueURL";
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["id", "image_url", "modified_at", "name", "slug", "url"];
                        readonly title: "BaseLeague";
                        readonly type: "object";
                    };
                    readonly league_id: {
                        readonly minimum: 1;
                        readonly title: "LeagueID";
                        readonly type: "integer";
                    };
                    readonly live_supported: {
                        readonly description: "Whether live is supported";
                        readonly title: "TournamentLiveSupported";
                        readonly type: "boolean";
                    };
                    readonly matches: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly begin_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchBeginAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly detailed_stats: {
                                    readonly description: "Whether the match offers full stats";
                                    readonly title: "MatchDetailedStats";
                                    readonly type: "boolean";
                                };
                                readonly draw: {
                                    readonly description: "Whether result of the match is a draw";
                                    readonly title: "MatchIsDraw";
                                    readonly type: "boolean";
                                };
                                readonly end_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchEndAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly forfeit: {
                                    readonly description: "Whether match was forfeited";
                                    readonly title: "MatchIsForfeit";
                                    readonly type: "boolean";
                                };
                                readonly game_advantage: {
                                    readonly deprecated: false;
                                    readonly description: "ID of the opponent with a game advantage";
                                    readonly minimum: 1;
                                    readonly title: "GameAdvantageOpponent";
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly id: {
                                    readonly minimum: 1;
                                    readonly title: "MatchID";
                                    readonly type: "integer";
                                };
                                readonly live: {
                                    readonly additionalProperties: false;
                                    readonly deprecated: false;
                                    readonly properties: {
                                        readonly opens_at: {
                                            readonly deprecated: false;
                                            readonly format: "date-time";
                                            readonly minLength: 1;
                                            readonly title: "MatchLiveOpensAt";
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly supported: {
                                            readonly description: "Whether live is supported";
                                            readonly title: "MatchLiveIsSupported";
                                            readonly type: "boolean";
                                        };
                                        readonly url: {
                                            readonly deprecated: false;
                                            readonly format: "uri";
                                            readonly title: "MatchLiveURL";
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                    readonly required: readonly ["opens_at", "supported", "url"];
                                    readonly title: "MatchLive";
                                    readonly type: "object";
                                };
                                readonly match_type: {
                                    readonly enum: readonly ["all_games_played", "best_of", "custom", "first_to", "ow_best_of", "red_bull_home_ground"];
                                    readonly title: "MatchType";
                                    readonly type: "string";
                                    readonly description: "`all_games_played` `best_of` `custom` `first_to` `ow_best_of` `red_bull_home_ground`";
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly title: "MatchName";
                                    readonly type: "string";
                                };
                                readonly number_of_games: {
                                    readonly description: "Number of games";
                                    readonly minimum: 0;
                                    readonly title: "GameCount";
                                    readonly type: "integer";
                                };
                                readonly original_scheduled_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchOriginalScheduledAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly rescheduled: {
                                    readonly deprecated: false;
                                    readonly description: "Whether match has been rescheduled";
                                    readonly title: "MatchIsRescheduled";
                                    readonly type: readonly ["boolean", "null"];
                                };
                                readonly scheduled_at: {
                                    readonly deprecated: false;
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "MatchScheduledAt";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[ a-zA-Z0-9_-]+$";
                                    readonly title: "MatchSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly status: {
                                    readonly enum: readonly ["canceled", "finished", "not_started", "postponed", "running"];
                                    readonly title: "MatchStatus";
                                    readonly type: "string";
                                    readonly description: "`canceled` `finished` `not_started` `postponed` `running`";
                                };
                                readonly streams_list: {
                                    readonly items: {
                                        readonly additionalProperties: false;
                                        readonly deprecated: false;
                                        readonly properties: {
                                            readonly embed_url: {
                                                readonly deprecated: false;
                                                readonly description: "URL to embed in an iframe.";
                                                readonly format: "uri";
                                                readonly title: "StreamEmbedURL";
                                                readonly type: readonly ["string", "null"];
                                            };
                                            readonly language: {
                                                readonly description: "Language alpha-2 code according to ISO 649-1 standard.\n\n`aa` `ab` `ae` `af` `ak` `am` `an` `ar` `as` `av` `ay` `az` `ba` `be` `bg` `bh` `bi` `bm` `bn` `bo` `br` `bs` `ca` `ce` `ch` `co` `cr` `cs` `cu` `cv` `cy` `da` `de` `dv` `dz` `ee` `el` `en` `eo` `es` `et` `eu` `fa` `ff` `fi` `fj` `fo` `fr` `fy` `ga` `gd` `gl` `gn` `gu` `gv` `ha` `he` `hi` `ho` `hr` `ht` `hu` `hy` `hz` `ia` `id` `ie` `ig` `ii` `ik` `io` `is` `it` `iu` `ja` `jv` `ka` `kg` `ki` `kj` `kk` `kl` `km` `kn` `ko` `kr` `ks` `ku` `kv` `kw` `ky` `la` `lb` `lg` `li` `ln` `lo` `lt` `lu` `lv` `mg` `mh` `mi` `mk` `ml` `mn` `mr` `ms` `mt` `my` `na` `nb` `nd` `ne` `ng` `nl` `nn` `no` `nr` `nv` `ny` `oc` `oj` `om` `or` `os` `pa` `pi` `pl` `ps` `pt` `qu` `rm` `rn` `ro` `ru` `rw` `sa` `sc` `sd` `se` `sg` `si` `sk` `sl` `sm` `sn` `so` `sq` `sr` `ss` `st` `su` `sv` `sw` `ta` `te` `tg` `th` `ti` `tk` `tl` `tn` `to` `tr` `ts` `tt` `tw` `ty` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `wa` `wo` `xh` `yi` `yo` `za` `zh` `zu`";
                                                readonly enum: readonly ["aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu"];
                                                readonly title: "StreamLanguage";
                                                readonly type: "string";
                                            };
                                            readonly main: {
                                                readonly description: "Whether it is the main stream. Main stream is always official.";
                                                readonly title: "StreamIsMain";
                                                readonly type: "boolean";
                                            };
                                            readonly official: {
                                                readonly description: "Whether it is an official broadcast.";
                                                readonly title: "StreamIsOfficial";
                                                readonly type: "boolean";
                                            };
                                            readonly raw_url: {
                                                readonly description: "URL to the stream on host website.";
                                                readonly format: "uri";
                                                readonly title: "StreamURL";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["embed_url", "language", "main", "official", "raw_url"];
                                        readonly title: "Stream";
                                        readonly type: "object";
                                    };
                                    readonly title: "StreamsList";
                                    readonly type: "array";
                                };
                                readonly tournament_id: {
                                    readonly minimum: 1;
                                    readonly title: "TournamentID";
                                    readonly type: "integer";
                                };
                                readonly winner_id: {
                                    readonly anyOf: readonly [{
                                        readonly description: "ID of the player";
                                        readonly minimum: 1;
                                        readonly title: "PlayerID";
                                        readonly type: "integer";
                                    }, {
                                        readonly description: "The ID of the team.";
                                        readonly minimum: 1;
                                        readonly title: "TeamID";
                                        readonly type: "integer";
                                    }];
                                    readonly deprecated: false;
                                    readonly nullable: true;
                                    readonly title: "OpponentID";
                                };
                                readonly winner_type: {
                                    readonly enum: readonly ["Player", "Team"];
                                    readonly title: "MatchWinnerType";
                                    readonly type: "string";
                                    readonly description: "`Player` `Team`";
                                };
                            };
                            readonly required: readonly ["begin_at", "detailed_stats", "draw", "end_at", "forfeit", "game_advantage", "id", "live", "match_type", "modified_at", "name", "number_of_games", "original_scheduled_at", "rescheduled", "scheduled_at", "slug", "status", "streams_list", "tournament_id", "winner_id", "winner_type"];
                            readonly title: "BaseMatch";
                            readonly type: "object";
                        };
                        readonly title: "BaseMatches";
                        readonly type: "array";
                    };
                    readonly modified_at: {
                        readonly format: "date-time";
                        readonly minLength: 1;
                        readonly title: "TournamentModifiedAt";
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly title: "TournamentName";
                        readonly type: "string";
                    };
                    readonly prizepool: {
                        readonly deprecated: false;
                        readonly title: "TournamentPrizepool";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly serie: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly begin_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieBeginAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly end_at: {
                                readonly deprecated: false;
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieEndAt";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly full_name: {
                                readonly title: "SerieFullName";
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "SerieID";
                                readonly type: "integer";
                            };
                            readonly league_id: {
                                readonly minimum: 1;
                                readonly title: "LeagueID";
                                readonly type: "integer";
                            };
                            readonly modified_at: {
                                readonly format: "date-time";
                                readonly minLength: 1;
                                readonly title: "SerieModifiedAt";
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly deprecated: false;
                                readonly title: "SerieName";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly season: {
                                readonly deprecated: false;
                                readonly title: "SerieSeason";
                                readonly type: readonly ["string", "null"];
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "SerieSlug";
                                readonly type: "string";
                            };
                            readonly winner_id: {
                                readonly anyOf: readonly [{
                                    readonly description: "ID of the player";
                                    readonly minimum: 1;
                                    readonly title: "PlayerID";
                                    readonly type: "integer";
                                }, {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                }];
                                readonly deprecated: false;
                                readonly nullable: true;
                                readonly title: "OpponentID";
                            };
                            readonly winner_type: {
                                readonly deprecated: false;
                                readonly enum: readonly ["Player", "Team"];
                                readonly title: "OpponentType";
                                readonly type: readonly ["string", "null"];
                                readonly description: "`Player` `Team`";
                            };
                            readonly year: {
                                readonly deprecated: false;
                                readonly minimum: 2012;
                                readonly title: "SerieYear";
                                readonly type: readonly ["integer", "null"];
                            };
                        };
                        readonly required: readonly ["begin_at", "end_at", "full_name", "id", "league_id", "modified_at", "name", "season", "slug", "winner_id", "winner_type", "year"];
                        readonly title: "BaseSerie";
                        readonly type: "object";
                    };
                    readonly serie_id: {
                        readonly minimum: 1;
                        readonly title: "SerieID";
                        readonly type: "integer";
                    };
                    readonly slug: {
                        readonly minLength: 1;
                        readonly pattern: "^[a-z0-9_-]+$";
                        readonly title: "TournamentSlug";
                        readonly type: "string";
                    };
                    readonly teams: {
                        readonly items: {
                            readonly additionalProperties: false;
                            readonly deprecated: false;
                            readonly properties: {
                                readonly acronym: {
                                    readonly deprecated: false;
                                    readonly title: "TeamAcronym";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly id: {
                                    readonly description: "The ID of the team.";
                                    readonly minimum: 1;
                                    readonly title: "TeamID";
                                    readonly type: "integer";
                                };
                                readonly image_url: {
                                    readonly deprecated: false;
                                    readonly description: "URL of the team logo";
                                    readonly format: "uri";
                                    readonly title: "TeamImageURL";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly location: {
                                    readonly deprecated: false;
                                    readonly description: "The team's organization location";
                                    readonly title: "TeamLocation";
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly modified_at: {
                                    readonly format: "date-time";
                                    readonly minLength: 1;
                                    readonly title: "TeamModifiedAt";
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly description: "The name of the team.";
                                    readonly title: "TeamName";
                                    readonly type: "string";
                                };
                                readonly slug: {
                                    readonly deprecated: false;
                                    readonly minLength: 1;
                                    readonly pattern: "^[a-z0-9_-]+$";
                                    readonly title: "TeamSlug";
                                    readonly type: readonly ["string", "null"];
                                };
                            };
                            readonly required: readonly ["acronym", "id", "image_url", "location", "modified_at", "name", "slug"];
                            readonly title: "BaseTeam";
                            readonly type: "object";
                        };
                        readonly title: "BaseTeams";
                        readonly type: "array";
                    };
                    readonly tier: {
                        readonly deprecated: false;
                        readonly description: "The tier of the tournament, ranging from 'S' to 'Unranked'. Ranking 'S' > 'A' > 'B' > 'C' > 'D' > 'Unranked'\n\n`a` `b` `c` `d` `s` `unranked`";
                        readonly enum: readonly ["a", "b", "c", "d", "s", "unranked"];
                        readonly title: "TournamentTier";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly videogame: {
                        readonly enum: readonly [{
                            readonly id: 1;
                            readonly name: "LoL";
                            readonly slug: "league-of-legends";
                        }, {
                            readonly id: 3;
                            readonly name: "Counter-Strike";
                            readonly slug: "cs-go";
                        }, {
                            readonly id: 4;
                            readonly name: "Dota 2";
                            readonly slug: "dota-2";
                        }, {
                            readonly id: 14;
                            readonly name: "Overwatch";
                            readonly slug: "ow";
                        }, {
                            readonly id: 20;
                            readonly name: "PUBG";
                            readonly slug: "pubg";
                        }, {
                            readonly id: 22;
                            readonly name: "Rocket League";
                            readonly slug: "rl";
                        }, {
                            readonly id: 23;
                            readonly name: "Call of Duty";
                            readonly slug: "cod-mw";
                        }, {
                            readonly id: 24;
                            readonly name: "Rainbow 6 Siege";
                            readonly slug: "r6-siege";
                        }, {
                            readonly id: 25;
                            readonly name: "EA Sports FC";
                            readonly slug: "fifa";
                        }, {
                            readonly id: 26;
                            readonly name: "Valorant";
                            readonly slug: "valorant";
                        }, {
                            readonly id: 27;
                            readonly name: "King of Glory";
                            readonly slug: "kog";
                        }, {
                            readonly id: 28;
                            readonly name: "LoL Wild Rift";
                            readonly slug: "lol-wild-rift";
                        }, {
                            readonly id: 29;
                            readonly name: "StarCraft 2";
                            readonly slug: "starcraft-2";
                        }, {
                            readonly id: 30;
                            readonly name: "StarCraft Brood War";
                            readonly slug: "starcraft-brood-war";
                        }, {
                            readonly id: 31;
                            readonly name: "eSoccer";
                            readonly slug: "e-soccer";
                        }, {
                            readonly id: 32;
                            readonly name: "eBasketball";
                            readonly slug: "e-basketball";
                        }, {
                            readonly id: 33;
                            readonly name: "eCricket";
                            readonly slug: "e-cricket";
                        }, {
                            readonly id: 34;
                            readonly name: "Mobile Legends: Bang Bang";
                            readonly slug: "mlbb";
                        }];
                        readonly title: "CurrentVideogame";
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly description: "`[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]` `[object Object]`";
                    };
                    readonly videogame_title: {
                        readonly additionalProperties: false;
                        readonly deprecated: false;
                        readonly properties: {
                            readonly id: {
                                readonly minimum: 1;
                                readonly title: "VideogameTitleID";
                                readonly type: "integer";
                            };
                            readonly name: {
                                readonly title: "VideogameTitleName";
                                readonly type: "string";
                            };
                            readonly slug: {
                                readonly minLength: 1;
                                readonly pattern: "^[a-z0-9_-]+$";
                                readonly title: "VideogameTitleSlug";
                                readonly type: "string";
                            };
                            readonly videogame_id: {
                                readonly description: "A videogame ID\n\n`1` `3` `4` `14` `20` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34`";
                                readonly enum: readonly [1, 3, 4, 14, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34];
                                readonly title: "VideogameID";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["id", "name", "slug", "videogame_id"];
                        readonly title: "VideogameTitle";
                        readonly type: readonly ["object", "null"];
                    };
                    readonly winner_id: {
                        readonly anyOf: readonly [{
                            readonly description: "ID of the player";
                            readonly minimum: 1;
                            readonly title: "PlayerID";
                            readonly type: "integer";
                        }, {
                            readonly description: "The ID of the team.";
                            readonly minimum: 1;
                            readonly title: "TeamID";
                            readonly type: "integer";
                        }];
                        readonly deprecated: false;
                        readonly nullable: true;
                        readonly title: "OpponentID";
                    };
                    readonly winner_type: {
                        readonly deprecated: false;
                        readonly enum: readonly ["Player", "Team"];
                        readonly title: "OpponentType";
                        readonly type: readonly ["string", "null"];
                        readonly description: "`Player` `Team`";
                    };
                };
                readonly required: readonly ["begin_at", "detailed_stats", "end_at", "has_bracket", "id", "league", "league_id", "live_supported", "matches", "modified_at", "name", "prizepool", "serie", "serie_id", "slug", "teams", "tier", "videogame", "videogame_title", "winner_id", "winner_type"];
                readonly title: "ShortTournament";
                readonly type: "object";
            };
            readonly title: "LoLShortTournaments";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolVersionsAllChampions: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly armor: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmor";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly armorperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmorPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackdamage: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamage";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackdamageperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamagePerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackrange: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackRange";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackspeedoffset: {
                            readonly items: {
                                readonly title: "LoLAttackSpeedOffset";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackspeedperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackSpeedPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly crit: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCrit";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly critperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCritPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHP";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegen";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLChampionID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly movespeed: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMoveSpeed";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMP";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegen";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly spellblock: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResist";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly spellblockperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResistPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly armor: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmor";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly armorperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmorPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackdamage: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamage";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackdamageperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamagePerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackrange: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackRange";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackspeedoffset: {
                            readonly items: {
                                readonly title: "LoLAttackSpeedOffset";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackspeedperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackSpeedPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly crit: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCrit";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly critperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCritPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHP";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegen";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLChampionID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly movespeed: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMoveSpeed";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMP";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegen";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly spellblock: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResist";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly spellblockperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResistPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["armor", "-armor", "armorperlevel", "-armorperlevel", "attackdamage", "-attackdamage", "attackdamageperlevel", "-attackdamageperlevel", "attackrange", "-attackrange", "attackspeedoffset", "-attackspeedoffset", "attackspeedperlevel", "-attackspeedperlevel", "crit", "-crit", "critperlevel", "-critperlevel", "hp", "-hp", "hpperlevel", "-hpperlevel", "hpregen", "-hpregen", "hpregenperlevel", "-hpregenperlevel", "id", "-id", "movespeed", "-movespeed", "mp", "-mp", "mpperlevel", "-mpperlevel", "mpregen", "-mpregen", "mpregenperlevel", "-mpregenperlevel", "name", "-name", "spellblock", "-spellblock", "spellblockperlevel", "-spellblockperlevel"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLChampionName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly armor: {
                        readonly minimum: 0;
                        readonly title: "LoLArmor";
                        readonly type: "number";
                    };
                    readonly armorperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLArmorPerLevel";
                        readonly type: "number";
                    };
                    readonly attackdamage: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackDamage";
                        readonly type: "number";
                    };
                    readonly attackdamageperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackDamagePerLevel";
                        readonly type: "number";
                    };
                    readonly attackrange: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackRange";
                        readonly type: "number";
                    };
                    readonly attackspeedoffset: {
                        readonly deprecated: false;
                        readonly title: "LoLAttackSpeedOffset";
                        readonly type: readonly ["number", "null"];
                    };
                    readonly attackspeedperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackSpeedPerLevel";
                        readonly type: "number";
                    };
                    readonly big_image_url: {
                        readonly format: "uri";
                        readonly title: "LoLChampionBigImageURL";
                        readonly type: "string";
                    };
                    readonly crit: {
                        readonly minimum: 0;
                        readonly title: "LoLCrit";
                        readonly type: "number";
                    };
                    readonly critperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLCritPerLevel";
                        readonly type: "number";
                    };
                    readonly hp: {
                        readonly minimum: 0;
                        readonly title: "LoLHP";
                        readonly type: "number";
                    };
                    readonly hpperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLHPPerLevel";
                        readonly type: "number";
                    };
                    readonly hpregen: {
                        readonly minimum: 0;
                        readonly title: "LoLHPRegen";
                        readonly type: "number";
                    };
                    readonly hpregenperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLHPRegenPerLevel";
                        readonly type: "number";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLChampionID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly format: "uri";
                        readonly title: "LoLChampionImageURL";
                        readonly type: "string";
                    };
                    readonly movespeed: {
                        readonly minimum: 0;
                        readonly title: "LoLMoveSpeed";
                        readonly type: "number";
                    };
                    readonly mp: {
                        readonly minimum: 0;
                        readonly title: "LoLMP";
                        readonly type: "number";
                    };
                    readonly mpperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMPPerLevel";
                        readonly type: "number";
                    };
                    readonly mpregen: {
                        readonly minimum: 0;
                        readonly title: "LoLMPRegen";
                        readonly type: "number";
                    };
                    readonly mpregenperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMPRegenPerLevel";
                        readonly type: "number";
                    };
                    readonly name: {
                        readonly title: "LoLChampionName";
                        readonly type: "string";
                    };
                    readonly spellblock: {
                        readonly minimum: 0;
                        readonly title: "LoLMagicResist";
                        readonly type: "number";
                    };
                    readonly spellblockperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMagicResistPerLevel";
                        readonly type: "number";
                    };
                    readonly videogame_versions: {
                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                        readonly items: {
                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                            readonly title: "VideogameVersion";
                            readonly type: "string";
                        };
                        readonly title: "VideogameVersions";
                        readonly type: "array";
                    };
                };
                readonly required: readonly ["armor", "armorperlevel", "attackdamage", "attackdamageperlevel", "attackrange", "attackspeedoffset", "attackspeedperlevel", "big_image_url", "crit", "critperlevel", "hp", "hpperlevel", "hpregen", "hpregenperlevel", "id", "image_url", "movespeed", "mp", "mpperlevel", "mpregen", "mpregenperlevel", "name", "spellblock", "spellblockperlevel", "videogame_versions"];
                readonly title: "LoLChampion";
                readonly type: "object";
            };
            readonly title: "LoLChampions";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolVersionsAllItems: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly flat_armor_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatArmorMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_crit_chance_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatCritChanceMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_hp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPPoolMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_hp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPRegenMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_magic_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMagicDamageMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_mp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPPoolMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_mp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPRegenMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_physical_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatPhysicalDamageMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_spell_block_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatSpellBlockMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_base: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_purchasable: {
                            readonly description: "Whether gold can be bought";
                            readonly title: "LoLGoldPurchasable";
                            readonly type: "boolean";
                        };
                        readonly gold_sell: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_total: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLItemID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLItemName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_attack_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentAttackSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_life_steal_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentLifeStealMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly trinket: {
                            readonly description: "Whether item is a trinket";
                            readonly title: "LoLItemIsTrinket";
                            readonly type: "boolean";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly flat_armor_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatArmorMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_crit_chance_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatCritChanceMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_hp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPPoolMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_hp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPRegenMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_magic_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMagicDamageMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_mp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPPoolMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_mp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPRegenMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_physical_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatPhysicalDamageMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_spell_block_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatSpellBlockMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_base: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_purchasable: {
                            readonly items: {
                                readonly description: "Whether gold can be bought";
                                readonly title: "LoLGoldPurchasable";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_sell: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_total: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLItemID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLItemName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_attack_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentAttackSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_life_steal_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentLifeStealMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["flat_armor_mod", "-flat_armor_mod", "flat_crit_chance_mod", "-flat_crit_chance_mod", "flat_hp_pool_mod", "-flat_hp_pool_mod", "flat_hp_regen_mod", "-flat_hp_regen_mod", "flat_magic_damage_mod", "-flat_magic_damage_mod", "flat_movement_speed_mod", "-flat_movement_speed_mod", "flat_mp_pool_mod", "-flat_mp_pool_mod", "flat_mp_regen_mod", "-flat_mp_regen_mod", "flat_physical_damage_mod", "-flat_physical_damage_mod", "flat_spell_block_mod", "-flat_spell_block_mod", "gold_base", "-gold_base", "gold_purchasable", "-gold_purchasable", "gold_sell", "-gold_sell", "gold_total", "-gold_total", "id", "-id", "name", "-name", "percent_attack_speed_mod", "-percent_attack_speed_mod", "percent_life_steal_mod", "-percent_life_steal_mod", "percent_movement_speed_mod", "-percent_movement_speed_mod"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLItemName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly flat_armor_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatArmorMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_crit_chance_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatCritChanceMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_hp_pool_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatHPPoolMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_hp_regen_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatHPRegenMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_magic_damage_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMagicDamageMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_movement_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMovementSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_mp_pool_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMPPoolMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_mp_regen_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMPRegenMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_physical_damage_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatPhysicalDamageMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_spell_block_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatSpellBlockMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_base: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_purchasable: {
                        readonly deprecated: false;
                        readonly description: "Whether gold can be bought";
                        readonly title: "LoLGoldPurchasable";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly gold_sell: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_total: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLItemID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly deprecated: false;
                        readonly format: "uri";
                        readonly title: "LoLItemImageURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly is_trinket: {
                        readonly deprecated: false;
                        readonly description: "Whether item is a trinket";
                        readonly title: "LoLItemIsTrinket";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly name: {
                        readonly title: "LoLItemName";
                        readonly type: "string";
                    };
                    readonly percent_attack_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentAttackSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_life_steal_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentLifeStealMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_movement_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentMovementSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly videogame_versions: {
                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                        readonly items: {
                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                            readonly title: "VideogameVersion";
                            readonly type: "string";
                        };
                        readonly title: "VideogameVersions";
                        readonly type: "array";
                    };
                };
                readonly required: readonly ["flat_armor_mod", "flat_crit_chance_mod", "flat_hp_pool_mod", "flat_hp_regen_mod", "flat_magic_damage_mod", "flat_movement_speed_mod", "flat_mp_pool_mod", "flat_mp_regen_mod", "flat_physical_damage_mod", "flat_spell_block_mod", "gold_base", "gold_purchasable", "gold_sell", "gold_total", "id", "image_url", "is_trinket", "name", "percent_attack_speed_mod", "percent_life_steal_mod", "percent_movement_speed_mod", "videogame_versions"];
                readonly title: "LoLItem";
                readonly type: "object";
            };
            readonly title: "LoLItems";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolVersionsLolVersionNameChampions: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_version_name: {
                    readonly minimum: 1;
                    readonly title: "LoLVersionName";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Video game version";
                };
            };
            readonly required: readonly ["lol_version_name"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly armor: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmor";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly armorperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmorPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackdamage: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamage";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackdamageperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamagePerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackrange: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackRange";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackspeedoffset: {
                            readonly items: {
                                readonly title: "LoLAttackSpeedOffset";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly attackspeedperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackSpeedPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly crit: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCrit";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly critperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCritPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHP";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegen";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly hpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLChampionID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly movespeed: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMoveSpeed";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMP";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegen";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly mpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly spellblock: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResist";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly spellblockperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResistPerLevel";
                                readonly type: "number";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly armor: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmor";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly armorperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLArmorPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackdamage: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamage";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackdamageperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackDamagePerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackrange: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackRange";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackspeedoffset: {
                            readonly items: {
                                readonly title: "LoLAttackSpeedOffset";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly attackspeedperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLAttackSpeedPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly crit: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCrit";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly critperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLCritPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHP";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegen";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly hpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLHPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLChampionID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly movespeed: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMoveSpeed";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mp: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMP";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpregen: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegen";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly mpregenperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMPRegenPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLChampionName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly spellblock: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResist";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly spellblockperlevel: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLMagicResistPerLevel";
                                readonly type: "number";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["armor", "-armor", "armorperlevel", "-armorperlevel", "attackdamage", "-attackdamage", "attackdamageperlevel", "-attackdamageperlevel", "attackrange", "-attackrange", "attackspeedoffset", "-attackspeedoffset", "attackspeedperlevel", "-attackspeedperlevel", "crit", "-crit", "critperlevel", "-critperlevel", "hp", "-hp", "hpperlevel", "-hpperlevel", "hpregen", "-hpregen", "hpregenperlevel", "-hpregenperlevel", "id", "-id", "movespeed", "-movespeed", "mp", "-mp", "mpperlevel", "-mpperlevel", "mpregen", "-mpregen", "mpregenperlevel", "-mpregenperlevel", "name", "-name", "spellblock", "-spellblock", "spellblockperlevel", "-spellblockperlevel"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLChampionName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly armor: {
                        readonly minimum: 0;
                        readonly title: "LoLArmor";
                        readonly type: "number";
                    };
                    readonly armorperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLArmorPerLevel";
                        readonly type: "number";
                    };
                    readonly attackdamage: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackDamage";
                        readonly type: "number";
                    };
                    readonly attackdamageperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackDamagePerLevel";
                        readonly type: "number";
                    };
                    readonly attackrange: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackRange";
                        readonly type: "number";
                    };
                    readonly attackspeedoffset: {
                        readonly deprecated: false;
                        readonly title: "LoLAttackSpeedOffset";
                        readonly type: readonly ["number", "null"];
                    };
                    readonly attackspeedperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLAttackSpeedPerLevel";
                        readonly type: "number";
                    };
                    readonly big_image_url: {
                        readonly format: "uri";
                        readonly title: "LoLChampionBigImageURL";
                        readonly type: "string";
                    };
                    readonly crit: {
                        readonly minimum: 0;
                        readonly title: "LoLCrit";
                        readonly type: "number";
                    };
                    readonly critperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLCritPerLevel";
                        readonly type: "number";
                    };
                    readonly hp: {
                        readonly minimum: 0;
                        readonly title: "LoLHP";
                        readonly type: "number";
                    };
                    readonly hpperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLHPPerLevel";
                        readonly type: "number";
                    };
                    readonly hpregen: {
                        readonly minimum: 0;
                        readonly title: "LoLHPRegen";
                        readonly type: "number";
                    };
                    readonly hpregenperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLHPRegenPerLevel";
                        readonly type: "number";
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLChampionID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly format: "uri";
                        readonly title: "LoLChampionImageURL";
                        readonly type: "string";
                    };
                    readonly movespeed: {
                        readonly minimum: 0;
                        readonly title: "LoLMoveSpeed";
                        readonly type: "number";
                    };
                    readonly mp: {
                        readonly minimum: 0;
                        readonly title: "LoLMP";
                        readonly type: "number";
                    };
                    readonly mpperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMPPerLevel";
                        readonly type: "number";
                    };
                    readonly mpregen: {
                        readonly minimum: 0;
                        readonly title: "LoLMPRegen";
                        readonly type: "number";
                    };
                    readonly mpregenperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMPRegenPerLevel";
                        readonly type: "number";
                    };
                    readonly name: {
                        readonly title: "LoLChampionName";
                        readonly type: "string";
                    };
                    readonly spellblock: {
                        readonly minimum: 0;
                        readonly title: "LoLMagicResist";
                        readonly type: "number";
                    };
                    readonly spellblockperlevel: {
                        readonly minimum: 0;
                        readonly title: "LoLMagicResistPerLevel";
                        readonly type: "number";
                    };
                    readonly videogame_versions: {
                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                        readonly items: {
                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                            readonly title: "VideogameVersion";
                            readonly type: "string";
                        };
                        readonly title: "VideogameVersions";
                        readonly type: "array";
                    };
                };
                readonly required: readonly ["armor", "armorperlevel", "attackdamage", "attackdamageperlevel", "attackrange", "attackspeedoffset", "attackspeedperlevel", "big_image_url", "crit", "critperlevel", "hp", "hpperlevel", "hpregen", "hpregenperlevel", "id", "image_url", "movespeed", "mp", "mpperlevel", "mpregen", "mpregenperlevel", "name", "spellblock", "spellblockperlevel", "videogame_versions"];
                readonly title: "LoLChampion";
                readonly type: "object";
            };
            readonly title: "LoLChampions";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLolVersionsLolVersionNameItems: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly lol_version_name: {
                    readonly minimum: 1;
                    readonly title: "LoLVersionName";
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Video game version";
                };
            };
            readonly required: readonly ["lol_version_name"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly filter: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly flat_armor_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatArmorMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_crit_chance_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatCritChanceMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_hp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPPoolMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_hp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPRegenMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_magic_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMagicDamageMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_mp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPPoolMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_mp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPRegenMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_physical_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatPhysicalDamageMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly flat_spell_block_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatSpellBlockMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_base: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_purchasable: {
                            readonly description: "Whether gold can be bought";
                            readonly title: "LoLGoldPurchasable";
                            readonly type: "boolean";
                        };
                        readonly gold_sell: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly gold_total: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLItemID";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLItemName";
                                readonly type: "string";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_attack_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentAttackSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_life_steal_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentLifeStealMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly percent_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly minItems: 1;
                            readonly type: "array";
                        };
                        readonly trinket: {
                            readonly description: "Whether item is a trinket";
                            readonly title: "LoLItemIsTrinket";
                            readonly type: "boolean";
                        };
                        readonly videogame_version: {
                            readonly description: "Filter by the names of videogame versions, all versions using `filter[videogame_version]=all`, or by the latest version using `filter[videogame_version]=latest`";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to filter results. String fields are case sensitive\nFor more information on filtering, see [docs](/docs/filtering-and-sorting#filter).";
                };
                readonly range: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly flat_armor_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatArmorMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_crit_chance_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatCritChanceMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_hp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPPoolMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_hp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatHPRegenMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_magic_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMagicDamageMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_mp_pool_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPPoolMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_mp_regen_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatMPRegenMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_physical_damage_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatPhysicalDamageMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly flat_spell_block_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLFlatSpellBlockMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_base: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_purchasable: {
                            readonly items: {
                                readonly description: "Whether gold can be bought";
                                readonly title: "LoLGoldPurchasable";
                                readonly type: "boolean";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_sell: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly gold_total: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLGold";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly id: {
                            readonly items: {
                                readonly minimum: 1;
                                readonly title: "LoLItemID";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly items: {
                                readonly title: "LoLItemName";
                                readonly type: "string";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_attack_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentAttackSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_life_steal_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentLifeStealMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                        readonly percent_movement_speed_mod: {
                            readonly items: {
                                readonly minimum: 0;
                                readonly title: "LoLPercentMovementSpeedMod";
                                readonly type: "integer";
                            };
                            readonly maxItems: 2;
                            readonly minItems: 2;
                            readonly type: "array";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to select results within ranges\nFor more information on ranges, see [docs](/docs/filtering-and-sorting#range).";
                };
                readonly sort: {
                    readonly items: {
                        readonly enum: readonly ["flat_armor_mod", "-flat_armor_mod", "flat_crit_chance_mod", "-flat_crit_chance_mod", "flat_hp_pool_mod", "-flat_hp_pool_mod", "flat_hp_regen_mod", "-flat_hp_regen_mod", "flat_magic_damage_mod", "-flat_magic_damage_mod", "flat_movement_speed_mod", "-flat_movement_speed_mod", "flat_mp_pool_mod", "-flat_mp_pool_mod", "flat_mp_regen_mod", "-flat_mp_regen_mod", "flat_physical_damage_mod", "-flat_physical_damage_mod", "flat_spell_block_mod", "-flat_spell_block_mod", "gold_base", "-gold_base", "gold_purchasable", "-gold_purchasable", "gold_sell", "-gold_sell", "gold_total", "-gold_total", "id", "-id", "name", "-name", "percent_attack_speed_mod", "-percent_attack_speed_mod", "percent_life_steal_mod", "-percent_life_steal_mod", "percent_movement_speed_mod", "-percent_movement_speed_mod"];
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to sort results\nFor more information on sorting, see [docs](/docs/filtering-and-sorting#sort).";
                };
                readonly search: {
                    readonly additionalProperties: false;
                    readonly minProperties: 1;
                    readonly properties: {
                        readonly name: {
                            readonly title: "LoLItemName";
                            readonly type: "string";
                        };
                    };
                    readonly type: "object";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Options to search results\nFor more information on searching, see [docs](/docs/filtering-and-sorting#search).";
                };
                readonly page: {
                    readonly oneOf: readonly [{
                        readonly default: 1;
                        readonly minimum: 1;
                        readonly type: "integer";
                    }, {
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly number: {
                                readonly default: 1;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                            readonly size: {
                                readonly default: 50;
                                readonly maximum: 100;
                                readonly minimum: 1;
                                readonly type: "integer";
                            };
                        };
                        readonly type: "object";
                    }];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Pagination in the form of `page=2` or `page[size]=30&page[number]=2`";
                };
                readonly per_page: {
                    readonly default: 50;
                    readonly maximum: 100;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [5];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Equivalent to `page[size]`";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly items: {
                readonly additionalProperties: false;
                readonly deprecated: false;
                readonly properties: {
                    readonly flat_armor_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatArmorMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_crit_chance_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatCritChanceMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_hp_pool_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatHPPoolMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_hp_regen_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatHPRegenMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_magic_damage_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMagicDamageMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_movement_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMovementSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_mp_pool_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMPPoolMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_mp_regen_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatMPRegenMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_physical_damage_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatPhysicalDamageMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly flat_spell_block_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLFlatSpellBlockMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_base: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_purchasable: {
                        readonly deprecated: false;
                        readonly description: "Whether gold can be bought";
                        readonly title: "LoLGoldPurchasable";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly gold_sell: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly gold_total: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLGold";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly id: {
                        readonly minimum: 1;
                        readonly title: "LoLItemID";
                        readonly type: "integer";
                    };
                    readonly image_url: {
                        readonly deprecated: false;
                        readonly format: "uri";
                        readonly title: "LoLItemImageURL";
                        readonly type: readonly ["string", "null"];
                    };
                    readonly is_trinket: {
                        readonly deprecated: false;
                        readonly description: "Whether item is a trinket";
                        readonly title: "LoLItemIsTrinket";
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly name: {
                        readonly title: "LoLItemName";
                        readonly type: "string";
                    };
                    readonly percent_attack_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentAttackSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_life_steal_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentLifeStealMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_movement_speed_mod: {
                        readonly deprecated: false;
                        readonly minimum: 0;
                        readonly title: "LoLPercentMovementSpeedMod";
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly videogame_versions: {
                        readonly description: "Array of of video game versions (ie. patches) for this resource";
                        readonly items: {
                            readonly pattern: "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$";
                            readonly title: "VideogameVersion";
                            readonly type: "string";
                        };
                        readonly title: "VideogameVersions";
                        readonly type: "array";
                    };
                };
                readonly required: readonly ["flat_armor_mod", "flat_crit_chance_mod", "flat_hp_pool_mod", "flat_hp_regen_mod", "flat_magic_damage_mod", "flat_movement_speed_mod", "flat_mp_pool_mod", "flat_mp_regen_mod", "flat_physical_damage_mod", "flat_spell_block_mod", "gold_base", "gold_purchasable", "gold_sell", "gold_total", "id", "image_url", "is_trinket", "name", "percent_attack_speed_mod", "percent_life_steal_mod", "percent_movement_speed_mod", "videogame_versions"];
                readonly title: "LoLItem";
                readonly type: "object";
            };
            readonly title: "LoLItems";
            readonly type: "array";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "400": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly properties: {
                readonly error: {
                    readonly type: "string";
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
export { GetLolChampions, GetLolChampionsLolChampionId, GetLolGamesLolGameId, GetLolGamesLolGameIdEvents, GetLolGamesLolGameIdFrames, GetLolItems, GetLolItemsLolItemId, GetLolLeagues, GetLolMasteries, GetLolMasteriesLolMasteryId, GetLolMatches, GetLolMatchesMatchIdOrSlug, GetLolMatchesMatchIdOrSlugGames, GetLolMatchesMatchIdOrSlugPlayersStats, GetLolMatchesPast, GetLolMatchesRunning, GetLolMatchesUpcoming, GetLolPlayers, GetLolPlayersPlayerIdOrSlugStats, GetLolRunes, GetLolRunesLolRuneId, GetLolRunesReforged, GetLolRunesReforgedLolRuneReforgedId, GetLolRunesReforgedPaths, GetLolRunesReforgedPathsLolRunePathId, GetLolSeries, GetLolSeriesPast, GetLolSeriesRunning, GetLolSeriesSerieIdOrSlugPlayersPlayerIdOrSlugStats, GetLolSeriesSerieIdOrSlugTeams, GetLolSeriesSerieIdOrSlugTeamsStats, GetLolSeriesSerieIdOrSlugTeamsTeamIdOrSlugStats, GetLolSeriesUpcoming, GetLolSpells, GetLolSpellsLolSpellId, GetLolTeams, GetLolTeamsTeamIdOrSlugGames, GetLolTeamsTeamIdOrSlugStats, GetLolTournaments, GetLolTournamentsPast, GetLolTournamentsRunning, GetLolTournamentsTournamentIdOrSlugPlayersPlayerIdOrSlugStats, GetLolTournamentsTournamentIdOrSlugTeamsTeamIdOrSlugStats, GetLolTournamentsUpcoming, GetLolVersionsAllChampions, GetLolVersionsAllItems, GetLolVersionsLolVersionNameChampions, GetLolVersionsLolVersionNameItems };
